2025-02-19 12:11:24,672:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-19 12:11:24,672:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-19 12:11:24,672:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-19 12:11:24,673:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-19 13:11:15,915:INFO:PyCaret ClassificationExperiment
2025-02-19 13:11:15,916:INFO:Logging name: clf-default-name
2025-02-19 13:11:15,916:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-19 13:11:15,917:INFO:version 3.3.2
2025-02-19 13:11:15,917:INFO:Initializing setup()
2025-02-19 13:11:15,917:INFO:self.USI: 307e
2025-02-19 13:11:15,917:INFO:self._variable_keys: {'y_train', 'y', 'fold_shuffle_param', 'data', 'memory', '_ml_usecase', 'fold_groups_param', 'gpu_n_jobs_param', 'exp_name_log', '_available_plots', 'logging_param', 'n_jobs_param', 'X', 'fold_generator', 'target_param', 'exp_id', 'log_plots_param', 'gpu_param', 'USI', 'pipeline', 'html_param', 'is_multiclass', 'fix_imbalance', 'idx', 'seed', 'y_test', 'X_test', 'X_train'}
2025-02-19 13:11:15,917:INFO:Checking environment
2025-02-19 13:11:15,917:INFO:python_version: 3.10.12
2025-02-19 13:11:15,917:INFO:python_build: ('main', 'Jan 15 2024 21:14:33')
2025-02-19 13:11:15,917:INFO:machine: x86_64
2025-02-19 13:11:15,917:INFO:platform: Linux-5.15.0-131-generic-x86_64-with-glibc2.31
2025-02-19 13:11:15,918:INFO:Memory: svmem(total=7813279744, available=1241440256, percent=84.1, used=5532532736, free=396541952, active=1948180480, inactive=4858413056, buffers=73564160, cached=1810640896, shared=642027520, slab=318103552)
2025-02-19 13:11:15,919:INFO:Physical Core: 2
2025-02-19 13:11:15,919:INFO:Logical Core: 4
2025-02-19 13:11:15,919:INFO:Checking libraries
2025-02-19 13:11:15,919:INFO:System:
2025-02-19 13:11:15,919:INFO:    python: 3.10.12 (main, Jan 15 2024, 21:14:33) [GCC 9.4.0]
2025-02-19 13:11:15,919:INFO:executable: /home/dsg/vortex/venv/bin/python3
2025-02-19 13:11:15,919:INFO:   machine: Linux-5.15.0-131-generic-x86_64-with-glibc2.31
2025-02-19 13:11:15,919:INFO:PyCaret required dependencies:
2025-02-19 13:11:16,693:INFO:                 pip: 23.3.2
2025-02-19 13:11:16,693:INFO:          setuptools: 65.5.0
2025-02-19 13:11:16,693:INFO:             pycaret: 3.3.2
2025-02-19 13:11:16,693:INFO:             IPython: 8.20.0
2025-02-19 13:11:16,693:INFO:          ipywidgets: 8.1.1
2025-02-19 13:11:16,693:INFO:                tqdm: 4.66.1
2025-02-19 13:11:16,693:INFO:               numpy: 1.24.4
2025-02-19 13:11:16,693:INFO:              pandas: 1.5.3
2025-02-19 13:11:16,693:INFO:              jinja2: 3.1.3
2025-02-19 13:11:16,693:INFO:               scipy: 1.10.1
2025-02-19 13:11:16,693:INFO:              joblib: 1.3.2
2025-02-19 13:11:16,694:INFO:             sklearn: 1.2.2
2025-02-19 13:11:16,694:INFO:                pyod: 1.1.2
2025-02-19 13:11:16,694:INFO:            imblearn: 0.12.3
2025-02-19 13:11:16,694:INFO:   category_encoders: 2.6.3
2025-02-19 13:11:16,694:INFO:            lightgbm: 4.2.0
2025-02-19 13:11:16,694:INFO:               numba: 0.58.1
2025-02-19 13:11:16,694:INFO:            requests: 2.31.0
2025-02-19 13:11:16,694:INFO:          matplotlib: 3.6.0
2025-02-19 13:11:16,694:INFO:          scikitplot: 0.3.7
2025-02-19 13:11:16,694:INFO:         yellowbrick: 1.5
2025-02-19 13:11:16,694:INFO:              plotly: 5.18.0
2025-02-19 13:11:16,694:INFO:    plotly-resampler: Not installed
2025-02-19 13:11:16,694:INFO:             kaleido: 0.2.1
2025-02-19 13:11:16,694:INFO:           schemdraw: 0.15
2025-02-19 13:11:16,695:INFO:         statsmodels: 0.14.1
2025-02-19 13:11:16,695:INFO:              sktime: 0.21.1
2025-02-19 13:11:16,695:INFO:               tbats: 1.1.3
2025-02-19 13:11:16,695:INFO:            pmdarima: 2.0.4
2025-02-19 13:11:16,695:INFO:              psutil: 5.9.7
2025-02-19 13:11:16,695:INFO:          markupsafe: 2.1.3
2025-02-19 13:11:16,695:INFO:             pickle5: Not installed
2025-02-19 13:11:16,695:INFO:         cloudpickle: 2.2.1
2025-02-19 13:11:16,695:INFO:         deprecation: 2.1.0
2025-02-19 13:11:16,695:INFO:              xxhash: 3.4.1
2025-02-19 13:11:16,695:INFO:           wurlitzer: 3.0.3
2025-02-19 13:11:16,695:INFO:PyCaret optional dependencies:
2025-02-19 13:11:18,084:INFO:                shap: 0.44.0
2025-02-19 13:11:18,084:INFO:           interpret: 0.5.0
2025-02-19 13:11:18,084:INFO:                umap: 0.5.5
2025-02-19 13:11:18,084:INFO:     ydata_profiling: 4.6.0
2025-02-19 13:11:18,084:INFO:  explainerdashboard: 0.4.5
2025-02-19 13:11:18,085:INFO:             autoviz: 0.1.804
2025-02-19 13:11:18,085:INFO:           fairlearn: 0.7.0
2025-02-19 13:11:18,085:INFO:          deepchecks: Not installed
2025-02-19 13:11:18,085:INFO:             xgboost: 1.6.2
2025-02-19 13:11:18,085:INFO:            catboost: 1.2.2
2025-02-19 13:11:18,085:INFO:              kmodes: 0.12.2
2025-02-19 13:11:18,085:INFO:             mlxtend: 0.23.1
2025-02-19 13:11:18,085:INFO:       statsforecast: 1.5.0
2025-02-19 13:11:18,085:INFO:        tune_sklearn: 0.5.0
2025-02-19 13:11:18,085:INFO:                 ray: 2.9.0
2025-02-19 13:11:18,085:INFO:            hyperopt: 0.2.7
2025-02-19 13:11:18,085:INFO:              optuna: 3.5.0
2025-02-19 13:11:18,085:INFO:               skopt: 0.9.0
2025-02-19 13:11:18,085:INFO:              mlflow: 1.30.1
2025-02-19 13:11:18,085:INFO:              gradio: 3.50.2
2025-02-19 13:11:18,085:INFO:             fastapi: 0.109.0
2025-02-19 13:11:18,085:INFO:             uvicorn: 0.25.0
2025-02-19 13:11:18,085:INFO:              m2cgen: 0.10.0
2025-02-19 13:11:18,085:INFO:           evidently: 0.2.8
2025-02-19 13:11:18,085:INFO:               fugue: 0.8.6
2025-02-19 13:11:18,085:INFO:           streamlit: Not installed
2025-02-19 13:11:18,085:INFO:             prophet: Not installed
2025-02-19 13:11:18,085:INFO:None
2025-02-19 13:11:18,085:INFO:Set up data.
2025-02-19 13:11:18,108:INFO:Set up folding strategy.
2025-02-19 13:11:18,108:INFO:Set up train/test split.
2025-02-19 13:11:18,120:INFO:Set up index.
2025-02-19 13:11:18,120:INFO:Assigning column types.
2025-02-19 13:11:18,124:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-19 13:11:18,171:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-19 13:11:18,175:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-19 13:11:18,208:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-19 13:11:18,257:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-19 13:11:18,464:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-19 13:11:18,465:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-19 13:11:18,491:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-19 13:11:18,494:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-19 13:11:18,495:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-19 13:11:18,539:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-19 13:11:18,565:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-19 13:11:18,568:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-19 13:11:18,621:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-19 13:11:18,647:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-19 13:11:18,650:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-19 13:11:18,651:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-19 13:11:18,722:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-19 13:11:18,725:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-19 13:11:18,797:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-19 13:11:18,800:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-19 13:11:18,803:INFO:Preparing preprocessing pipeline...
2025-02-19 13:11:18,805:INFO:Set up label encoding.
2025-02-19 13:11:18,805:INFO:Set up simple imputation.
2025-02-19 13:11:18,848:INFO:Finished creating preprocessing pipeline.
2025-02-19 13:11:18,854:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Al', 'Si', 'P', 'S', 'Cl', 'K',
                                             'Ca', 'Sc', 'Ti', 'V', 'Cr', 'Mn',
                                             'Fe', 'Co', 'Ni', 'Cu', 'Zn', 'Ga',
                                             'Ge', 'As', 'Se', 'Br', 'Rb', 'Sr',
                                             'Y', 'Zr', 'Nb'...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-02-19 13:11:18,854:INFO:Creating final display dataframe.
2025-02-19 13:11:18,955:INFO:Setup _display_container:                     Description                   Value
0                    Session id                     123
1                        Target                    Site
2                   Target type              Multiclass
3                Target mapping  CT: 0, PCM: 1, PDLC: 2
4           Original data shape              (2256, 46)
5        Transformed data shape              (2256, 46)
6   Transformed train set shape              (1804, 46)
7    Transformed test set shape               (452, 46)
8              Numeric features                      45
9                    Preprocess                    True
10              Imputation type                  simple
11           Numeric imputation                    mean
12       Categorical imputation                    mode
13               Fold Generator         StratifiedKFold
14                  Fold Number                      10
15                     CPU Jobs                      -1
16                      Use GPU                   False
17               Log Experiment                   False
18              Experiment Name        clf-default-name
19                          USI                    307e
2025-02-19 13:11:19,087:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-19 13:11:19,091:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-19 13:11:19,196:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-19 13:11:19,200:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-19 13:11:19,202:INFO:setup() successfully completed in 3.29s...............
2025-02-19 13:11:27,987:INFO:Initializing create_model()
2025-02-19 13:11:27,994:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3c7153cbe0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={'class_weight': 'balanced', 'criterion': 'entropy'})
2025-02-19 13:11:27,994:INFO:Checking exceptions
2025-02-19 13:11:28,072:INFO:Importing libraries
2025-02-19 13:11:28,073:INFO:Copying training dataset
2025-02-19 13:11:28,088:INFO:Defining folds
2025-02-19 13:11:28,088:INFO:Declaring metric variables
2025-02-19 13:11:28,095:INFO:Importing untrained model
2025-02-19 13:11:28,110:INFO:Random Forest Classifier Imported successfully
2025-02-19 13:11:28,131:INFO:Starting cross validation
2025-02-19 13:11:28,135:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 13:11:36,671:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:11:36,678:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:11:36,681:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:11:36,685:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:11:36,689:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:11:36,696:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:11:36,719:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:11:36,720:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:11:36,728:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:11:36,728:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:11:36,736:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:11:36,736:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:11:38,195:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:11:38,202:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:11:38,206:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:11:38,209:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:11:38,212:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:11:38,219:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:11:38,245:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:11:38,256:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:11:38,269:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:11:38,280:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:11:38,286:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:11:38,296:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:11:38,994:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:11:39,002:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:11:39,009:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:11:39,012:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:11:39,019:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:11:39,026:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:11:39,040:INFO:Calculating mean and std
2025-02-19 13:11:39,042:INFO:Creating metrics dataframe
2025-02-19 13:11:39,058:INFO:Finalizing model
2025-02-19 13:11:39,674:INFO:Uploading results into container
2025-02-19 13:11:39,676:INFO:Uploading model into container now
2025-02-19 13:11:39,699:INFO:_master_model_container: 1
2025-02-19 13:11:39,699:INFO:_display_container: 2
2025-02-19 13:11:39,700:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-02-19 13:11:39,700:INFO:create_model() successfully completed......................................
2025-02-19 13:12:02,317:INFO:Initializing tune_model()
2025-02-19 13:12:02,319:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid={'criterion': ['entropy']}, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3c7153cbe0>)
2025-02-19 13:12:02,320:INFO:Checking exceptions
2025-02-19 13:12:02,371:INFO:Copying training dataset
2025-02-19 13:12:02,377:INFO:Checking base model
2025-02-19 13:12:02,378:INFO:Base model : Random Forest Classifier
2025-02-19 13:12:02,384:INFO:Declaring metric variables
2025-02-19 13:12:02,390:INFO:Defining Hyperparameters
2025-02-19 13:12:02,565:INFO:custom_grid: {'actual_estimator__criterion': ['entropy']}
2025-02-19 13:12:02,565:INFO:Tuning with n_jobs=-1
2025-02-19 13:12:02,566:INFO:Initializing RandomizedSearchCV
2025-02-19 13:12:02,575:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/model_selection/_search.py:318: UserWarning: The total space of parameters 1 is smaller than n_iter=10. Running 1 iterations. For exhaustive searches, use GridSearchCV.
  warnings.warn(

2025-02-19 13:12:03,913:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:03,937:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:03,996:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:04,163:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:05,371:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:05,384:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:05,423:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:05,761:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:06,285:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:06,328:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:06,342:INFO:best_params: {'actual_estimator__criterion': 'entropy'}
2025-02-19 13:12:06,343:INFO:Hyperparameter search completed
2025-02-19 13:12:06,343:INFO:SubProcess create_model() called ==================================
2025-02-19 13:12:06,344:INFO:Initializing create_model()
2025-02-19 13:12:06,344:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3c7153cbe0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3c71b67b50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'criterion': 'entropy'})
2025-02-19 13:12:06,346:INFO:Checking exceptions
2025-02-19 13:12:06,346:INFO:Importing libraries
2025-02-19 13:12:06,347:INFO:Copying training dataset
2025-02-19 13:12:06,358:INFO:Defining folds
2025-02-19 13:12:06,358:INFO:Declaring metric variables
2025-02-19 13:12:06,367:INFO:Importing untrained model
2025-02-19 13:12:06,367:INFO:Declaring custom model
2025-02-19 13:12:06,379:INFO:Random Forest Classifier Imported successfully
2025-02-19 13:12:06,396:INFO:Starting cross validation
2025-02-19 13:12:06,398:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 13:12:07,893:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:07,901:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:07,918:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:08,106:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:08,106:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:08,115:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:08,121:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:08,130:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:08,132:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:08,133:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:08,139:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:08,146:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:09,266:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:09,274:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:09,313:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:09,442:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:09,450:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:09,462:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:09,558:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:09,568:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:09,570:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:09,588:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:09,599:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:09,601:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:10,232:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:10,239:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:10,247:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:10,312:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:10,321:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:10,330:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:10,341:INFO:Calculating mean and std
2025-02-19 13:12:10,343:INFO:Creating metrics dataframe
2025-02-19 13:12:10,362:INFO:Finalizing model
2025-02-19 13:12:11,041:INFO:Uploading results into container
2025-02-19 13:12:11,042:INFO:Uploading model into container now
2025-02-19 13:12:11,043:INFO:_master_model_container: 2
2025-02-19 13:12:11,043:INFO:_display_container: 3
2025-02-19 13:12:11,044:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-02-19 13:12:11,044:INFO:create_model() successfully completed......................................
2025-02-19 13:12:11,181:INFO:SubProcess create_model() end ==================================
2025-02-19 13:12:11,181:INFO:choose_better activated
2025-02-19 13:12:11,189:INFO:SubProcess create_model() called ==================================
2025-02-19 13:12:11,192:INFO:Initializing create_model()
2025-02-19 13:12:11,192:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3c7153cbe0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 13:12:11,193:INFO:Checking exceptions
2025-02-19 13:12:11,197:INFO:Importing libraries
2025-02-19 13:12:11,197:INFO:Copying training dataset
2025-02-19 13:12:11,204:INFO:Defining folds
2025-02-19 13:12:11,204:INFO:Declaring metric variables
2025-02-19 13:12:11,205:INFO:Importing untrained model
2025-02-19 13:12:11,205:INFO:Declaring custom model
2025-02-19 13:12:11,206:INFO:Random Forest Classifier Imported successfully
2025-02-19 13:12:11,207:INFO:Starting cross validation
2025-02-19 13:12:11,209:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 13:12:12,687:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:12,704:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:12,713:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:12,716:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:12,729:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:12,732:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:12,806:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:12,825:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:12,833:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:12,923:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:12,936:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:12,957:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:14,219:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:14,230:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:14,237:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:14,444:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:14,454:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:14,461:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:14,521:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:14,529:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:14,536:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:14,559:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:14,565:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:14,571:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:15,312:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:15,322:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:15,328:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:15,455:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:15,473:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:15,487:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:12:15,493:INFO:Calculating mean and std
2025-02-19 13:12:15,493:INFO:Creating metrics dataframe
2025-02-19 13:12:15,497:INFO:Finalizing model
2025-02-19 13:12:16,015:INFO:Uploading results into container
2025-02-19 13:12:16,016:INFO:Uploading model into container now
2025-02-19 13:12:16,016:INFO:_master_model_container: 3
2025-02-19 13:12:16,016:INFO:_display_container: 4
2025-02-19 13:12:16,017:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-02-19 13:12:16,017:INFO:create_model() successfully completed......................................
2025-02-19 13:12:16,158:INFO:SubProcess create_model() end ==================================
2025-02-19 13:12:16,159:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for F1 is 0.9711
2025-02-19 13:12:16,160:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for F1 is 0.9711
2025-02-19 13:12:16,161:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) is best model
2025-02-19 13:12:16,162:INFO:choose_better completed
2025-02-19 13:12:16,162:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-02-19 13:12:16,186:INFO:_master_model_container: 3
2025-02-19 13:12:16,186:INFO:_display_container: 3
2025-02-19 13:12:16,188:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-02-19 13:12:16,188:INFO:tune_model() successfully completed......................................
2025-02-19 13:12:56,910:INFO:Initializing calibrate_model()
2025-02-19 13:12:56,914:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3c7153cbe0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-02-19 13:12:56,914:INFO:Checking exceptions
2025-02-19 13:12:56,918:INFO:Preloading libraries
2025-02-19 13:12:56,918:INFO:Preparing display monitor
2025-02-19 13:12:56,959:INFO:Getting model name
2025-02-19 13:12:56,960:INFO:Base model : Random Forest Classifier
2025-02-19 13:12:56,979:INFO:Importing untrained CalibratedClassifierCV
2025-02-19 13:12:56,979:INFO:SubProcess create_model() called ==================================
2025-02-19 13:12:56,986:INFO:Initializing create_model()
2025-02-19 13:12:56,986:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3c7153cbe0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight='balanced',
                                                        criterion='entropy',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=123,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f3c719de740>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 13:12:56,987:INFO:Checking exceptions
2025-02-19 13:12:56,987:INFO:Importing libraries
2025-02-19 13:12:56,987:INFO:Copying training dataset
2025-02-19 13:12:57,000:INFO:Defining folds
2025-02-19 13:12:57,000:INFO:Declaring metric variables
2025-02-19 13:12:57,010:INFO:Importing untrained model
2025-02-19 13:12:57,011:INFO:Declaring custom model
2025-02-19 13:12:57,021:INFO:Random Forest Classifier Imported successfully
2025-02-19 13:12:57,034:INFO:Starting cross validation
2025-02-19 13:12:57,036:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-19 13:13:03,033:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:03,040:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:03,047:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:03,096:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:03,103:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:03,109:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:03,211:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:03,218:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:03,224:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:03,637:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:03,684:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:03,693:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:08,724:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:08,736:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:08,739:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:08,744:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:08,747:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:08,755:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:09,331:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:09,338:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:09,344:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:09,608:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:09,615:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:09,622:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:12,721:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:12,727:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:12,734:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:12,813:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:12,817:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:12,821:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:12,828:INFO:Calculating mean and std
2025-02-19 13:13:12,829:INFO:Creating metrics dataframe
2025-02-19 13:13:12,838:INFO:Finalizing model
2025-02-19 13:13:15,349:INFO:Uploading results into container
2025-02-19 13:13:15,350:INFO:Uploading model into container now
2025-02-19 13:13:15,351:INFO:_master_model_container: 4
2025-02-19 13:13:15,351:INFO:_display_container: 4
2025-02-19 13:13:15,354:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight='balanced',
                                                        criterion='entropy',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=123,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-02-19 13:13:15,354:INFO:create_model() successfully completed......................................
2025-02-19 13:13:15,489:INFO:SubProcess create_model() end ==================================
2025-02-19 13:13:15,529:INFO:_master_model_container: 4
2025-02-19 13:13:15,529:INFO:_display_container: 4
2025-02-19 13:13:15,531:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight='balanced',
                                                        criterion='entropy',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=123,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-02-19 13:13:15,531:INFO:calibrate_model() successfully completed......................................
2025-02-19 13:13:22,020:INFO:Initializing finalize_model()
2025-02-19 13:13:22,021:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3c7153cbe0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight='balanced',
                                                        criterion='entropy',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=123,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-02-19 13:13:22,032:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight='balanced',
                                                        criterion='entropy',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=123,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-02-19 13:13:22,059:INFO:Initializing create_model()
2025-02-19 13:13:22,060:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3c7153cbe0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight='balanced',
                                                        criterion='entropy',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=1,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=123,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-02-19 13:13:22,060:INFO:Checking exceptions
2025-02-19 13:13:22,067:INFO:Importing libraries
2025-02-19 13:13:22,068:INFO:Copying training dataset
2025-02-19 13:13:22,069:INFO:Defining folds
2025-02-19 13:13:22,069:INFO:Declaring metric variables
2025-02-19 13:13:22,070:INFO:Importing untrained model
2025-02-19 13:13:22,071:INFO:Declaring custom model
2025-02-19 13:13:22,076:INFO:Random Forest Classifier Imported successfully
2025-02-19 13:13:22,080:INFO:Cross validation set to False
2025-02-19 13:13:22,080:INFO:Fitting Model
2025-02-19 13:13:24,923:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Al', 'Si', 'P', 'S', 'Cl', 'K',
                                             'Ca', 'Sc', 'Ti', 'V', 'Cr', 'Mn',
                                             'Fe', 'Co', 'Ni', 'Cu', 'Zn', 'Ga',
                                             'Ge', 'As', 'Se', 'Br', 'Rb', 'Sr',
                                             'Y', 'Zr', 'Nb', 'Mo', 'Ru',...
                                                                         class_weight='balanced',
                                                                         criterion='entropy',
                                                                         max_depth=None,
                                                                         max_features='sqrt',
                                                                         max_leaf_nodes=None,
                                                                         max_samples=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         n_estimators=100,
                                                                         n_jobs=-1,
                                                                         oob_score=False,
                                                                         random_state=123,
                                                                         verbose=0,
                                                                         warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-02-19 13:13:24,923:INFO:create_model() successfully completed......................................
2025-02-19 13:13:25,059:INFO:_master_model_container: 4
2025-02-19 13:13:25,059:INFO:_display_container: 4
2025-02-19 13:13:25,077:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Al', 'Si', 'P', 'S', 'Cl', 'K',
                                             'Ca', 'Sc', 'Ti', 'V', 'Cr', 'Mn',
                                             'Fe', 'Co', 'Ni', 'Cu', 'Zn', 'Ga',
                                             'Ge', 'As', 'Se', 'Br', 'Rb', 'Sr',
                                             'Y', 'Zr', 'Nb', 'Mo', 'Ru',...
                                                                         class_weight='balanced',
                                                                         criterion='entropy',
                                                                         max_depth=None,
                                                                         max_features='sqrt',
                                                                         max_leaf_nodes=None,
                                                                         max_samples=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         n_estimators=100,
                                                                         n_jobs=-1,
                                                                         oob_score=False,
                                                                         random_state=123,
                                                                         verbose=0,
                                                                         warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-02-19 13:13:25,077:INFO:finalize_model() successfully completed......................................
2025-02-19 13:13:33,133:INFO:Initializing predict_model()
2025-02-19 13:13:33,134:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3c7153cbe0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Al', 'Si', 'P', 'S', 'Cl', 'K',
                                             'Ca', 'Sc', 'Ti', 'V', 'Cr', 'Mn',
                                             'Fe', 'Co', 'Ni', 'Cu', 'Zn', 'Ga',
                                             'Ge', 'As', 'Se', 'Br', 'Rb', 'Sr',
                                             'Y', 'Zr', 'Nb', 'Mo', 'Ru',...
                                                                         class_weight='balanced',
                                                                         criterion='entropy',
                                                                         max_depth=None,
                                                                         max_features='sqrt',
                                                                         max_leaf_nodes=None,
                                                                         max_samples=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         n_estimators=100,
                                                                         n_jobs=-1,
                                                                         oob_score=False,
                                                                         random_state=123,
                                                                         verbose=0,
                                                                         warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7f3c69eb7010>)
2025-02-19 13:13:33,134:INFO:Checking exceptions
2025-02-19 13:13:33,134:INFO:Preloading libraries
2025-02-19 13:13:33,137:INFO:Set up data.
2025-02-19 13:13:33,162:INFO:Set up index.
2025-02-19 13:13:33,660:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:33,674:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:33,687:WARNING:/home/dsg/vortex/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-19 13:13:58,663:INFO:Initializing save_model()
2025-02-19 13:13:58,664:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Al', 'Si', 'P', 'S', 'Cl', 'K',
                                             'Ca', 'Sc', 'Ti', 'V', 'Cr', 'Mn',
                                             'Fe', 'Co', 'Ni', 'Cu', 'Zn', 'Ga',
                                             'Ge', 'As', 'Se', 'Br', 'Rb', 'Sr',
                                             'Y', 'Zr', 'Nb', 'Mo', 'Ru',...
                                                                         class_weight='balanced',
                                                                         criterion='entropy',
                                                                         max_depth=None,
                                                                         max_features='sqrt',
                                                                         max_leaf_nodes=None,
                                                                         max_samples=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         n_estimators=100,
                                                                         n_jobs=-1,
                                                                         oob_score=False,
                                                                         random_state=123,
                                                                         verbose=0,
                                                                         warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False), model_name=/home/dsg/vortex/PRODUCTION/outputs/models/VortexCalibrated, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Al', 'Si', 'P', 'S', 'Cl', 'K',
                                             'Ca', 'Sc', 'Ti', 'V', 'Cr', 'Mn',
                                             'Fe', 'Co', 'Ni', 'Cu', 'Zn', 'Ga',
                                             'Ge', 'As', 'Se', 'Br', 'Rb', 'Sr',
                                             'Y', 'Zr', 'Nb'...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-19 13:13:58,664:INFO:Adding model into prep_pipe
2025-02-19 13:13:58,664:WARNING:Only Model saved as it was a pipeline.
2025-02-19 13:13:59,074:INFO:/home/dsg/vortex/PRODUCTION/outputs/models/VortexCalibrated.pkl saved in current working directory
2025-02-19 13:13:59,082:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Al', 'Si', 'P', 'S', 'Cl', 'K',
                                             'Ca', 'Sc', 'Ti', 'V', 'Cr', 'Mn',
                                             'Fe', 'Co', 'Ni', 'Cu', 'Zn', 'Ga',
                                             'Ge', 'As', 'Se', 'Br', 'Rb', 'Sr',
                                             'Y', 'Zr', 'Nb', 'Mo', 'Ru',...
                                                                         class_weight='balanced',
                                                                         criterion='entropy',
                                                                         max_depth=None,
                                                                         max_features='sqrt',
                                                                         max_leaf_nodes=None,
                                                                         max_samples=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=1,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         n_estimators=100,
                                                                         n_jobs=-1,
                                                                         oob_score=False,
                                                                         random_state=123,
                                                                         verbose=0,
                                                                         warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-02-19 13:13:59,082:INFO:save_model() successfully completed......................................
2025-02-20 15:30:04,660:INFO:Initializing evaluate_model()
2025-02-20 15:30:04,666:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3c7153cbe0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-02-20 15:30:05,030:INFO:Initializing plot_model()
2025-02-20 15:30:05,030:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3c7153cbe0>, system=True)
2025-02-20 15:30:05,031:INFO:Checking exceptions
2025-02-20 15:30:05,279:INFO:Preloading libraries
2025-02-20 15:30:05,500:INFO:Copying training dataset
2025-02-20 15:30:05,501:INFO:Plot type: pipeline
2025-02-20 15:30:06,484:INFO:Visual Rendered Successfully
2025-02-20 15:30:12,284:INFO:plot_model() successfully completed......................................
2025-02-20 15:30:15,419:INFO:Initializing plot_model()
2025-02-20 15:30:15,420:INFO:plot_model(plot=calibration, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f3c7153cbe0>, system=True)
2025-02-20 15:30:15,420:INFO:Checking exceptions
2025-02-24 13:01:03,903:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-24 13:01:03,904:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-24 13:01:03,904:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-24 13:01:03,904:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-24 13:27:48,737:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-24 13:27:48,738:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-24 13:27:48,738:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-24 13:27:48,738:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-24 13:39:44,853:INFO:PyCaret ClassificationExperiment
2025-02-24 13:39:44,853:INFO:Logging name: clf-default-name
2025-02-24 13:39:44,854:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-24 13:39:44,854:INFO:version 3.3.2
2025-02-24 13:39:44,854:INFO:Initializing setup()
2025-02-24 13:39:44,854:INFO:self.USI: 1cc1
2025-02-24 13:39:44,854:INFO:self._variable_keys: {'y_test', 'is_multiclass', 'gpu_param', 'logging_param', 'y', 'data', 'log_plots_param', 'fix_imbalance', 'fold_groups_param', 'target_param', 'X_test', 'exp_name_log', 'seed', 'html_param', 'exp_id', 'X', 'gpu_n_jobs_param', 'memory', 'X_train', '_ml_usecase', 'idx', 'fold_shuffle_param', 'n_jobs_param', 'y_train', 'pipeline', 'fold_generator', '_available_plots', 'USI'}
2025-02-24 13:39:44,855:INFO:Checking environment
2025-02-24 13:39:44,855:INFO:python_version: 3.10.12
2025-02-24 13:39:44,855:INFO:python_build: ('main', 'Jan 15 2024 21:14:33')
2025-02-24 13:39:44,855:INFO:machine: x86_64
2025-02-24 13:39:44,855:INFO:platform: Linux-5.15.0-131-generic-x86_64-with-glibc2.31
2025-02-24 13:39:44,855:INFO:Memory: svmem(total=7813271552, available=754515968, percent=90.3, used=6200209408, free=134909952, active=3268632576, inactive=3735105536, buffers=72732672, cached=1405419520, shared=572035072, slab=346071040)
2025-02-24 13:39:44,857:INFO:Physical Core: 2
2025-02-24 13:39:44,857:INFO:Logical Core: 4
2025-02-24 13:39:44,858:INFO:Checking libraries
2025-02-24 13:39:44,858:INFO:System:
2025-02-24 13:39:44,858:INFO:    python: 3.10.12 (main, Jan 15 2024, 21:14:33) [GCC 9.4.0]
2025-02-24 13:39:44,858:INFO:executable: /home/dsg/vortex/venv/bin/python3
2025-02-24 13:39:44,858:INFO:   machine: Linux-5.15.0-131-generic-x86_64-with-glibc2.31
2025-02-24 13:39:44,858:INFO:PyCaret required dependencies:
2025-02-24 13:39:45,954:INFO:                 pip: 25.0.1
2025-02-24 13:39:45,954:INFO:          setuptools: 75.8.0
2025-02-24 13:39:45,955:INFO:             pycaret: 3.3.2
2025-02-24 13:39:45,955:INFO:             IPython: 8.20.0
2025-02-24 13:39:45,955:INFO:          ipywidgets: 8.1.1
2025-02-24 13:39:45,955:INFO:                tqdm: 4.66.1
2025-02-24 13:39:45,955:INFO:               numpy: 1.24.4
2025-02-24 13:39:45,955:INFO:              pandas: 2.0.3
2025-02-24 13:39:45,955:INFO:              jinja2: 3.1.3
2025-02-24 13:39:45,955:INFO:               scipy: 1.10.1
2025-02-24 13:39:45,955:INFO:              joblib: 1.3.2
2025-02-24 13:39:45,955:INFO:             sklearn: 1.4.2
2025-02-24 13:39:45,955:INFO:                pyod: 2.0.3
2025-02-24 13:39:45,955:INFO:            imblearn: 0.13.0
2025-02-24 13:39:45,956:INFO:   category_encoders: 2.6.3
2025-02-24 13:39:45,956:INFO:            lightgbm: 4.2.0
2025-02-24 13:39:45,956:INFO:               numba: 0.58.1
2025-02-24 13:39:45,956:INFO:            requests: 2.32.3
2025-02-24 13:39:45,956:INFO:          matplotlib: 3.6.0
2025-02-24 13:39:45,956:INFO:          scikitplot: 0.3.7
2025-02-24 13:39:45,956:INFO:         yellowbrick: 1.5
2025-02-24 13:39:45,956:INFO:              plotly: 5.18.0
2025-02-24 13:39:45,956:INFO:    plotly-resampler: Not installed
2025-02-24 13:39:45,956:INFO:             kaleido: 0.2.1
2025-02-24 13:39:45,956:INFO:           schemdraw: 0.15
2025-02-24 13:39:45,956:INFO:         statsmodels: 0.14.1
2025-02-24 13:39:45,956:INFO:              sktime: 0.26.0
2025-02-24 13:39:45,957:INFO:               tbats: 1.1.3
2025-02-24 13:39:45,957:INFO:            pmdarima: 2.0.4
2025-02-24 13:39:45,957:INFO:              psutil: 5.9.7
2025-02-24 13:39:45,957:INFO:          markupsafe: 2.1.3
2025-02-24 13:39:45,957:INFO:             pickle5: Not installed
2025-02-24 13:39:45,957:INFO:         cloudpickle: 3.1.1
2025-02-24 13:39:45,957:INFO:         deprecation: 2.1.0
2025-02-24 13:39:45,957:INFO:              xxhash: 3.4.1
2025-02-24 13:39:45,957:INFO:           wurlitzer: 3.0.3
2025-02-24 13:39:45,957:INFO:PyCaret optional dependencies:
2025-02-24 13:39:47,152:INFO:                shap: 0.44.0
2025-02-24 13:39:47,152:INFO:           interpret: 0.5.0
2025-02-24 13:39:47,152:INFO:                umap: 0.5.5
2025-02-24 13:39:47,152:INFO:     ydata_profiling: 4.6.0
2025-02-24 13:39:47,152:INFO:  explainerdashboard: 0.4.5
2025-02-24 13:39:47,153:INFO:             autoviz: 0.1.804
2025-02-24 13:39:47,153:INFO:           fairlearn: 0.7.0
2025-02-24 13:39:47,153:INFO:          deepchecks: Not installed
2025-02-24 13:39:47,153:INFO:             xgboost: 1.6.2
2025-02-24 13:39:47,153:INFO:            catboost: 1.2.2
2025-02-24 13:39:47,153:INFO:              kmodes: 0.12.2
2025-02-24 13:39:47,153:INFO:             mlxtend: 0.23.1
2025-02-24 13:39:47,153:INFO:       statsforecast: 1.5.0
2025-02-24 13:39:47,153:INFO:        tune_sklearn: 0.5.0
2025-02-24 13:39:47,153:INFO:                 ray: 2.9.0
2025-02-24 13:39:47,153:INFO:            hyperopt: 0.2.7
2025-02-24 13:39:47,153:INFO:              optuna: 3.5.0
2025-02-24 13:39:47,153:INFO:               skopt: 0.9.0
2025-02-24 13:39:47,153:INFO:              mlflow: 2.20.2
2025-02-24 13:39:47,153:INFO:              gradio: 3.50.2
2025-02-24 13:39:47,153:INFO:             fastapi: 0.109.0
2025-02-24 13:39:47,153:INFO:             uvicorn: 0.25.0
2025-02-24 13:39:47,153:INFO:              m2cgen: 0.10.0
2025-02-24 13:39:47,153:INFO:           evidently: 0.4.40
2025-02-24 13:39:47,153:INFO:               fugue: 0.8.7
2025-02-24 13:39:47,153:INFO:           streamlit: Not installed
2025-02-24 13:39:47,153:INFO:             prophet: Not installed
2025-02-24 13:39:47,153:INFO:None
2025-02-24 13:39:47,153:INFO:Set up data.
2025-02-24 13:39:47,173:INFO:Set up folding strategy.
2025-02-24 13:39:47,173:INFO:Set up train/test split.
2025-02-24 13:39:47,186:INFO:Set up index.
2025-02-24 13:39:47,186:INFO:Assigning column types.
2025-02-24 13:39:47,199:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-24 13:39:47,250:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-24 13:39:47,266:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-24 13:39:47,318:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-24 13:39:47,540:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-24 13:39:47,754:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-24 13:39:47,755:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-24 13:39:47,788:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-24 13:39:47,790:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-24 13:39:47,791:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-24 13:39:47,840:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-24 13:39:47,875:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-24 13:39:47,878:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-24 13:39:47,935:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-24 13:39:47,963:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-24 13:39:47,966:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-24 13:39:47,967:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-24 13:39:48,051:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-24 13:39:48,054:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-24 13:39:48,139:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-24 13:39:48,142:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-24 13:39:48,149:INFO:Preparing preprocessing pipeline...
2025-02-24 13:39:48,154:INFO:Set up simple imputation.
2025-02-24 13:39:48,206:INFO:Finished creating preprocessing pipeline.
2025-02-24 13:39:48,211:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Al', 'Si', 'P', 'S', 'Cl', 'K',
                                             'Ca', 'Sc', 'Ti', 'V', 'Cr', 'Mn',
                                             'Fe', 'Co', 'Ni', 'Cu', 'Zn', 'Ga',
                                             'Ge', 'As', 'Se', 'Br', 'Rb', 'Sr',
                                             'Y', 'Zr', 'Nb', 'Mo', 'Ru', 'Pd', ...],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-02-24 13:39:48,211:INFO:Creating final display dataframe.
2025-02-24 13:39:48,395:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target            target
2                   Target type            Binary
3           Original data shape        (3008, 45)
4        Transformed data shape        (3008, 45)
5   Transformed train set shape        (2406, 45)
6    Transformed test set shape         (602, 45)
7              Numeric features                44
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              1cc1
2025-02-24 13:39:48,509:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-24 13:39:48,512:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-24 13:39:48,590:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-24 13:39:48,593:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-24 13:39:48,595:INFO:setup() successfully completed in 3.75s...............
2025-02-24 13:40:04,069:INFO:Initializing create_model()
2025-02-24 13:40:04,070:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f834ac31840>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={'class_weight': 'balanced', 'criterion': 'entropy'})
2025-02-24 13:40:04,070:INFO:Checking exceptions
2025-02-24 13:40:04,172:INFO:Importing libraries
2025-02-24 13:40:04,172:INFO:Copying training dataset
2025-02-24 13:40:04,202:INFO:Defining folds
2025-02-24 13:40:04,202:INFO:Declaring metric variables
2025-02-24 13:40:04,215:INFO:Importing untrained model
2025-02-24 13:40:04,225:INFO:Random Forest Classifier Imported successfully
2025-02-24 13:40:04,241:INFO:Starting cross validation
2025-02-24 13:40:04,243:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 13:40:15,632:INFO:Calculating mean and std
2025-02-24 13:40:15,636:INFO:Creating metrics dataframe
2025-02-24 13:40:15,646:INFO:Finalizing model
2025-02-24 13:40:16,178:INFO:Uploading results into container
2025-02-24 13:40:16,180:INFO:Uploading model into container now
2025-02-24 13:40:16,212:INFO:_master_model_container: 1
2025-02-24 13:40:16,212:INFO:_display_container: 2
2025-02-24 13:40:16,213:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-02-24 13:40:16,213:INFO:create_model() successfully completed......................................
2025-02-24 13:41:01,673:INFO:Initializing get_config()
2025-02-24 13:41:01,673:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f834ac31840>, variable=X_train)
2025-02-24 13:41:01,674:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2025-02-24 13:41:01,674:WARNING:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.

2025-02-24 13:41:01,702:INFO:Variable:  returned as              Al         Si          P         S        Cl         K  \
1862  30.955795  12.305014  47.175522  1.272196  4.239949  0.550797   
1007  26.598495  44.512703  23.700123  0.698848  1.560488  0.005569   
491   31.002651  47.294113   3.255272  0.546221  2.319646  1.352146   
76    12.663952  16.044582  19.020967  0.895467  1.721645  0.005868   
65    31.561382  12.320998  45.596313  0.837272  3.237814  0.004839   
...         ...        ...        ...       ...       ...       ...   
1834  41.845741  11.789660  41.465248  0.204760  1.078603  0.768368   
2111  17.922436  50.479286  24.950190  0.372501  1.626069  0.005652   
2106  22.718927  29.973293  22.273211  5.382915  1.417478  2.852591   
181    7.488332  44.780788   1.961926  3.064835  1.601068  1.126585   
515   31.331371   0.933490  45.707378  0.048694  2.330050  0.004869   

             Ca        Sc        Ti         V  ...        Sb        Te  \
1862   0.640791  0.004688  0.099072  0.309742  ...  0.000469  0.000469   
1007   0.141045  0.005569  0.331709  0.005569  ...  0.006678  0.000557   
491    7.447508  0.006239  1.119688  0.210028  ...  0.000624  0.000624   
76    42.822647  0.005868  0.740013  0.184550  ...  0.000587  0.000587   
65     0.648396  0.004839  0.482634  0.004839  ...  0.000484  0.000484   
...         ...       ...       ...       ...  ...       ...       ...   
1834   0.169890  0.004877  0.322674  0.087103  ...  0.008166  0.000488   
2111   0.675272  0.005652  0.463521  0.019183  ...  0.001235  0.000565   
2106   0.170338  0.005762  0.619536  0.104889  ...  0.010001  0.000576   
181    0.125815  0.007214  0.665208  0.092186  ...  0.000721  0.000721   
515   13.240234  0.004869  0.246590  0.004869  ...  0.015357  0.000487   

            Ba        Ta         W        Au        Hg        Tl        Pb  \
1862  0.000469  0.000469  0.000469  0.000469  0.000469  0.000469  0.000010   
1007  0.000557  0.003693  0.000557  0.000557  0.000557  0.000557  0.000010   
491   0.264073  0.000624  0.000624  0.000624  0.000624  0.000624  0.000010   
76    0.415363  0.000587  0.000587  0.000587  0.000587  0.000587  0.000010   
65    0.000484  0.006525  0.000484  0.000484  0.000484  0.000484  0.000010   
...        ...       ...       ...       ...       ...       ...       ...   
1834  0.000627  0.000505  0.000488  0.000488  0.000488  0.000494  0.000010   
2111  0.000565  0.000849  0.000565  0.000565  0.000565  0.000565  0.000010   
2106  0.038282  0.003133  0.000576  0.000576  0.000576  0.000576  0.000010   
181   0.297732  0.000721  0.000721  0.000721  0.000721  0.000721  0.000139   
515   0.133428  0.013536  0.000487  0.000487  0.000487  0.001644  0.000010   

            Th  
1862  0.000469  
1007  0.000557  
491   0.000624  
76    0.000587  
65    0.000484  
...        ...  
1834  0.000488  
2111  0.000565  
2106  0.000576  
181   0.000721  
515   0.000487  

[2406 rows x 44 columns]
2025-02-24 13:41:01,702:INFO:get_config() successfully completed......................................
2025-02-24 13:49:20,079:INFO:Initializing get_config()
2025-02-24 13:49:20,081:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f834ac31840>, variable=X_train)
2025-02-24 13:49:20,082:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2025-02-24 13:49:20,083:WARNING:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.

2025-02-24 13:49:20,120:INFO:Variable:  returned as              Al         Si          P         S        Cl         K  \
1862  30.955795  12.305014  47.175522  1.272196  4.239949  0.550797   
1007  26.598495  44.512703  23.700123  0.698848  1.560488  0.005569   
491   31.002651  47.294113   3.255272  0.546221  2.319646  1.352146   
76    12.663952  16.044582  19.020967  0.895467  1.721645  0.005868   
65    31.561382  12.320998  45.596313  0.837272  3.237814  0.004839   
...         ...        ...        ...       ...       ...       ...   
1834  41.845741  11.789660  41.465248  0.204760  1.078603  0.768368   
2111  17.922436  50.479286  24.950190  0.372501  1.626069  0.005652   
2106  22.718927  29.973293  22.273211  5.382915  1.417478  2.852591   
181    7.488332  44.780788   1.961926  3.064835  1.601068  1.126585   
515   31.331371   0.933490  45.707378  0.048694  2.330050  0.004869   

             Ca        Sc        Ti         V  ...        Sb        Te  \
1862   0.640791  0.004688  0.099072  0.309742  ...  0.000469  0.000469   
1007   0.141045  0.005569  0.331709  0.005569  ...  0.006678  0.000557   
491    7.447508  0.006239  1.119688  0.210028  ...  0.000624  0.000624   
76    42.822647  0.005868  0.740013  0.184550  ...  0.000587  0.000587   
65     0.648396  0.004839  0.482634  0.004839  ...  0.000484  0.000484   
...         ...       ...       ...       ...  ...       ...       ...   
1834   0.169890  0.004877  0.322674  0.087103  ...  0.008166  0.000488   
2111   0.675272  0.005652  0.463521  0.019183  ...  0.001235  0.000565   
2106   0.170338  0.005762  0.619536  0.104889  ...  0.010001  0.000576   
181    0.125815  0.007214  0.665208  0.092186  ...  0.000721  0.000721   
515   13.240234  0.004869  0.246590  0.004869  ...  0.015357  0.000487   

            Ba        Ta         W        Au        Hg        Tl        Pb  \
1862  0.000469  0.000469  0.000469  0.000469  0.000469  0.000469  0.000010   
1007  0.000557  0.003693  0.000557  0.000557  0.000557  0.000557  0.000010   
491   0.264073  0.000624  0.000624  0.000624  0.000624  0.000624  0.000010   
76    0.415363  0.000587  0.000587  0.000587  0.000587  0.000587  0.000010   
65    0.000484  0.006525  0.000484  0.000484  0.000484  0.000484  0.000010   
...        ...       ...       ...       ...       ...       ...       ...   
1834  0.000627  0.000505  0.000488  0.000488  0.000488  0.000494  0.000010   
2111  0.000565  0.000849  0.000565  0.000565  0.000565  0.000565  0.000010   
2106  0.038282  0.003133  0.000576  0.000576  0.000576  0.000576  0.000010   
181   0.297732  0.000721  0.000721  0.000721  0.000721  0.000721  0.000139   
515   0.133428  0.013536  0.000487  0.000487  0.000487  0.001644  0.000010   

            Th  
1862  0.000469  
1007  0.000557  
491   0.000624  
76    0.000587  
65    0.000484  
...        ...  
1834  0.000488  
2111  0.000565  
2106  0.000576  
181   0.000721  
515   0.000487  

[2406 rows x 44 columns]
2025-02-24 13:49:20,120:INFO:get_config() successfully completed......................................
2025-02-24 13:50:21,925:INFO:Initializing get_config()
2025-02-24 13:50:21,927:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f834ac31840>, variable=X_train)
2025-02-24 13:50:21,927:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2025-02-24 13:50:21,928:WARNING:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.

2025-02-24 13:50:21,967:INFO:Variable:  returned as              Al         Si          P         S        Cl         K  \
1862  30.955795  12.305014  47.175522  1.272196  4.239949  0.550797   
1007  26.598495  44.512703  23.700123  0.698848  1.560488  0.005569   
491   31.002651  47.294113   3.255272  0.546221  2.319646  1.352146   
76    12.663952  16.044582  19.020967  0.895467  1.721645  0.005868   
65    31.561382  12.320998  45.596313  0.837272  3.237814  0.004839   
...         ...        ...        ...       ...       ...       ...   
1834  41.845741  11.789660  41.465248  0.204760  1.078603  0.768368   
2111  17.922436  50.479286  24.950190  0.372501  1.626069  0.005652   
2106  22.718927  29.973293  22.273211  5.382915  1.417478  2.852591   
181    7.488332  44.780788   1.961926  3.064835  1.601068  1.126585   
515   31.331371   0.933490  45.707378  0.048694  2.330050  0.004869   

             Ca        Sc        Ti         V  ...        Sb        Te  \
1862   0.640791  0.004688  0.099072  0.309742  ...  0.000469  0.000469   
1007   0.141045  0.005569  0.331709  0.005569  ...  0.006678  0.000557   
491    7.447508  0.006239  1.119688  0.210028  ...  0.000624  0.000624   
76    42.822647  0.005868  0.740013  0.184550  ...  0.000587  0.000587   
65     0.648396  0.004839  0.482634  0.004839  ...  0.000484  0.000484   
...         ...       ...       ...       ...  ...       ...       ...   
1834   0.169890  0.004877  0.322674  0.087103  ...  0.008166  0.000488   
2111   0.675272  0.005652  0.463521  0.019183  ...  0.001235  0.000565   
2106   0.170338  0.005762  0.619536  0.104889  ...  0.010001  0.000576   
181    0.125815  0.007214  0.665208  0.092186  ...  0.000721  0.000721   
515   13.240234  0.004869  0.246590  0.004869  ...  0.015357  0.000487   

            Ba        Ta         W        Au        Hg        Tl        Pb  \
1862  0.000469  0.000469  0.000469  0.000469  0.000469  0.000469  0.000010   
1007  0.000557  0.003693  0.000557  0.000557  0.000557  0.000557  0.000010   
491   0.264073  0.000624  0.000624  0.000624  0.000624  0.000624  0.000010   
76    0.415363  0.000587  0.000587  0.000587  0.000587  0.000587  0.000010   
65    0.000484  0.006525  0.000484  0.000484  0.000484  0.000484  0.000010   
...        ...       ...       ...       ...       ...       ...       ...   
1834  0.000627  0.000505  0.000488  0.000488  0.000488  0.000494  0.000010   
2111  0.000565  0.000849  0.000565  0.000565  0.000565  0.000565  0.000010   
2106  0.038282  0.003133  0.000576  0.000576  0.000576  0.000576  0.000010   
181   0.297732  0.000721  0.000721  0.000721  0.000721  0.000721  0.000139   
515   0.133428  0.013536  0.000487  0.000487  0.000487  0.001644  0.000010   

            Th  
1862  0.000469  
1007  0.000557  
491   0.000624  
76    0.000587  
65    0.000484  
...        ...  
1834  0.000488  
2111  0.000565  
2106  0.000576  
181   0.000721  
515   0.000487  

[2406 rows x 44 columns]
2025-02-24 13:50:21,968:INFO:get_config() successfully completed......................................
2025-02-24 13:51:03,942:INFO:Initializing get_config()
2025-02-24 13:51:03,942:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f834ac31840>, variable=X_train)
2025-02-24 13:51:03,943:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2025-02-24 13:51:03,944:WARNING:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.

2025-02-24 13:51:03,988:INFO:Variable:  returned as              Al         Si          P         S        Cl         K  \
1862  30.955795  12.305014  47.175522  1.272196  4.239949  0.550797   
1007  26.598495  44.512703  23.700123  0.698848  1.560488  0.005569   
491   31.002651  47.294113   3.255272  0.546221  2.319646  1.352146   
76    12.663952  16.044582  19.020967  0.895467  1.721645  0.005868   
65    31.561382  12.320998  45.596313  0.837272  3.237814  0.004839   
...         ...        ...        ...       ...       ...       ...   
1834  41.845741  11.789660  41.465248  0.204760  1.078603  0.768368   
2111  17.922436  50.479286  24.950190  0.372501  1.626069  0.005652   
2106  22.718927  29.973293  22.273211  5.382915  1.417478  2.852591   
181    7.488332  44.780788   1.961926  3.064835  1.601068  1.126585   
515   31.331371   0.933490  45.707378  0.048694  2.330050  0.004869   

             Ca        Sc        Ti         V  ...        Sb        Te  \
1862   0.640791  0.004688  0.099072  0.309742  ...  0.000469  0.000469   
1007   0.141045  0.005569  0.331709  0.005569  ...  0.006678  0.000557   
491    7.447508  0.006239  1.119688  0.210028  ...  0.000624  0.000624   
76    42.822647  0.005868  0.740013  0.184550  ...  0.000587  0.000587   
65     0.648396  0.004839  0.482634  0.004839  ...  0.000484  0.000484   
...         ...       ...       ...       ...  ...       ...       ...   
1834   0.169890  0.004877  0.322674  0.087103  ...  0.008166  0.000488   
2111   0.675272  0.005652  0.463521  0.019183  ...  0.001235  0.000565   
2106   0.170338  0.005762  0.619536  0.104889  ...  0.010001  0.000576   
181    0.125815  0.007214  0.665208  0.092186  ...  0.000721  0.000721   
515   13.240234  0.004869  0.246590  0.004869  ...  0.015357  0.000487   

            Ba        Ta         W        Au        Hg        Tl        Pb  \
1862  0.000469  0.000469  0.000469  0.000469  0.000469  0.000469  0.000010   
1007  0.000557  0.003693  0.000557  0.000557  0.000557  0.000557  0.000010   
491   0.264073  0.000624  0.000624  0.000624  0.000624  0.000624  0.000010   
76    0.415363  0.000587  0.000587  0.000587  0.000587  0.000587  0.000010   
65    0.000484  0.006525  0.000484  0.000484  0.000484  0.000484  0.000010   
...        ...       ...       ...       ...       ...       ...       ...   
1834  0.000627  0.000505  0.000488  0.000488  0.000488  0.000494  0.000010   
2111  0.000565  0.000849  0.000565  0.000565  0.000565  0.000565  0.000010   
2106  0.038282  0.003133  0.000576  0.000576  0.000576  0.000576  0.000010   
181   0.297732  0.000721  0.000721  0.000721  0.000721  0.000721  0.000139   
515   0.133428  0.013536  0.000487  0.000487  0.000487  0.001644  0.000010   

            Th  
1862  0.000469  
1007  0.000557  
491   0.000624  
76    0.000587  
65    0.000484  
...        ...  
1834  0.000488  
2111  0.000565  
2106  0.000576  
181   0.000721  
515   0.000487  

[2406 rows x 44 columns]
2025-02-24 13:51:03,988:INFO:get_config() successfully completed......................................
2025-02-24 13:51:15,007:INFO:Initializing get_config()
2025-02-24 13:51:15,008:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f834ac31840>, variable=X_train)
2025-02-24 13:51:15,013:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2025-02-24 13:51:15,013:WARNING:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.

2025-02-24 13:51:15,080:INFO:Variable:  returned as              Al         Si          P         S        Cl         K  \
1862  30.955795  12.305014  47.175522  1.272196  4.239949  0.550797   
1007  26.598495  44.512703  23.700123  0.698848  1.560488  0.005569   
491   31.002651  47.294113   3.255272  0.546221  2.319646  1.352146   
76    12.663952  16.044582  19.020967  0.895467  1.721645  0.005868   
65    31.561382  12.320998  45.596313  0.837272  3.237814  0.004839   
...         ...        ...        ...       ...       ...       ...   
1834  41.845741  11.789660  41.465248  0.204760  1.078603  0.768368   
2111  17.922436  50.479286  24.950190  0.372501  1.626069  0.005652   
2106  22.718927  29.973293  22.273211  5.382915  1.417478  2.852591   
181    7.488332  44.780788   1.961926  3.064835  1.601068  1.126585   
515   31.331371   0.933490  45.707378  0.048694  2.330050  0.004869   

             Ca        Sc        Ti         V  ...        Sb        Te  \
1862   0.640791  0.004688  0.099072  0.309742  ...  0.000469  0.000469   
1007   0.141045  0.005569  0.331709  0.005569  ...  0.006678  0.000557   
491    7.447508  0.006239  1.119688  0.210028  ...  0.000624  0.000624   
76    42.822647  0.005868  0.740013  0.184550  ...  0.000587  0.000587   
65     0.648396  0.004839  0.482634  0.004839  ...  0.000484  0.000484   
...         ...       ...       ...       ...  ...       ...       ...   
1834   0.169890  0.004877  0.322674  0.087103  ...  0.008166  0.000488   
2111   0.675272  0.005652  0.463521  0.019183  ...  0.001235  0.000565   
2106   0.170338  0.005762  0.619536  0.104889  ...  0.010001  0.000576   
181    0.125815  0.007214  0.665208  0.092186  ...  0.000721  0.000721   
515   13.240234  0.004869  0.246590  0.004869  ...  0.015357  0.000487   

            Ba        Ta         W        Au        Hg        Tl        Pb  \
1862  0.000469  0.000469  0.000469  0.000469  0.000469  0.000469  0.000010   
1007  0.000557  0.003693  0.000557  0.000557  0.000557  0.000557  0.000010   
491   0.264073  0.000624  0.000624  0.000624  0.000624  0.000624  0.000010   
76    0.415363  0.000587  0.000587  0.000587  0.000587  0.000587  0.000010   
65    0.000484  0.006525  0.000484  0.000484  0.000484  0.000484  0.000010   
...        ...       ...       ...       ...       ...       ...       ...   
1834  0.000627  0.000505  0.000488  0.000488  0.000488  0.000494  0.000010   
2111  0.000565  0.000849  0.000565  0.000565  0.000565  0.000565  0.000010   
2106  0.038282  0.003133  0.000576  0.000576  0.000576  0.000576  0.000010   
181   0.297732  0.000721  0.000721  0.000721  0.000721  0.000721  0.000139   
515   0.133428  0.013536  0.000487  0.000487  0.000487  0.001644  0.000010   

            Th  
1862  0.000469  
1007  0.000557  
491   0.000624  
76    0.000587  
65    0.000484  
...        ...  
1834  0.000488  
2111  0.000565  
2106  0.000576  
181   0.000721  
515   0.000487  

[2406 rows x 44 columns]
2025-02-24 13:51:15,080:INFO:get_config() successfully completed......................................
2025-02-24 13:51:51,882:INFO:Initializing tune_model()
2025-02-24 13:51:51,883:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=False, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f834ac31840>)
2025-02-24 13:51:51,883:INFO:Checking exceptions
2025-02-24 13:51:51,958:INFO:Copying training dataset
2025-02-24 13:51:51,972:INFO:Checking base model
2025-02-24 13:51:51,972:INFO:Base model : Random Forest Classifier
2025-02-24 13:51:51,978:INFO:Declaring metric variables
2025-02-24 13:51:51,986:INFO:Defining Hyperparameters
2025-02-24 13:51:52,291:INFO:Tuning with n_jobs=-1
2025-02-24 13:51:52,291:INFO:Initializing RandomizedSearchCV
2025-02-24 13:54:01,477:INFO:best_params: {'actual_estimator__n_estimators': 190, 'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 6, 'actual_estimator__min_impurity_decrease': 0.001, 'actual_estimator__max_features': 'log2', 'actual_estimator__max_depth': 6, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced_subsample', 'actual_estimator__bootstrap': False}
2025-02-24 13:54:01,483:INFO:Hyperparameter search completed
2025-02-24 13:54:01,483:INFO:SubProcess create_model() called ==================================
2025-02-24 13:54:01,486:INFO:Initializing create_model()
2025-02-24 13:54:01,486:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f834ac31840>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f836502fd00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 190, 'min_samples_split': 9, 'min_samples_leaf': 6, 'min_impurity_decrease': 0.001, 'max_features': 'log2', 'max_depth': 6, 'criterion': 'gini', 'class_weight': 'balanced_subsample', 'bootstrap': False})
2025-02-24 13:54:01,488:INFO:Checking exceptions
2025-02-24 13:54:01,488:INFO:Importing libraries
2025-02-24 13:54:01,488:INFO:Copying training dataset
2025-02-24 13:54:01,550:INFO:Defining folds
2025-02-24 13:54:01,550:INFO:Declaring metric variables
2025-02-24 13:54:01,562:INFO:Importing untrained model
2025-02-24 13:54:01,563:INFO:Declaring custom model
2025-02-24 13:54:01,575:INFO:Random Forest Classifier Imported successfully
2025-02-24 13:54:01,586:INFO:Starting cross validation
2025-02-24 13:54:01,587:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 13:54:08,416:INFO:Calculating mean and std
2025-02-24 13:54:08,419:INFO:Creating metrics dataframe
2025-02-24 13:54:08,440:INFO:Finalizing model
2025-02-24 13:54:09,247:INFO:Uploading results into container
2025-02-24 13:54:09,250:INFO:Uploading model into container now
2025-02-24 13:54:09,252:INFO:_master_model_container: 2
2025-02-24 13:54:09,253:INFO:_display_container: 3
2025-02-24 13:54:09,254:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=6, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.001,
                       min_samples_leaf=6, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=190, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False)
2025-02-24 13:54:09,254:INFO:create_model() successfully completed......................................
2025-02-24 13:54:09,492:INFO:SubProcess create_model() end ==================================
2025-02-24 13:54:09,492:INFO:choose_better activated
2025-02-24 13:54:09,499:INFO:SubProcess create_model() called ==================================
2025-02-24 13:54:09,501:INFO:Initializing create_model()
2025-02-24 13:54:09,501:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f834ac31840>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-24 13:54:09,501:INFO:Checking exceptions
2025-02-24 13:54:09,506:INFO:Importing libraries
2025-02-24 13:54:09,506:INFO:Copying training dataset
2025-02-24 13:54:09,526:INFO:Defining folds
2025-02-24 13:54:09,527:INFO:Declaring metric variables
2025-02-24 13:54:09,527:INFO:Importing untrained model
2025-02-24 13:54:09,527:INFO:Declaring custom model
2025-02-24 13:54:09,528:INFO:Random Forest Classifier Imported successfully
2025-02-24 13:54:09,528:INFO:Starting cross validation
2025-02-24 13:54:09,529:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-24 13:54:13,756:INFO:Calculating mean and std
2025-02-24 13:54:13,756:INFO:Creating metrics dataframe
2025-02-24 13:54:13,758:INFO:Finalizing model
2025-02-24 13:54:14,256:INFO:Uploading results into container
2025-02-24 13:54:14,257:INFO:Uploading model into container now
2025-02-24 13:54:14,258:INFO:_master_model_container: 3
2025-02-24 13:54:14,258:INFO:_display_container: 4
2025-02-24 13:54:14,259:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-02-24 13:54:14,259:INFO:create_model() successfully completed......................................
2025-02-24 13:54:14,437:INFO:SubProcess create_model() end ==================================
2025-02-24 13:54:14,438:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) result for Accuracy is 0.9871
2025-02-24 13:54:14,439:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0,
                       class_weight='balanced_subsample', criterion='gini',
                       max_depth=6, max_features='log2', max_leaf_nodes=None,
                       max_samples=None, min_impurity_decrease=0.001,
                       min_samples_leaf=6, min_samples_split=9,
                       min_weight_fraction_leaf=0.0, monotonic_cst=None,
                       n_estimators=190, n_jobs=-1, oob_score=False,
                       random_state=123, verbose=0, warm_start=False) result for Accuracy is 0.9751
2025-02-24 13:54:14,440:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False) is best model
2025-02-24 13:54:14,440:INFO:choose_better completed
2025-02-24 13:54:14,441:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-02-24 13:54:14,464:INFO:_master_model_container: 3
2025-02-24 13:54:14,464:INFO:_display_container: 3
2025-02-24 13:54:14,464:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2025-02-24 13:54:14,465:INFO:tune_model() successfully completed......................................
2025-02-25 11:01:20,474:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 11:01:20,475:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 11:01:20,475:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 11:01:20,475:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 11:13:03,531:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 11:13:03,531:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 11:13:03,531:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 11:13:03,531:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 11:14:19,395:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 11:14:19,395:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 11:14:19,395:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 11:14:19,395:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 11:36:08,940:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 11:36:08,941:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 11:36:08,941:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 11:36:08,941:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 11:56:45,825:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 11:56:45,825:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 11:56:45,825:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-25 11:56:45,825:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 13:50:07,874:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 13:50:07,875:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 13:50:07,875:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 13:50:07,875:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 13:54:41,240:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 13:54:41,240:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 13:54:41,240:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 13:54:41,240:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:04:07,329:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:04:07,332:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:04:07,332:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:04:07,332:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:55:18,849:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:55:18,852:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:55:18,852:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:55:18,852:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:56:45,991:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:56:45,992:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:56:45,992:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:56:45,992:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:58:32,769:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:58:32,769:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:58:32,769:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:58:32,769:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:58:58,412:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:58:58,412:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:58:58,412:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:58:58,412:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 14:59:03,092:INFO:PyCaret ClassificationExperiment
2025-02-27 14:59:03,092:INFO:Logging name: clf-default-name
2025-02-27 14:59:03,092:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-27 14:59:03,092:INFO:version 3.3.2
2025-02-27 14:59:03,092:INFO:Initializing setup()
2025-02-27 14:59:03,092:INFO:self.USI: bfe4
2025-02-27 14:59:03,092:INFO:self._variable_keys: {'y_test', 'n_jobs_param', 'pipeline', 'exp_id', '_ml_usecase', 'y_train', 'gpu_param', 'X', 'target_param', 'USI', 'fix_imbalance', 'logging_param', 'X_train', 'seed', 'idx', 'y', 'fold_generator', 'html_param', '_available_plots', 'exp_name_log', 'memory', 'fold_groups_param', 'log_plots_param', 'is_multiclass', 'X_test', 'fold_shuffle_param', 'data', 'gpu_n_jobs_param'}
2025-02-27 14:59:03,092:INFO:Checking environment
2025-02-27 14:59:03,092:INFO:python_version: 3.10.12
2025-02-27 14:59:03,092:INFO:python_build: ('main', 'Jan 15 2024 21:14:33')
2025-02-27 14:59:03,092:INFO:machine: x86_64
2025-02-27 14:59:03,092:INFO:platform: Linux-5.15.0-131-generic-x86_64-with-glibc2.31
2025-02-27 14:59:03,093:INFO:Memory: svmem(total=7813275648, available=1485529088, percent=81.0, used=5457395712, free=359923712, active=2524807168, inactive=4186734592, buffers=113172480, cached=1882783744, shared=580521984, slab=315289600)
2025-02-27 14:59:03,093:INFO:Physical Core: 2
2025-02-27 14:59:03,093:INFO:Logical Core: 4
2025-02-27 14:59:03,093:INFO:Checking libraries
2025-02-27 14:59:03,093:INFO:System:
2025-02-27 14:59:03,093:INFO:    python: 3.10.12 (main, Jan 15 2024, 21:14:33) [GCC 9.4.0]
2025-02-27 14:59:03,094:INFO:executable: /home/dsg/VORTEX_FINAL/venv/bin/python3
2025-02-27 14:59:03,094:INFO:   machine: Linux-5.15.0-131-generic-x86_64-with-glibc2.31
2025-02-27 14:59:03,094:INFO:PyCaret required dependencies:
2025-02-27 14:59:04,025:INFO:                 pip: 25.0.1
2025-02-27 14:59:04,025:INFO:          setuptools: 75.8.0
2025-02-27 14:59:04,025:INFO:             pycaret: 3.3.2
2025-02-27 14:59:04,025:INFO:             IPython: 8.20.0
2025-02-27 14:59:04,025:INFO:          ipywidgets: 8.1.1
2025-02-27 14:59:04,025:INFO:                tqdm: 4.66.1
2025-02-27 14:59:04,025:INFO:               numpy: 1.24.4
2025-02-27 14:59:04,025:INFO:              pandas: 2.0.3
2025-02-27 14:59:04,025:INFO:              jinja2: 3.1.3
2025-02-27 14:59:04,025:INFO:               scipy: 1.10.1
2025-02-27 14:59:04,025:INFO:              joblib: 1.3.2
2025-02-27 14:59:04,025:INFO:             sklearn: 1.4.2
2025-02-27 14:59:04,025:INFO:                pyod: 2.0.1
2025-02-27 14:59:04,025:INFO:            imblearn: 0.12.3
2025-02-27 14:59:04,025:INFO:   category_encoders: 2.6.3
2025-02-27 14:59:04,026:INFO:            lightgbm: 4.2.0
2025-02-27 14:59:04,026:INFO:               numba: 0.58.1
2025-02-27 14:59:04,026:INFO:            requests: 2.32.3
2025-02-27 14:59:04,026:INFO:          matplotlib: 3.6.0
2025-02-27 14:59:04,026:INFO:          scikitplot: 0.3.7
2025-02-27 14:59:04,026:INFO:         yellowbrick: 1.5
2025-02-27 14:59:04,026:INFO:              plotly: 5.18.0
2025-02-27 14:59:04,026:INFO:    plotly-resampler: Not installed
2025-02-27 14:59:04,026:INFO:             kaleido: 0.2.1
2025-02-27 14:59:04,026:INFO:           schemdraw: 0.15
2025-02-27 14:59:04,026:INFO:         statsmodels: 0.14.1
2025-02-27 14:59:04,026:INFO:              sktime: 0.26.0
2025-02-27 14:59:04,026:INFO:               tbats: 1.1.3
2025-02-27 14:59:04,026:INFO:            pmdarima: 2.0.4
2025-02-27 14:59:04,026:INFO:              psutil: 5.9.7
2025-02-27 14:59:04,026:INFO:          markupsafe: 2.1.3
2025-02-27 14:59:04,026:INFO:             pickle5: Not installed
2025-02-27 14:59:04,026:INFO:         cloudpickle: 3.1.1
2025-02-27 14:59:04,026:INFO:         deprecation: 2.1.0
2025-02-27 14:59:04,026:INFO:              xxhash: 3.4.1
2025-02-27 14:59:04,026:INFO:           wurlitzer: 3.0.3
2025-02-27 14:59:04,026:INFO:PyCaret optional dependencies:
2025-02-27 14:59:05,552:INFO:                shap: 0.44.0
2025-02-27 14:59:05,552:INFO:           interpret: 0.5.0
2025-02-27 14:59:05,552:INFO:                umap: 0.5.5
2025-02-27 14:59:05,552:INFO:     ydata_profiling: 4.6.0
2025-02-27 14:59:05,552:INFO:  explainerdashboard: 0.4.5
2025-02-27 14:59:05,552:INFO:             autoviz: 0.1.804
2025-02-27 14:59:05,552:INFO:           fairlearn: 0.7.0
2025-02-27 14:59:05,552:INFO:          deepchecks: Not installed
2025-02-27 14:59:05,553:INFO:             xgboost: 1.6.2
2025-02-27 14:59:05,553:INFO:            catboost: 1.2.2
2025-02-27 14:59:05,553:INFO:              kmodes: 0.12.2
2025-02-27 14:59:05,553:INFO:             mlxtend: 0.23.1
2025-02-27 14:59:05,553:INFO:       statsforecast: 1.5.0
2025-02-27 14:59:05,553:INFO:        tune_sklearn: 0.5.0
2025-02-27 14:59:05,553:INFO:                 ray: 2.9.0
2025-02-27 14:59:05,553:INFO:            hyperopt: 0.2.7
2025-02-27 14:59:05,553:INFO:              optuna: 3.5.0
2025-02-27 14:59:05,553:INFO:               skopt: 0.9.0
2025-02-27 14:59:05,553:INFO:              mlflow: 2.20.2
2025-02-27 14:59:05,553:INFO:              gradio: 3.50.2
2025-02-27 14:59:05,554:INFO:             fastapi: 0.109.0
2025-02-27 14:59:05,554:INFO:             uvicorn: 0.25.0
2025-02-27 14:59:05,554:INFO:              m2cgen: 0.10.0
2025-02-27 14:59:05,554:INFO:           evidently: 0.4.40
2025-02-27 14:59:05,554:INFO:               fugue: 0.8.7
2025-02-27 14:59:05,554:INFO:           streamlit: Not installed
2025-02-27 14:59:05,554:INFO:             prophet: Not installed
2025-02-27 14:59:05,554:INFO:None
2025-02-27 14:59:05,554:INFO:Set up data.
2025-02-27 14:59:05,569:INFO:Set up folding strategy.
2025-02-27 14:59:05,570:INFO:Set up train/test split.
2025-02-27 14:59:05,579:INFO:Set up index.
2025-02-27 14:59:05,580:INFO:Assigning column types.
2025-02-27 14:59:05,587:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-27 14:59:05,635:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 14:59:05,639:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 14:59:05,672:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-27 14:59:05,822:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-27 14:59:06,014:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 14:59:06,015:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 14:59:06,042:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-27 14:59:06,045:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-27 14:59:06,045:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-27 14:59:06,090:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 14:59:06,118:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-27 14:59:06,120:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-27 14:59:06,165:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 14:59:06,192:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-27 14:59:06,195:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-27 14:59:06,196:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-27 14:59:06,267:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-27 14:59:06,270:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-27 14:59:06,342:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-27 14:59:06,344:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-27 14:59:06,348:INFO:Preparing preprocessing pipeline...
2025-02-27 14:59:06,350:INFO:Set up label encoding.
2025-02-27 14:59:06,350:INFO:Set up simple imputation.
2025-02-27 14:59:06,382:INFO:Finished creating preprocessing pipeline.
2025-02-27 14:59:06,388:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Ca', 'S', 'K', 'Ti', 'V', 'Cr',
                                             'Cu', 'Zn', 'As', 'Se', 'Sr', 'Mo',
                                             'Ba', 'Ta'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-02-27 14:59:06,388:INFO:Creating final display dataframe.
2025-02-27 14:59:06,488:INFO:Setup _display_container:                     Description                   Value
0                    Session id                     123
1                        Target                    Site
2                   Target type              Multiclass
3                Target mapping  CT: 0, PCM: 1, PDLC: 2
4           Original data shape              (2256, 15)
5        Transformed data shape              (2256, 15)
6   Transformed train set shape              (1804, 15)
7    Transformed test set shape               (452, 15)
8              Numeric features                      14
9                    Preprocess                    True
10              Imputation type                  simple
11           Numeric imputation                    mean
12       Categorical imputation                    mode
13               Fold Generator         StratifiedKFold
14                  Fold Number                      10
15                     CPU Jobs                      -1
16                      Use GPU                   False
17               Log Experiment                   False
18              Experiment Name        clf-default-name
19                          USI                    bfe4
2025-02-27 14:59:06,598:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-27 14:59:06,601:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-27 14:59:06,674:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-27 14:59:06,676:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-27 14:59:06,678:INFO:setup() successfully completed in 3.59s...............
2025-02-27 14:59:06,805:INFO:Initializing create_model()
2025-02-27 14:59:06,805:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcf427efe80>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 200, 'min_samples_leaf': 5, 'class_weight': 'balanced', 'criterion': 'entropy', 'random_state': 42})
2025-02-27 14:59:06,805:INFO:Checking exceptions
2025-02-27 14:59:06,833:INFO:Importing libraries
2025-02-27 14:59:06,834:INFO:Copying training dataset
2025-02-27 14:59:06,845:INFO:Defining folds
2025-02-27 14:59:06,845:INFO:Declaring metric variables
2025-02-27 14:59:06,855:INFO:Importing untrained model
2025-02-27 14:59:06,866:INFO:Random Forest Classifier Imported successfully
2025-02-27 14:59:06,886:INFO:Starting cross validation
2025-02-27 14:59:06,890:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:59:13,844:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:13,861:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:13,882:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:13,982:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:13,991:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:13,998:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:14,049:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:14,057:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:14,065:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:14,381:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:14,391:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:14,399:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:15,689:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:15,698:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:15,714:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:15,814:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:15,822:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:15,832:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:15,858:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:15,871:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:15,882:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:16,315:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:16,329:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:16,350:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:17,043:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:17,047:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:17,052:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:17,055:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:17,059:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:17,063:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:17,068:INFO:Calculating mean and std
2025-02-27 14:59:17,071:INFO:Creating metrics dataframe
2025-02-27 14:59:17,082:INFO:Finalizing model
2025-02-27 14:59:17,858:INFO:Uploading results into container
2025-02-27 14:59:17,862:INFO:Uploading model into container now
2025-02-27 14:59:17,920:INFO:_master_model_container: 1
2025-02-27 14:59:17,921:INFO:_display_container: 2
2025-02-27 14:59:17,922:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-02-27 14:59:17,924:INFO:create_model() successfully completed......................................
2025-02-27 14:59:18,236:INFO:Initializing get_config()
2025-02-27 14:59:18,236:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcf427efe80>, variable=X_train)
2025-02-27 14:59:18,236:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2025-02-27 14:59:18,238:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2025-02-27 14:59:18,250:INFO:Variable:  returned as              Ca         S         K        Ti         V        Cr        Cu  \
1543   3.510932  0.481360  0.006545  0.802176  0.006545  0.181252  0.000654   
411    1.349289  6.763490  3.794080  0.450157  0.214282  0.150436  0.000547   
708    0.732991  0.779345  0.004431  0.165972  0.154127  0.441078  0.000443   
518    0.071578  0.310261  0.915429  0.177513  0.466014  0.534728  0.000520   
1835   0.167318  0.320049  0.943085  0.203168  0.222158  0.395253  0.000492   
...         ...       ...       ...       ...       ...       ...       ...   
1726   0.036081  0.191734  1.224103  0.424794  0.389021  0.208332  0.000508   
1246  40.783859  1.002141  0.005695  0.813728  0.284605  0.005695  0.138004   
973   10.391370  0.165157  0.005067  0.581351  0.262089  0.219746  0.144243   
602    0.298408  0.253635  0.004803  0.081477  0.235051  0.256336  0.000480   
1023  16.419119  0.459082  0.005665  0.463706  0.115434  0.255389  0.076848   

            Zn        As        Se        Sr        Mo        Ba        Ta  
1543  0.000654  0.287568  0.000654  0.025172  0.000654  0.000654  0.000654  
411   0.000547  2.679388  0.006576  0.036059  0.008431  0.000547  0.002598  
708   0.000443  0.008280  0.000443  0.006220  0.010483  0.000443  0.004457  
518   0.005882  0.155239  0.000520  0.000520  0.014028  0.000520  0.003245  
1835  0.010214  0.157373  0.000492  0.004434  0.011381  0.000492  0.000677  
...        ...       ...       ...       ...       ...       ...       ...  
1726  0.000508  0.109691  0.001391  0.016834  0.005197  0.012444  0.000508  
1246  0.009581  0.202405  0.000569  1.364171  0.011573  0.110507  0.000569  
973   0.009765  0.072634  0.013474  0.237501  0.026721  0.081466  0.000507  
602   0.000480  0.474137  0.000480  0.000480  0.006558  0.000480  0.000480  
1023  0.004766  0.029112  0.000567  0.085799  0.011041  0.068396  0.000567  

[1804 rows x 14 columns]
2025-02-27 14:59:18,250:INFO:get_config() successfully completed......................................
2025-02-27 14:59:18,250:INFO:Initializing get_config()
2025-02-27 14:59:18,250:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcf427efe80>, variable=y_train)
2025-02-27 14:59:18,250:INFO:Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
2025-02-27 14:59:18,250:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2025-02-27 14:59:18,254:INFO:Variable:  returned as 1543      CT
411      PCM
708     PDLC
518      PCM
1835     PCM
        ... 
1726     PCM
1246      CT
973       CT
602      PCM
1023      CT
Name: Site, Length: 1804, dtype: category
Categories (3, object): ['CT', 'PCM', 'PDLC']
2025-02-27 14:59:18,254:INFO:get_config() successfully completed......................................
2025-02-27 14:59:18,254:INFO:Initializing get_config()
2025-02-27 14:59:18,254:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcf427efe80>, variable=X_test)
2025-02-27 14:59:18,254:INFO:Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
2025-02-27 14:59:18,255:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2025-02-27 14:59:18,266:INFO:Variable:  returned as             Ca         S         K        Ti         V        Cr        Cu  \
1932  0.136996  0.211190  1.893176  0.325928  0.179156  0.006109  0.002681   
1719  0.150801  0.181773  1.139412  0.209807  0.103304  0.072561  0.000570   
2190  0.088068  0.298167  0.005885  0.322901  0.026485  0.196668  0.001757   
780   0.650882  1.433993  1.185579  0.198321  0.366244  0.320320  0.027397   
296   1.428356  3.033184  1.642482  0.619890  0.005627  0.534302  0.000563   
...        ...       ...       ...       ...       ...       ...       ...   
1147  8.154443  2.460233  2.478150  1.186860  0.329139  0.005808  0.000581   
2247  0.616193  1.113962  1.157395  1.901734  0.058582  0.657979  0.082895   
531   0.062039  0.201611  0.005003  0.097617  0.104197  0.005003  0.000500   
527   0.122722  0.629638  0.768792  0.147883  0.358684  0.005024  0.000502   
1907  0.067519  0.064742  1.502690  0.211321  0.091380  0.085370  0.000615   

            Zn        As        Se        Sr        Mo        Ba        Ta  
1932  0.000611  0.040914  0.009089  0.006757  0.007121  0.068103  0.000611  
1719  0.000570  0.099869  0.000977  0.004019  0.003767  0.001736  0.000570  
2190  0.000588  0.011188  0.000588  0.002277  0.000588  0.000588  0.002697  
780   0.000567  0.638222  0.024774  0.015986  0.019031  0.046951  0.000567  
296   0.000563  0.085022  0.000563  0.017597  0.003812  0.000563  0.008801  
...        ...       ...       ...       ...       ...       ...       ...  
1147  0.000581  0.092401  0.000581  0.197193  0.007990  0.357904  0.000581  
2247  0.000539  0.015269  0.000539  0.021376  0.006456  0.007893  0.006810  
531   0.002831  0.134149  0.000500  0.000500  0.003076  0.000500  0.000500  
527   0.006762  0.141957  0.001718  0.012614  0.012881  0.000502  0.000502  
1907  0.000615  0.014953  0.001882  0.003628  0.000615  0.011959  0.000615  

[452 rows x 14 columns]
2025-02-27 14:59:18,266:INFO:get_config() successfully completed......................................
2025-02-27 14:59:18,267:INFO:Initializing get_config()
2025-02-27 14:59:18,267:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcf427efe80>, variable=y_test)
2025-02-27 14:59:18,268:INFO:Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
2025-02-27 14:59:18,268:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2025-02-27 14:59:18,273:INFO:Variable:  returned as 1932     PCM
1719     PCM
2190    PDLC
780      PCM
296     PDLC
        ... 
1147      CT
2247    PDLC
531      PCM
527      PCM
1907     PCM
Name: Site, Length: 452, dtype: category
Categories (3, object): ['CT', 'PCM', 'PDLC']
2025-02-27 14:59:18,273:INFO:get_config() successfully completed......................................
2025-02-27 14:59:18,336:INFO:Initializing tune_model()
2025-02-27 14:59:18,336:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid={'criterion': ['entropy'], 'min_samples_leaf': [5, 10, 15, 20, 25, 30], 'n_estimators': [10, 50, 100, 200]}, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcf427efe80>)
2025-02-27 14:59:18,336:INFO:Checking exceptions
2025-02-27 14:59:18,365:INFO:Copying training dataset
2025-02-27 14:59:18,374:INFO:Checking base model
2025-02-27 14:59:18,374:INFO:Base model : Random Forest Classifier
2025-02-27 14:59:18,380:INFO:Declaring metric variables
2025-02-27 14:59:18,388:INFO:Defining Hyperparameters
2025-02-27 14:59:18,555:INFO:custom_grid: {'actual_estimator__criterion': ['entropy'], 'actual_estimator__min_samples_leaf': [5, 10, 15, 20, 25, 30], 'actual_estimator__n_estimators': [10, 50, 100, 200]}
2025-02-27 14:59:18,555:INFO:Tuning with n_jobs=-1
2025-02-27 14:59:18,555:INFO:Initializing RandomizedSearchCV
2025-02-27 14:59:18,732:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:18,764:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:18,765:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:18,775:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:18,877:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:18,915:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:18,949:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:18,952:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:19,020:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:19,247:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:19,345:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:19,361:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:19,371:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:19,712:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:19,861:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:19,902:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:19,959:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:20,125:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:20,363:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:20,830:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:20,861:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:20,897:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:21,039:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:21,691:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:21,734:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:21,737:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:21,983:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:22,580:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:22,588:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:22,642:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:22,775:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:23,360:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:23,453:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:23,545:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:23,612:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:24,096:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:24,193:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:24,324:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:24,555:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:24,937:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:25,036:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:25,135:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:25,404:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:25,687:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:25,807:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:25,863:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:26,184:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:26,448:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:26,646:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:26,721:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:26,764:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:26,851:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:27,074:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:27,080:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:27,128:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:27,308:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:27,475:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:27,618:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:27,634:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:27,797:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:29,047:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:29,156:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:29,161:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:29,378:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:30,493:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:30,581:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:30,661:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:30,711:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:31,070:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:31,141:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:31,708:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:31,718:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:31,921:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:31,958:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:32,129:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:32,164:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:32,271:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:32,367:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:32,583:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:32,626:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:33,587:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:33,727:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:33,934:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:34,042:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:35,188:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:35,188:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:35,336:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:35,614:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:36,170:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:36,478:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:36,519:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:36,576:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:36,888:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:37,128:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:37,191:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:37,297:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:37,533:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:37,820:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:37,875:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:37,980:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:37,999:INFO:best_params: {'actual_estimator__n_estimators': 100, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__criterion': 'entropy'}
2025-02-27 14:59:38,001:INFO:Hyperparameter search completed
2025-02-27 14:59:38,002:INFO:SubProcess create_model() called ==================================
2025-02-27 14:59:38,004:INFO:Initializing create_model()
2025-02-27 14:59:38,004:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcf427efe80>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fcf42ae5bd0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 100, 'min_samples_leaf': 5, 'criterion': 'entropy'})
2025-02-27 14:59:38,004:INFO:Checking exceptions
2025-02-27 14:59:38,005:INFO:Importing libraries
2025-02-27 14:59:38,005:INFO:Copying training dataset
2025-02-27 14:59:38,033:INFO:Defining folds
2025-02-27 14:59:38,033:INFO:Declaring metric variables
2025-02-27 14:59:38,052:INFO:Importing untrained model
2025-02-27 14:59:38,053:INFO:Declaring custom model
2025-02-27 14:59:38,072:INFO:Random Forest Classifier Imported successfully
2025-02-27 14:59:38,103:INFO:Starting cross validation
2025-02-27 14:59:38,105:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:59:38,984:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:39,001:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:39,013:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:39,014:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:39,021:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:39,021:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:39,024:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:39,027:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:39,028:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:39,031:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:39,035:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:39,039:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:39,841:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:39,841:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:39,847:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:39,850:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:39,854:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:39,857:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:39,868:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:39,876:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:39,883:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:39,897:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:39,904:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:39,910:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:40,421:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:40,427:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:40,430:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:40,433:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:40,434:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:40,438:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:40,452:INFO:Calculating mean and std
2025-02-27 14:59:40,453:INFO:Creating metrics dataframe
2025-02-27 14:59:40,460:INFO:Finalizing model
2025-02-27 14:59:40,860:INFO:Uploading results into container
2025-02-27 14:59:40,861:INFO:Uploading model into container now
2025-02-27 14:59:40,862:INFO:_master_model_container: 2
2025-02-27 14:59:40,862:INFO:_display_container: 3
2025-02-27 14:59:40,863:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-02-27 14:59:40,863:INFO:create_model() successfully completed......................................
2025-02-27 14:59:41,060:INFO:SubProcess create_model() end ==================================
2025-02-27 14:59:41,060:INFO:choose_better activated
2025-02-27 14:59:41,066:INFO:SubProcess create_model() called ==================================
2025-02-27 14:59:41,067:INFO:Initializing create_model()
2025-02-27 14:59:41,068:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcf427efe80>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:59:41,068:INFO:Checking exceptions
2025-02-27 14:59:41,072:INFO:Importing libraries
2025-02-27 14:59:41,072:INFO:Copying training dataset
2025-02-27 14:59:41,085:INFO:Defining folds
2025-02-27 14:59:41,086:INFO:Declaring metric variables
2025-02-27 14:59:41,086:INFO:Importing untrained model
2025-02-27 14:59:41,086:INFO:Declaring custom model
2025-02-27 14:59:41,088:INFO:Random Forest Classifier Imported successfully
2025-02-27 14:59:41,088:INFO:Starting cross validation
2025-02-27 14:59:41,090:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:59:42,955:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:42,966:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:42,972:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:42,972:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:42,973:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:42,978:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:42,979:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:42,979:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:42,986:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:43,132:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:43,139:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:43,152:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:44,877:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:44,883:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:44,889:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:44,909:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:44,917:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:44,925:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:44,944:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:44,951:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:44,958:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:44,990:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:44,996:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:45,003:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:46,002:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:46,006:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:46,013:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:46,069:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:46,073:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:46,076:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:46,089:INFO:Calculating mean and std
2025-02-27 14:59:46,089:INFO:Creating metrics dataframe
2025-02-27 14:59:46,091:INFO:Finalizing model
2025-02-27 14:59:46,814:INFO:Uploading results into container
2025-02-27 14:59:46,815:INFO:Uploading model into container now
2025-02-27 14:59:46,815:INFO:_master_model_container: 3
2025-02-27 14:59:46,815:INFO:_display_container: 4
2025-02-27 14:59:46,816:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-02-27 14:59:46,816:INFO:create_model() successfully completed......................................
2025-02-27 14:59:46,959:INFO:SubProcess create_model() end ==================================
2025-02-27 14:59:46,960:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) result for F1 is 0.9622
2025-02-27 14:59:46,961:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) result for F1 is 0.9605
2025-02-27 14:59:46,962:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) is best model
2025-02-27 14:59:46,962:INFO:choose_better completed
2025-02-27 14:59:46,962:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-02-27 14:59:46,985:INFO:_master_model_container: 3
2025-02-27 14:59:46,985:INFO:_display_container: 3
2025-02-27 14:59:46,987:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-02-27 14:59:46,987:INFO:tune_model() successfully completed......................................
2025-02-27 14:59:48,169:INFO:Initializing calibrate_model()
2025-02-27 14:59:48,170:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcf427efe80>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-02-27 14:59:48,170:INFO:Checking exceptions
2025-02-27 14:59:48,174:INFO:Preloading libraries
2025-02-27 14:59:48,175:INFO:Preparing display monitor
2025-02-27 14:59:48,205:INFO:Getting model name
2025-02-27 14:59:48,206:INFO:Base model : Random Forest Classifier
2025-02-27 14:59:48,224:INFO:Importing untrained CalibratedClassifierCV
2025-02-27 14:59:48,224:INFO:SubProcess create_model() called ==================================
2025-02-27 14:59:48,228:INFO:Initializing create_model()
2025-02-27 14:59:48,228:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcf427efe80>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight='balanced',
                                                        criterion='entropy',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=5,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=200,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=42,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7fcf3fc0ab00>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 14:59:48,228:INFO:Checking exceptions
2025-02-27 14:59:48,228:INFO:Importing libraries
2025-02-27 14:59:48,228:INFO:Copying training dataset
2025-02-27 14:59:48,244:INFO:Defining folds
2025-02-27 14:59:48,244:INFO:Declaring metric variables
2025-02-27 14:59:48,250:INFO:Importing untrained model
2025-02-27 14:59:48,250:INFO:Declaring custom model
2025-02-27 14:59:48,259:INFO:Random Forest Classifier Imported successfully
2025-02-27 14:59:48,275:INFO:Starting cross validation
2025-02-27 14:59:48,278:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 14:59:56,367:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:56,377:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:56,386:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:56,409:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:56,420:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:56,427:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:56,587:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:56,594:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:56,601:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:56,630:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:56,642:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 14:59:56,652:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:00:03,911:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:00:03,918:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:00:03,926:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:00:04,217:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:00:04,225:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:00:04,233:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:00:04,386:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:00:04,397:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:00:04,416:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:00:04,546:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:00:04,553:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:00:04,560:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:00:09,513:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:00:09,517:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:00:09,523:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:00:09,736:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:00:09,742:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:00:09,747:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:00:09,758:INFO:Calculating mean and std
2025-02-27 15:00:09,761:INFO:Creating metrics dataframe
2025-02-27 15:00:09,772:INFO:Finalizing model
2025-02-27 15:00:13,440:INFO:Uploading results into container
2025-02-27 15:00:13,441:INFO:Uploading model into container now
2025-02-27 15:00:13,441:INFO:_master_model_container: 4
2025-02-27 15:00:13,441:INFO:_display_container: 4
2025-02-27 15:00:13,442:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight='balanced',
                                                        criterion='entropy',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=5,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=200,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=42,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-02-27 15:00:13,443:INFO:create_model() successfully completed......................................
2025-02-27 15:00:13,586:INFO:SubProcess create_model() end ==================================
2025-02-27 15:00:13,621:INFO:_master_model_container: 4
2025-02-27 15:00:13,621:INFO:_display_container: 4
2025-02-27 15:00:13,624:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight='balanced',
                                                        criterion='entropy',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=5,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=200,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=42,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-02-27 15:00:13,625:INFO:calibrate_model() successfully completed......................................
2025-02-27 15:00:13,888:INFO:Initializing predict_model()
2025-02-27 15:00:13,888:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcf427efe80>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight='balanced',
                                                        criterion='entropy',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=5,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=200,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=42,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7fcf3ccb6950>)
2025-02-27 15:00:13,888:INFO:Checking exceptions
2025-02-27 15:00:13,888:INFO:Preloading libraries
2025-02-27 15:00:14,886:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:00:14,891:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:00:14,898:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:00:15,170:INFO:Initializing finalize_model()
2025-02-27 15:00:15,170:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcf427efe80>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight='balanced',
                                                        criterion='entropy',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=5,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=200,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=42,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-02-27 15:00:15,171:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight='balanced',
                                                        criterion='entropy',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=5,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=200,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=42,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-02-27 15:00:15,178:INFO:Initializing create_model()
2025-02-27 15:00:15,178:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcf427efe80>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight='balanced',
                                                        criterion='entropy',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=5,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=200,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=42,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 15:00:15,178:INFO:Checking exceptions
2025-02-27 15:00:15,180:INFO:Importing libraries
2025-02-27 15:00:15,180:INFO:Copying training dataset
2025-02-27 15:00:15,180:INFO:Defining folds
2025-02-27 15:00:15,181:INFO:Declaring metric variables
2025-02-27 15:00:15,181:INFO:Importing untrained model
2025-02-27 15:00:15,181:INFO:Declaring custom model
2025-02-27 15:00:15,182:INFO:Random Forest Classifier Imported successfully
2025-02-27 15:00:15,183:INFO:Cross validation set to False
2025-02-27 15:00:15,183:INFO:Fitting Model
2025-02-27 15:00:19,422:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Ca', 'S', 'K', 'Ti', 'V', 'Cr',
                                             'Cu', 'Zn', 'As', 'Se', 'Sr', 'Mo',
                                             'Ba', 'Ta'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,...
                                                                         class_weight='balanced',
                                                                         criterion='entropy',
                                                                         max_depth=None,
                                                                         max_features='sqrt',
                                                                         max_leaf_nodes=None,
                                                                         max_samples=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=5,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         n_estimators=200,
                                                                         n_jobs=-1,
                                                                         oob_score=False,
                                                                         random_state=42,
                                                                         verbose=0,
                                                                         warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-02-27 15:00:19,423:INFO:create_model() successfully completed......................................
2025-02-27 15:00:19,569:INFO:_master_model_container: 4
2025-02-27 15:00:19,569:INFO:_display_container: 5
2025-02-27 15:00:19,584:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Ca', 'S', 'K', 'Ti', 'V', 'Cr',
                                             'Cu', 'Zn', 'As', 'Se', 'Sr', 'Mo',
                                             'Ba', 'Ta'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,...
                                                                         class_weight='balanced',
                                                                         criterion='entropy',
                                                                         max_depth=None,
                                                                         max_features='sqrt',
                                                                         max_leaf_nodes=None,
                                                                         max_samples=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=5,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         n_estimators=200,
                                                                         n_jobs=-1,
                                                                         oob_score=False,
                                                                         random_state=42,
                                                                         verbose=0,
                                                                         warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-02-27 15:00:19,584:INFO:finalize_model() successfully completed......................................
2025-02-27 15:00:19,818:INFO:Initializing predict_model()
2025-02-27 15:00:19,819:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7fcf427efe80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Ca', 'S', 'K', 'Ti', 'V', 'Cr',
                                             'Cu', 'Zn', 'As', 'Se', 'Sr', 'Mo',
                                             'Ba', 'Ta'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,...
                                                                         class_weight='balanced',
                                                                         criterion='entropy',
                                                                         max_depth=None,
                                                                         max_features='sqrt',
                                                                         max_leaf_nodes=None,
                                                                         max_samples=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=5,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         n_estimators=200,
                                                                         n_jobs=-1,
                                                                         oob_score=False,
                                                                         random_state=42,
                                                                         verbose=0,
                                                                         warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7fcf3ccb6950>)
2025-02-27 15:00:19,819:INFO:Checking exceptions
2025-02-27 15:00:19,819:INFO:Preloading libraries
2025-02-27 15:00:19,822:INFO:Set up data.
2025-02-27 15:00:19,848:INFO:Set up index.
2025-02-27 15:00:20,749:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:00:20,752:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:00:20,756:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:00:21,527:INFO:Initializing save_model()
2025-02-27 15:00:21,527:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Ca', 'S', 'K', 'Ti', 'V', 'Cr',
                                             'Cu', 'Zn', 'As', 'Se', 'Sr', 'Mo',
                                             'Ba', 'Ta'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,...
                                                                         class_weight='balanced',
                                                                         criterion='entropy',
                                                                         max_depth=None,
                                                                         max_features='sqrt',
                                                                         max_leaf_nodes=None,
                                                                         max_samples=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=5,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         n_estimators=200,
                                                                         n_jobs=-1,
                                                                         oob_score=False,
                                                                         random_state=42,
                                                                         verbose=0,
                                                                         warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False), model_name=/home/dsg/VORTEX_FINAL/PRODUCTION/models/20250227_DestilledModel, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Ca', 'S', 'K', 'Ti', 'V', 'Cr',
                                             'Cu', 'Zn', 'As', 'Se', 'Sr', 'Mo',
                                             'Ba', 'Ta'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-27 15:00:21,527:INFO:Adding model into prep_pipe
2025-02-27 15:00:21,527:WARNING:Only Model saved as it was a pipeline.
2025-02-27 15:00:22,036:INFO:/home/dsg/VORTEX_FINAL/PRODUCTION/models/20250227_DestilledModel.pkl saved in current working directory
2025-02-27 15:00:22,045:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Ca', 'S', 'K', 'Ti', 'V', 'Cr',
                                             'Cu', 'Zn', 'As', 'Se', 'Sr', 'Mo',
                                             'Ba', 'Ta'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,...
                                                                         class_weight='balanced',
                                                                         criterion='entropy',
                                                                         max_depth=None,
                                                                         max_features='sqrt',
                                                                         max_leaf_nodes=None,
                                                                         max_samples=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=5,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         n_estimators=200,
                                                                         n_jobs=-1,
                                                                         oob_score=False,
                                                                         random_state=42,
                                                                         verbose=0,
                                                                         warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-02-27 15:00:22,046:INFO:save_model() successfully completed......................................
2025-02-27 15:04:47,053:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:04:47,054:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:04:47,054:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:04:47,054:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:05:07,573:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:05:07,573:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:05:07,573:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:05:07,573:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:05:12,346:INFO:PyCaret ClassificationExperiment
2025-02-27 15:05:12,346:INFO:Logging name: clf-default-name
2025-02-27 15:05:12,346:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-27 15:05:12,346:INFO:version 3.3.2
2025-02-27 15:05:12,346:INFO:Initializing setup()
2025-02-27 15:05:12,346:INFO:self.USI: 7ec7
2025-02-27 15:05:12,346:INFO:self._variable_keys: {'n_jobs_param', '_available_plots', 'log_plots_param', 'pipeline', 'data', 'USI', 'fix_imbalance', 'fold_groups_param', 'is_multiclass', 'html_param', 'memory', 'gpu_param', 'fold_shuffle_param', 'y_train', 'y_test', 'X_train', 'X', 'fold_generator', 'y', 'exp_id', '_ml_usecase', 'exp_name_log', 'target_param', 'gpu_n_jobs_param', 'seed', 'idx', 'X_test', 'logging_param'}
2025-02-27 15:05:12,347:INFO:Checking environment
2025-02-27 15:05:12,347:INFO:python_version: 3.10.12
2025-02-27 15:05:12,347:INFO:python_build: ('main', 'Jan 15 2024 21:14:33')
2025-02-27 15:05:12,347:INFO:machine: x86_64
2025-02-27 15:05:12,347:INFO:platform: Linux-5.15.0-131-generic-x86_64-with-glibc2.31
2025-02-27 15:05:12,347:INFO:Memory: svmem(total=7813275648, available=1472974848, percent=81.1, used=5535723520, free=801325056, active=2366373888, inactive=4103364608, buffers=36225024, cached=1440002048, shared=516907008, slab=311758848)
2025-02-27 15:05:12,348:INFO:Physical Core: 2
2025-02-27 15:05:12,349:INFO:Logical Core: 4
2025-02-27 15:05:12,349:INFO:Checking libraries
2025-02-27 15:05:12,349:INFO:System:
2025-02-27 15:05:12,349:INFO:    python: 3.10.12 (main, Jan 15 2024, 21:14:33) [GCC 9.4.0]
2025-02-27 15:05:12,349:INFO:executable: /home/dsg/VORTEX_FINAL/venv/bin/python3
2025-02-27 15:05:12,349:INFO:   machine: Linux-5.15.0-131-generic-x86_64-with-glibc2.31
2025-02-27 15:05:12,349:INFO:PyCaret required dependencies:
2025-02-27 15:05:12,862:INFO:                 pip: 25.0.1
2025-02-27 15:05:12,862:INFO:          setuptools: 75.8.0
2025-02-27 15:05:12,862:INFO:             pycaret: 3.3.2
2025-02-27 15:05:12,862:INFO:             IPython: 8.20.0
2025-02-27 15:05:12,862:INFO:          ipywidgets: 8.1.1
2025-02-27 15:05:12,862:INFO:                tqdm: 4.66.1
2025-02-27 15:05:12,862:INFO:               numpy: 1.24.4
2025-02-27 15:05:12,862:INFO:              pandas: 2.0.3
2025-02-27 15:05:12,862:INFO:              jinja2: 3.1.3
2025-02-27 15:05:12,863:INFO:               scipy: 1.10.1
2025-02-27 15:05:12,863:INFO:              joblib: 1.3.2
2025-02-27 15:05:12,863:INFO:             sklearn: 1.4.2
2025-02-27 15:05:12,863:INFO:                pyod: 2.0.1
2025-02-27 15:05:12,863:INFO:            imblearn: 0.12.3
2025-02-27 15:05:12,863:INFO:   category_encoders: 2.6.3
2025-02-27 15:05:12,863:INFO:            lightgbm: 4.2.0
2025-02-27 15:05:12,863:INFO:               numba: 0.58.1
2025-02-27 15:05:12,863:INFO:            requests: 2.32.3
2025-02-27 15:05:12,863:INFO:          matplotlib: 3.6.0
2025-02-27 15:05:12,863:INFO:          scikitplot: 0.3.7
2025-02-27 15:05:12,863:INFO:         yellowbrick: 1.5
2025-02-27 15:05:12,863:INFO:              plotly: 5.18.0
2025-02-27 15:05:12,863:INFO:    plotly-resampler: Not installed
2025-02-27 15:05:12,864:INFO:             kaleido: 0.2.1
2025-02-27 15:05:12,864:INFO:           schemdraw: 0.15
2025-02-27 15:05:12,864:INFO:         statsmodels: 0.14.1
2025-02-27 15:05:12,864:INFO:              sktime: 0.26.0
2025-02-27 15:05:12,864:INFO:               tbats: 1.1.3
2025-02-27 15:05:12,864:INFO:            pmdarima: 2.0.4
2025-02-27 15:05:12,864:INFO:              psutil: 5.9.7
2025-02-27 15:05:12,864:INFO:          markupsafe: 2.1.3
2025-02-27 15:05:12,864:INFO:             pickle5: Not installed
2025-02-27 15:05:12,864:INFO:         cloudpickle: 3.1.1
2025-02-27 15:05:12,864:INFO:         deprecation: 2.1.0
2025-02-27 15:05:12,864:INFO:              xxhash: 3.4.1
2025-02-27 15:05:12,864:INFO:           wurlitzer: 3.0.3
2025-02-27 15:05:12,864:INFO:PyCaret optional dependencies:
2025-02-27 15:05:14,220:INFO:                shap: 0.44.0
2025-02-27 15:05:14,220:INFO:           interpret: 0.5.0
2025-02-27 15:05:14,220:INFO:                umap: 0.5.5
2025-02-27 15:05:14,220:INFO:     ydata_profiling: 4.6.0
2025-02-27 15:05:14,220:INFO:  explainerdashboard: 0.4.5
2025-02-27 15:05:14,220:INFO:             autoviz: 0.1.804
2025-02-27 15:05:14,220:INFO:           fairlearn: 0.7.0
2025-02-27 15:05:14,220:INFO:          deepchecks: Not installed
2025-02-27 15:05:14,220:INFO:             xgboost: 1.6.2
2025-02-27 15:05:14,220:INFO:            catboost: 1.2.2
2025-02-27 15:05:14,220:INFO:              kmodes: 0.12.2
2025-02-27 15:05:14,220:INFO:             mlxtend: 0.23.1
2025-02-27 15:05:14,220:INFO:       statsforecast: 1.5.0
2025-02-27 15:05:14,220:INFO:        tune_sklearn: 0.5.0
2025-02-27 15:05:14,221:INFO:                 ray: 2.9.0
2025-02-27 15:05:14,221:INFO:            hyperopt: 0.2.7
2025-02-27 15:05:14,221:INFO:              optuna: 3.5.0
2025-02-27 15:05:14,221:INFO:               skopt: 0.9.0
2025-02-27 15:05:14,221:INFO:              mlflow: 2.20.2
2025-02-27 15:05:14,221:INFO:              gradio: 3.50.2
2025-02-27 15:05:14,221:INFO:             fastapi: 0.109.0
2025-02-27 15:05:14,221:INFO:             uvicorn: 0.25.0
2025-02-27 15:05:14,221:INFO:              m2cgen: 0.10.0
2025-02-27 15:05:14,221:INFO:           evidently: 0.4.40
2025-02-27 15:05:14,221:INFO:               fugue: 0.8.7
2025-02-27 15:05:14,221:INFO:           streamlit: Not installed
2025-02-27 15:05:14,221:INFO:             prophet: Not installed
2025-02-27 15:05:14,221:INFO:None
2025-02-27 15:05:14,222:INFO:Set up data.
2025-02-27 15:05:14,234:INFO:Set up folding strategy.
2025-02-27 15:05:14,234:INFO:Set up train/test split.
2025-02-27 15:05:14,241:INFO:Set up index.
2025-02-27 15:05:14,242:INFO:Assigning column types.
2025-02-27 15:05:14,247:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-27 15:05:14,291:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 15:05:14,297:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 15:05:14,335:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-27 15:05:14,454:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-27 15:05:14,544:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 15:05:14,545:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 15:05:14,572:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-27 15:05:14,575:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-27 15:05:14,575:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-27 15:05:14,618:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 15:05:14,649:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-27 15:05:14,651:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-27 15:05:14,696:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 15:05:14,723:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-27 15:05:14,725:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-27 15:05:14,726:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-27 15:05:14,795:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-27 15:05:14,798:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-27 15:05:14,869:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-27 15:05:14,872:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-27 15:05:14,877:INFO:Preparing preprocessing pipeline...
2025-02-27 15:05:14,878:INFO:Set up label encoding.
2025-02-27 15:05:14,878:INFO:Set up simple imputation.
2025-02-27 15:05:14,916:INFO:Finished creating preprocessing pipeline.
2025-02-27 15:05:14,922:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Al', 'Si', 'P', 'K', 'Ca', 'Ti',
                                             'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ga',
                                             'Zn', 'As', 'Rb', 'Sr', 'Zr'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-02-27 15:05:14,922:INFO:Creating final display dataframe.
2025-02-27 15:05:15,030:INFO:Setup _display_container:                     Description                   Value
0                    Session id                     123
1                        Target                    Site
2                   Target type              Multiclass
3                Target mapping  CT: 0, PCM: 1, PDLC: 2
4           Original data shape              (2256, 18)
5        Transformed data shape              (2256, 18)
6   Transformed train set shape              (1804, 18)
7    Transformed test set shape               (452, 18)
8              Numeric features                      17
9                    Preprocess                    True
10              Imputation type                  simple
11           Numeric imputation                    mean
12       Categorical imputation                    mode
13               Fold Generator         StratifiedKFold
14                  Fold Number                      10
15                     CPU Jobs                      -1
16                      Use GPU                   False
17               Log Experiment                   False
18              Experiment Name        clf-default-name
19                          USI                    7ec7
2025-02-27 15:05:15,170:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-27 15:05:15,175:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-27 15:05:15,277:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-27 15:05:15,280:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-27 15:05:15,282:INFO:setup() successfully completed in 2.94s...............
2025-02-27 15:05:15,422:INFO:Initializing create_model()
2025-02-27 15:05:15,423:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6680af8ee0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 200, 'min_samples_leaf': 5, 'class_weight': 'balanced', 'criterion': 'entropy', 'random_state': 42})
2025-02-27 15:05:15,423:INFO:Checking exceptions
2025-02-27 15:05:15,460:INFO:Importing libraries
2025-02-27 15:05:15,461:INFO:Copying training dataset
2025-02-27 15:05:15,473:INFO:Defining folds
2025-02-27 15:05:15,474:INFO:Declaring metric variables
2025-02-27 15:05:15,479:INFO:Importing untrained model
2025-02-27 15:05:15,489:INFO:Random Forest Classifier Imported successfully
2025-02-27 15:05:15,505:INFO:Starting cross validation
2025-02-27 15:05:15,507:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 15:05:21,809:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:21,817:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:21,823:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:22,014:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:22,034:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:22,050:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:22,100:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:22,110:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:22,118:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:22,162:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:22,171:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:22,179:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:23,793:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:23,800:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:23,807:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:24,038:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:24,045:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:24,052:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:24,131:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:24,137:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:24,139:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:24,144:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:24,146:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:24,156:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:25,119:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:25,126:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:25,132:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:25,282:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:25,286:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:25,289:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:25,303:INFO:Calculating mean and std
2025-02-27 15:05:25,308:INFO:Creating metrics dataframe
2025-02-27 15:05:25,333:INFO:Finalizing model
2025-02-27 15:05:26,222:INFO:Uploading results into container
2025-02-27 15:05:26,226:INFO:Uploading model into container now
2025-02-27 15:05:26,271:INFO:_master_model_container: 1
2025-02-27 15:05:26,272:INFO:_display_container: 2
2025-02-27 15:05:26,274:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-02-27 15:05:26,275:INFO:create_model() successfully completed......................................
2025-02-27 15:05:26,602:INFO:Initializing tune_model()
2025-02-27 15:05:26,602:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid={'criterion': ['entropy'], 'min_samples_leaf': [5, 10, 15, 20, 25, 30], 'n_estimators': [10, 50, 100, 200]}, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6680af8ee0>)
2025-02-27 15:05:26,603:INFO:Checking exceptions
2025-02-27 15:05:26,640:INFO:Copying training dataset
2025-02-27 15:05:26,652:INFO:Checking base model
2025-02-27 15:05:26,653:INFO:Base model : Random Forest Classifier
2025-02-27 15:05:26,660:INFO:Declaring metric variables
2025-02-27 15:05:26,668:INFO:Defining Hyperparameters
2025-02-27 15:05:26,845:INFO:custom_grid: {'actual_estimator__criterion': ['entropy'], 'actual_estimator__min_samples_leaf': [5, 10, 15, 20, 25, 30], 'actual_estimator__n_estimators': [10, 50, 100, 200]}
2025-02-27 15:05:26,846:INFO:Tuning with n_jobs=-1
2025-02-27 15:05:26,846:INFO:Initializing RandomizedSearchCV
2025-02-27 15:05:27,039:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:27,040:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:27,082:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:27,095:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:27,230:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:27,242:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:27,266:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:27,268:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:27,417:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:27,704:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:27,778:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:27,784:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:27,811:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:28,267:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:28,390:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:28,459:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:28,509:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:28,930:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:29,084:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:29,573:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:29,624:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:29,648:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:30,049:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:30,584:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:30,756:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:30,772:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:31,051:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:31,593:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:31,784:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:31,889:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:31,920:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:32,615:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:32,841:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:32,977:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:32,987:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:33,494:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:33,841:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:33,904:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:34,117:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:34,948:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:34,967:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:35,088:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:35,113:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:35,830:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:35,922:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:36,109:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:36,193:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:36,809:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:36,850:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:36,944:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:37,122:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:37,334:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:37,436:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:37,437:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:37,655:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:37,829:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:37,937:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:37,955:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:38,224:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:38,255:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:39,601:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:39,843:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:40,118:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:40,133:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:41,305:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:41,538:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:41,912:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:42,011:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:42,363:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:42,496:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:42,852:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:43,051:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:43,098:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:43,161:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:43,329:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:43,445:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:43,500:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:43,636:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:43,842:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:43,883:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:45,132:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:45,305:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:45,601:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:45,638:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:46,895:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:47,503:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:47,822:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:47,962:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:48,849:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:48,954:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:49,152:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:49,569:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:49,653:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:49,881:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:50,185:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:50,603:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:50,767:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:51,008:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:51,214:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:51,391:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:51,398:INFO:best_params: {'actual_estimator__n_estimators': 100, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__criterion': 'entropy'}
2025-02-27 15:05:51,399:INFO:Hyperparameter search completed
2025-02-27 15:05:51,399:INFO:SubProcess create_model() called ==================================
2025-02-27 15:05:51,400:INFO:Initializing create_model()
2025-02-27 15:05:51,400:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6680af8ee0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f666e3b1f30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 100, 'min_samples_leaf': 5, 'criterion': 'entropy'})
2025-02-27 15:05:51,400:INFO:Checking exceptions
2025-02-27 15:05:51,400:INFO:Importing libraries
2025-02-27 15:05:51,400:INFO:Copying training dataset
2025-02-27 15:05:51,412:INFO:Defining folds
2025-02-27 15:05:51,412:INFO:Declaring metric variables
2025-02-27 15:05:51,416:INFO:Importing untrained model
2025-02-27 15:05:51,416:INFO:Declaring custom model
2025-02-27 15:05:51,423:INFO:Random Forest Classifier Imported successfully
2025-02-27 15:05:51,436:INFO:Starting cross validation
2025-02-27 15:05:51,439:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 15:05:52,573:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:52,581:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:52,584:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:52,585:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:52,593:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:52,596:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:52,598:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:52,608:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:52,619:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:52,649:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:52,660:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:52,667:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:53,590:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:53,590:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:53,596:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:53,597:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:53,603:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:53,604:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:53,625:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:53,632:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:53,636:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:53,640:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:53,643:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:53,651:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:54,220:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:54,227:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:54,232:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:54,237:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:54,243:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:54,249:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:54,263:INFO:Calculating mean and std
2025-02-27 15:05:54,264:INFO:Creating metrics dataframe
2025-02-27 15:05:54,272:INFO:Finalizing model
2025-02-27 15:05:54,719:INFO:Uploading results into container
2025-02-27 15:05:54,721:INFO:Uploading model into container now
2025-02-27 15:05:54,722:INFO:_master_model_container: 2
2025-02-27 15:05:54,722:INFO:_display_container: 3
2025-02-27 15:05:54,723:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-02-27 15:05:54,723:INFO:create_model() successfully completed......................................
2025-02-27 15:05:54,923:INFO:SubProcess create_model() end ==================================
2025-02-27 15:05:54,923:INFO:choose_better activated
2025-02-27 15:05:54,933:INFO:SubProcess create_model() called ==================================
2025-02-27 15:05:54,934:INFO:Initializing create_model()
2025-02-27 15:05:54,934:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6680af8ee0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 15:05:54,934:INFO:Checking exceptions
2025-02-27 15:05:54,937:INFO:Importing libraries
2025-02-27 15:05:54,938:INFO:Copying training dataset
2025-02-27 15:05:54,954:INFO:Defining folds
2025-02-27 15:05:54,955:INFO:Declaring metric variables
2025-02-27 15:05:54,955:INFO:Importing untrained model
2025-02-27 15:05:54,955:INFO:Declaring custom model
2025-02-27 15:05:54,956:INFO:Random Forest Classifier Imported successfully
2025-02-27 15:05:54,956:INFO:Starting cross validation
2025-02-27 15:05:54,957:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 15:05:56,915:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:56,919:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:56,924:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:56,926:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:56,930:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:56,946:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:56,979:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:56,983:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:56,991:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:57,091:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:57,098:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:57,105:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:58,892:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:58,907:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:58,918:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:58,939:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:58,947:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:58,954:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:58,981:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:58,988:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:58,995:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:59,182:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:59,192:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:05:59,200:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:00,448:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:00,457:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:00,465:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:00,533:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:00,541:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:00,550:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:00,566:INFO:Calculating mean and std
2025-02-27 15:06:00,567:INFO:Creating metrics dataframe
2025-02-27 15:06:00,569:INFO:Finalizing model
2025-02-27 15:06:01,595:INFO:Uploading results into container
2025-02-27 15:06:01,596:INFO:Uploading model into container now
2025-02-27 15:06:01,596:INFO:_master_model_container: 3
2025-02-27 15:06:01,596:INFO:_display_container: 4
2025-02-27 15:06:01,597:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-02-27 15:06:01,597:INFO:create_model() successfully completed......................................
2025-02-27 15:06:01,765:INFO:SubProcess create_model() end ==================================
2025-02-27 15:06:01,766:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) result for F1 is 0.9617
2025-02-27 15:06:01,767:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) result for F1 is 0.9595
2025-02-27 15:06:01,768:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) is best model
2025-02-27 15:06:01,768:INFO:choose_better completed
2025-02-27 15:06:01,768:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-02-27 15:06:01,793:INFO:_master_model_container: 3
2025-02-27 15:06:01,793:INFO:_display_container: 3
2025-02-27 15:06:01,794:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-02-27 15:06:01,794:INFO:tune_model() successfully completed......................................
2025-02-27 15:06:02,036:INFO:Initializing calibrate_model()
2025-02-27 15:06:02,036:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6680af8ee0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-02-27 15:06:02,036:INFO:Checking exceptions
2025-02-27 15:06:02,039:INFO:Preloading libraries
2025-02-27 15:06:02,040:INFO:Preparing display monitor
2025-02-27 15:06:02,064:INFO:Getting model name
2025-02-27 15:06:02,065:INFO:Base model : Random Forest Classifier
2025-02-27 15:06:02,080:INFO:Importing untrained CalibratedClassifierCV
2025-02-27 15:06:02,080:INFO:SubProcess create_model() called ==================================
2025-02-27 15:06:02,084:INFO:Initializing create_model()
2025-02-27 15:06:02,084:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6680af8ee0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight='balanced',
                                                        criterion='entropy',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=5,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=200,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=42,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f666e5e18d0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 15:06:02,084:INFO:Checking exceptions
2025-02-27 15:06:02,084:INFO:Importing libraries
2025-02-27 15:06:02,084:INFO:Copying training dataset
2025-02-27 15:06:02,101:INFO:Defining folds
2025-02-27 15:06:02,101:INFO:Declaring metric variables
2025-02-27 15:06:02,108:INFO:Importing untrained model
2025-02-27 15:06:02,108:INFO:Declaring custom model
2025-02-27 15:06:02,121:INFO:Random Forest Classifier Imported successfully
2025-02-27 15:06:02,133:INFO:Starting cross validation
2025-02-27 15:06:02,135:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 15:06:12,863:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:12,874:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:12,888:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:12,946:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:12,962:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:12,974:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:12,981:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:12,984:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:12,989:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:13,850:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:13,901:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:13,960:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:23,042:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:23,067:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:23,088:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:23,876:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:23,901:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:23,917:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:24,239:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:24,247:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:24,254:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:25,258:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:25,265:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:25,273:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:30,446:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:30,458:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:30,468:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:30,969:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:30,975:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:30,982:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:30,989:INFO:Calculating mean and std
2025-02-27 15:06:30,992:INFO:Creating metrics dataframe
2025-02-27 15:06:31,001:INFO:Finalizing model
2025-02-27 15:06:35,616:INFO:Uploading results into container
2025-02-27 15:06:35,617:INFO:Uploading model into container now
2025-02-27 15:06:35,618:INFO:_master_model_container: 4
2025-02-27 15:06:35,618:INFO:_display_container: 4
2025-02-27 15:06:35,622:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight='balanced',
                                                        criterion='entropy',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=5,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=200,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=42,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-02-27 15:06:35,622:INFO:create_model() successfully completed......................................
2025-02-27 15:06:35,777:INFO:SubProcess create_model() end ==================================
2025-02-27 15:06:35,811:INFO:_master_model_container: 4
2025-02-27 15:06:35,811:INFO:_display_container: 4
2025-02-27 15:06:35,813:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight='balanced',
                                                        criterion='entropy',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=5,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=200,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=42,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-02-27 15:06:35,813:INFO:calibrate_model() successfully completed......................................
2025-02-27 15:06:36,073:INFO:Initializing get_config()
2025-02-27 15:06:36,073:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6680af8ee0>, variable=X_train)
2025-02-27 15:06:36,074:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2025-02-27 15:06:36,077:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2025-02-27 15:06:36,093:INFO:Variable:  returned as              Al         Si          P         K         Ca        Ti  \
1543   5.536874   6.536081  31.191404  0.006545   3.510932  0.802176   
411   28.780554  21.677641  25.095781  3.794080   1.349289  0.450157   
708   32.652016   4.326609  56.214722  0.004431   0.732991  0.165972   
518   43.577999  18.376516  30.885927  0.915429   0.071578  0.177513   
1835  15.160931  75.069321   4.128097  1.942900   0.094073  0.273895   
...         ...        ...        ...       ...        ...       ...   
1726  11.820518  12.292258  10.105528  3.059592   0.439470  0.461713   
1246  13.847412  15.601873  20.681034  0.005695  40.783859  0.813728   
973   36.886242   5.572439  39.343956  0.005067  10.391370  0.581351   
602   41.001385  10.141374  44.503593  0.004803   0.298408  0.081477   
1023  32.508793  26.658352  18.609850  0.005665  16.419119  0.463706   

             V        Cr        Mn         Fe        Co        Ga        Zn  \
1543  0.006545  0.181252  0.006545  48.126919  0.006545  0.000654  0.000654   
411   0.214282  0.150436  0.005466   7.419975  0.005466  0.000547  0.000547   
708   0.154127  0.441078  0.004431   1.099214  0.004431  0.000443  0.000443   
518   0.466014  0.534728  0.005197   1.831428  0.005197  0.000520  0.005882   
1835  0.077266  0.006308  0.006308   1.049307  0.006308  0.000631  0.003938   
...        ...       ...       ...        ...       ...       ...       ...   
1726  0.458055  0.425306  0.393822   5.766851  0.393822  0.039382  0.039382   
1246  0.284605  0.005695  0.005695   1.995974  0.005695  0.000569  0.009581   
973   0.262089  0.219746  0.005067   4.547026  0.005067  0.000507  0.009765   
602   0.235051  0.256336  0.004803   1.368796  0.004803  0.000480  0.000480   
1023  0.115434  0.255389  0.005665   2.372795  0.005665  0.000567  0.004766   

            As        Rb        Sr        Zr  
1543  0.287568  0.000654  0.025172  0.007677  
411   2.679388  0.000547  0.036059  0.004554  
708   0.008280  0.000443  0.006220  0.000443  
518   0.155239  0.000520  0.000520  0.030479  
1835  0.010539  0.001217  0.013075  0.005251  
...        ...       ...       ...       ...  
1726  0.080443  0.040088  0.043059  0.039382  
1246  0.202405  0.005330  1.364171  0.009114  
973   0.072634  0.000507  0.237501  0.009498  
602   0.474137  0.000480  0.000480  0.002843  
1023  0.029112  0.000567  0.085799  0.004533  

[1804 rows x 17 columns]
2025-02-27 15:06:36,094:INFO:get_config() successfully completed......................................
2025-02-27 15:06:36,094:INFO:Initializing get_config()
2025-02-27 15:06:36,094:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6680af8ee0>, variable=y_train)
2025-02-27 15:06:36,094:INFO:Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
2025-02-27 15:06:36,094:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2025-02-27 15:06:36,098:INFO:Variable:  returned as 1543      CT
411      PCM
708     PDLC
518      PCM
1835     PCM
        ... 
1726     PCM
1246      CT
973       CT
602      PCM
1023      CT
Name: Site, Length: 1804, dtype: category
Categories (3, object): ['CT', 'PCM', 'PDLC']
2025-02-27 15:06:36,098:INFO:get_config() successfully completed......................................
2025-02-27 15:06:36,098:INFO:Initializing get_config()
2025-02-27 15:06:36,098:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6680af8ee0>, variable=X_test)
2025-02-27 15:06:36,098:INFO:Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
2025-02-27 15:06:36,098:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2025-02-27 15:06:36,117:INFO:Variable:  returned as              Al         Si          P         K        Ca        Ti         V  \
1932  37.332470  21.569752  34.309437  1.219734  0.169842  0.273148  0.277473   
1719  24.246490  43.725014  17.875286  2.310558  0.572877  0.446656  0.267945   
2190  32.851688  11.597810  44.823780  0.004848  0.615385  0.430771  0.004848   
780   22.922483  17.011427  32.707428  1.185579  0.650882  0.198321  0.366244   
296   25.344984  27.094576  25.042681  1.642482  1.428356  0.619890  0.005627   
...         ...        ...        ...       ...       ...       ...       ...   
1147  14.883572  39.246002  18.919159  2.478150  8.154443  1.186860  0.329139   
2247  29.749601  13.896061  43.299297  0.403009  0.863348  0.551801  0.106919   
531   43.494476  12.774886  37.589520  0.005003  0.062039  0.097617  0.104197   
527   35.560070  18.823357  38.301407  0.768792  0.122722  0.147883  0.358684   
1907  42.514503   2.672236  51.233181  0.004544  0.263662  0.006453  0.223460   

            Cr        Mn         Fe        Co        Ga        Zn        As  \
1932  0.301043  0.005168   2.084095  0.005168  0.000517  0.000517  0.453871   
1719  0.130952  0.005946   8.160189  0.005946  0.000595  0.000595  0.270965   
2190  0.918360  0.004848   4.004779  0.004848  0.000485  0.000485  0.010570   
780   0.320320  0.005671  19.198534  0.005671  0.000567  0.000567  0.638222   
296   0.534302  0.005627  11.185805  0.005627  0.000563  0.000563  0.085022   
...        ...       ...        ...       ...       ...       ...       ...   
1147  0.005808  0.005808   6.103728  0.005808  0.000581  0.000581  0.092401   
2247  0.833222  0.004850   3.200489  0.004850  0.000485  0.000485  0.033645   
531   0.005003  0.005003   3.194570  0.005003  0.000500  0.002831  0.134149   
527   0.005024  0.005024   2.442653  0.005024  0.000502  0.006762  0.141957   
1907  0.301642  0.004544   0.793924  0.004544  0.000454  0.000454  0.023545   

            Rb        Sr        Zr  
1932  0.000517  0.004815  0.010651  
1719  0.000595  0.045030  0.004013  
2190  0.000485  0.003046  0.017637  
780   0.000567  0.015986  0.013738  
296   0.000563  0.017597  0.039726  
...        ...       ...       ...  
1147  0.000581  0.197193  0.006112  
2247  0.000485  0.006399  0.032536  
531   0.000500  0.000500  0.004113  
527   0.000502  0.012614  0.002313  
1907  0.000454  0.000454  0.000511  

[452 rows x 17 columns]
2025-02-27 15:06:36,118:INFO:get_config() successfully completed......................................
2025-02-27 15:06:36,118:INFO:Initializing get_config()
2025-02-27 15:06:36,118:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6680af8ee0>, variable=y_test)
2025-02-27 15:06:36,118:INFO:Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
2025-02-27 15:06:36,118:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2025-02-27 15:06:36,125:INFO:Variable:  returned as 1932     PCM
1719     PCM
2190    PDLC
780      PCM
296     PDLC
        ... 
1147      CT
2247    PDLC
531      PCM
527      PCM
1907     PCM
Name: Site, Length: 452, dtype: category
Categories (3, object): ['CT', 'PCM', 'PDLC']
2025-02-27 15:06:36,125:INFO:get_config() successfully completed......................................
2025-02-27 15:06:36,190:INFO:Initializing finalize_model()
2025-02-27 15:06:36,190:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6680af8ee0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight='balanced',
                                                        criterion='entropy',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=5,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=200,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=42,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-02-27 15:06:36,192:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight='balanced',
                                                        criterion='entropy',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=5,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=200,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=42,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-02-27 15:06:36,198:INFO:Initializing create_model()
2025-02-27 15:06:36,198:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6680af8ee0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight='balanced',
                                                        criterion='entropy',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=5,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=200,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=42,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 15:06:36,199:INFO:Checking exceptions
2025-02-27 15:06:36,200:INFO:Importing libraries
2025-02-27 15:06:36,200:INFO:Copying training dataset
2025-02-27 15:06:36,201:INFO:Defining folds
2025-02-27 15:06:36,201:INFO:Declaring metric variables
2025-02-27 15:06:36,201:INFO:Importing untrained model
2025-02-27 15:06:36,201:INFO:Declaring custom model
2025-02-27 15:06:36,203:INFO:Random Forest Classifier Imported successfully
2025-02-27 15:06:36,204:INFO:Cross validation set to False
2025-02-27 15:06:36,204:INFO:Fitting Model
2025-02-27 15:06:40,813:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Al', 'Si', 'P', 'K', 'Ca', 'Ti',
                                             'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ga',
                                             'Zn', 'As', 'Rb', 'Sr', 'Zr'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              f...
                                                                         class_weight='balanced',
                                                                         criterion='entropy',
                                                                         max_depth=None,
                                                                         max_features='sqrt',
                                                                         max_leaf_nodes=None,
                                                                         max_samples=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=5,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         n_estimators=200,
                                                                         n_jobs=-1,
                                                                         oob_score=False,
                                                                         random_state=42,
                                                                         verbose=0,
                                                                         warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-02-27 15:06:40,813:INFO:create_model() successfully completed......................................
2025-02-27 15:06:40,990:INFO:_master_model_container: 4
2025-02-27 15:06:40,990:INFO:_display_container: 4
2025-02-27 15:06:41,006:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Al', 'Si', 'P', 'K', 'Ca', 'Ti',
                                             'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ga',
                                             'Zn', 'As', 'Rb', 'Sr', 'Zr'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              f...
                                                                         class_weight='balanced',
                                                                         criterion='entropy',
                                                                         max_depth=None,
                                                                         max_features='sqrt',
                                                                         max_leaf_nodes=None,
                                                                         max_samples=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=5,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         n_estimators=200,
                                                                         n_jobs=-1,
                                                                         oob_score=False,
                                                                         random_state=42,
                                                                         verbose=0,
                                                                         warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-02-27 15:06:41,007:INFO:finalize_model() successfully completed......................................
2025-02-27 15:06:41,246:INFO:Initializing predict_model()
2025-02-27 15:06:41,246:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6680af8ee0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Al', 'Si', 'P', 'K', 'Ca', 'Ti',
                                             'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ga',
                                             'Zn', 'As', 'Rb', 'Sr', 'Zr'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              f...
                                                                         class_weight='balanced',
                                                                         criterion='entropy',
                                                                         max_depth=None,
                                                                         max_features='sqrt',
                                                                         max_leaf_nodes=None,
                                                                         max_samples=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=5,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         n_estimators=200,
                                                                         n_jobs=-1,
                                                                         oob_score=False,
                                                                         random_state=42,
                                                                         verbose=0,
                                                                         warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7f666e347d90>)
2025-02-27 15:06:41,246:INFO:Checking exceptions
2025-02-27 15:06:41,246:INFO:Preloading libraries
2025-02-27 15:06:41,249:INFO:Set up data.
2025-02-27 15:06:41,263:INFO:Set up index.
2025-02-27 15:06:42,036:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:42,045:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:42,050:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:06:42,766:INFO:Initializing save_model()
2025-02-27 15:06:42,766:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Al', 'Si', 'P', 'K', 'Ca', 'Ti',
                                             'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ga',
                                             'Zn', 'As', 'Rb', 'Sr', 'Zr'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              f...
                                                                         class_weight='balanced',
                                                                         criterion='entropy',
                                                                         max_depth=None,
                                                                         max_features='sqrt',
                                                                         max_leaf_nodes=None,
                                                                         max_samples=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=5,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         n_estimators=200,
                                                                         n_jobs=-1,
                                                                         oob_score=False,
                                                                         random_state=42,
                                                                         verbose=0,
                                                                         warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False), model_name=/home/dsg/VORTEX_FINAL/PRODUCTION/models/20250227_QuiruelasSpecific, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Al', 'Si', 'P', 'K', 'Ca', 'Ti',
                                             'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ga',
                                             'Zn', 'As', 'Rb', 'Sr', 'Zr'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-27 15:06:42,766:INFO:Adding model into prep_pipe
2025-02-27 15:06:42,766:WARNING:Only Model saved as it was a pipeline.
2025-02-27 15:06:43,379:INFO:/home/dsg/VORTEX_FINAL/PRODUCTION/models/20250227_QuiruelasSpecific.pkl saved in current working directory
2025-02-27 15:06:43,389:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Al', 'Si', 'P', 'K', 'Ca', 'Ti',
                                             'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ga',
                                             'Zn', 'As', 'Rb', 'Sr', 'Zr'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              f...
                                                                         class_weight='balanced',
                                                                         criterion='entropy',
                                                                         max_depth=None,
                                                                         max_features='sqrt',
                                                                         max_leaf_nodes=None,
                                                                         max_samples=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=5,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         n_estimators=200,
                                                                         n_jobs=-1,
                                                                         oob_score=False,
                                                                         random_state=42,
                                                                         verbose=0,
                                                                         warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-02-27 15:06:43,389:INFO:save_model() successfully completed......................................
2025-02-27 15:09:00,309:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:09:00,309:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:09:00,309:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:09:00,309:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:09:25,828:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:09:25,828:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:09:25,829:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:09:25,829:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:09:30,589:INFO:PyCaret ClassificationExperiment
2025-02-27 15:09:30,590:INFO:Logging name: clf-default-name
2025-02-27 15:09:30,590:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-27 15:09:30,590:INFO:version 3.3.2
2025-02-27 15:09:30,590:INFO:Initializing setup()
2025-02-27 15:09:30,590:INFO:self.USI: 4deb
2025-02-27 15:09:30,590:INFO:self._variable_keys: {'X_train', 'exp_id', '_available_plots', 'gpu_param', '_ml_usecase', 'USI', 'fold_groups_param', 'log_plots_param', 'seed', 'fix_imbalance', 'fold_shuffle_param', 'X', 'data', 'n_jobs_param', 'y', 'target_param', 'is_multiclass', 'y_train', 'X_test', 'y_test', 'fold_generator', 'memory', 'logging_param', 'exp_name_log', 'pipeline', 'html_param', 'gpu_n_jobs_param', 'idx'}
2025-02-27 15:09:30,590:INFO:Checking environment
2025-02-27 15:09:30,590:INFO:python_version: 3.10.12
2025-02-27 15:09:30,590:INFO:python_build: ('main', 'Jan 15 2024 21:14:33')
2025-02-27 15:09:30,590:INFO:machine: x86_64
2025-02-27 15:09:30,591:INFO:platform: Linux-5.15.0-131-generic-x86_64-with-glibc2.31
2025-02-27 15:09:30,591:INFO:Memory: svmem(total=7813275648, available=587554816, percent=92.5, used=6425223168, free=127791104, active=2321178624, inactive=4802023424, buffers=21934080, cached=1238327296, shared=513007616, slab=313692160)
2025-02-27 15:09:30,592:INFO:Physical Core: 2
2025-02-27 15:09:30,592:INFO:Logical Core: 4
2025-02-27 15:09:30,592:INFO:Checking libraries
2025-02-27 15:09:30,592:INFO:System:
2025-02-27 15:09:30,592:INFO:    python: 3.10.12 (main, Jan 15 2024, 21:14:33) [GCC 9.4.0]
2025-02-27 15:09:30,592:INFO:executable: /home/dsg/VORTEX_FINAL/venv/bin/python3
2025-02-27 15:09:30,592:INFO:   machine: Linux-5.15.0-131-generic-x86_64-with-glibc2.31
2025-02-27 15:09:30,592:INFO:PyCaret required dependencies:
2025-02-27 15:09:31,136:INFO:                 pip: 25.0.1
2025-02-27 15:09:31,136:INFO:          setuptools: 75.8.0
2025-02-27 15:09:31,136:INFO:             pycaret: 3.3.2
2025-02-27 15:09:31,136:INFO:             IPython: 8.20.0
2025-02-27 15:09:31,136:INFO:          ipywidgets: 8.1.1
2025-02-27 15:09:31,136:INFO:                tqdm: 4.66.1
2025-02-27 15:09:31,136:INFO:               numpy: 1.24.4
2025-02-27 15:09:31,136:INFO:              pandas: 2.0.3
2025-02-27 15:09:31,136:INFO:              jinja2: 3.1.3
2025-02-27 15:09:31,136:INFO:               scipy: 1.10.1
2025-02-27 15:09:31,137:INFO:              joblib: 1.3.2
2025-02-27 15:09:31,137:INFO:             sklearn: 1.4.2
2025-02-27 15:09:31,137:INFO:                pyod: 2.0.1
2025-02-27 15:09:31,137:INFO:            imblearn: 0.12.3
2025-02-27 15:09:31,137:INFO:   category_encoders: 2.6.3
2025-02-27 15:09:31,137:INFO:            lightgbm: 4.2.0
2025-02-27 15:09:31,137:INFO:               numba: 0.58.1
2025-02-27 15:09:31,137:INFO:            requests: 2.32.3
2025-02-27 15:09:31,137:INFO:          matplotlib: 3.6.0
2025-02-27 15:09:31,137:INFO:          scikitplot: 0.3.7
2025-02-27 15:09:31,137:INFO:         yellowbrick: 1.5
2025-02-27 15:09:31,137:INFO:              plotly: 5.18.0
2025-02-27 15:09:31,137:INFO:    plotly-resampler: Not installed
2025-02-27 15:09:31,137:INFO:             kaleido: 0.2.1
2025-02-27 15:09:31,137:INFO:           schemdraw: 0.15
2025-02-27 15:09:31,137:INFO:         statsmodels: 0.14.1
2025-02-27 15:09:31,137:INFO:              sktime: 0.26.0
2025-02-27 15:09:31,137:INFO:               tbats: 1.1.3
2025-02-27 15:09:31,137:INFO:            pmdarima: 2.0.4
2025-02-27 15:09:31,137:INFO:              psutil: 5.9.7
2025-02-27 15:09:31,137:INFO:          markupsafe: 2.1.3
2025-02-27 15:09:31,137:INFO:             pickle5: Not installed
2025-02-27 15:09:31,137:INFO:         cloudpickle: 3.1.1
2025-02-27 15:09:31,137:INFO:         deprecation: 2.1.0
2025-02-27 15:09:31,137:INFO:              xxhash: 3.4.1
2025-02-27 15:09:31,137:INFO:           wurlitzer: 3.0.3
2025-02-27 15:09:31,138:INFO:PyCaret optional dependencies:
2025-02-27 15:09:32,693:INFO:                shap: 0.44.0
2025-02-27 15:09:32,693:INFO:           interpret: 0.5.0
2025-02-27 15:09:32,693:INFO:                umap: 0.5.5
2025-02-27 15:09:32,693:INFO:     ydata_profiling: 4.6.0
2025-02-27 15:09:32,693:INFO:  explainerdashboard: 0.4.5
2025-02-27 15:09:32,693:INFO:             autoviz: 0.1.804
2025-02-27 15:09:32,693:INFO:           fairlearn: 0.7.0
2025-02-27 15:09:32,694:INFO:          deepchecks: Not installed
2025-02-27 15:09:32,694:INFO:             xgboost: 1.6.2
2025-02-27 15:09:32,694:INFO:            catboost: 1.2.2
2025-02-27 15:09:32,694:INFO:              kmodes: 0.12.2
2025-02-27 15:09:32,694:INFO:             mlxtend: 0.23.1
2025-02-27 15:09:32,694:INFO:       statsforecast: 1.5.0
2025-02-27 15:09:32,694:INFO:        tune_sklearn: 0.5.0
2025-02-27 15:09:32,694:INFO:                 ray: 2.9.0
2025-02-27 15:09:32,694:INFO:            hyperopt: 0.2.7
2025-02-27 15:09:32,694:INFO:              optuna: 3.5.0
2025-02-27 15:09:32,694:INFO:               skopt: 0.9.0
2025-02-27 15:09:32,694:INFO:              mlflow: 2.20.2
2025-02-27 15:09:32,694:INFO:              gradio: 3.50.2
2025-02-27 15:09:32,694:INFO:             fastapi: 0.109.0
2025-02-27 15:09:32,694:INFO:             uvicorn: 0.25.0
2025-02-27 15:09:32,695:INFO:              m2cgen: 0.10.0
2025-02-27 15:09:32,695:INFO:           evidently: 0.4.40
2025-02-27 15:09:32,695:INFO:               fugue: 0.8.7
2025-02-27 15:09:32,695:INFO:           streamlit: Not installed
2025-02-27 15:09:32,695:INFO:             prophet: Not installed
2025-02-27 15:09:32,695:INFO:None
2025-02-27 15:09:32,695:INFO:Set up data.
2025-02-27 15:09:32,705:INFO:Set up folding strategy.
2025-02-27 15:09:32,706:INFO:Set up train/test split.
2025-02-27 15:09:32,713:INFO:Set up index.
2025-02-27 15:09:32,714:INFO:Assigning column types.
2025-02-27 15:09:32,722:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-27 15:09:32,774:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 15:09:32,779:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 15:09:32,813:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-27 15:09:32,933:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-27 15:09:32,997:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 15:09:32,998:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 15:09:33,025:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-27 15:09:33,027:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-27 15:09:33,028:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-27 15:09:33,071:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 15:09:33,098:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-27 15:09:33,100:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-27 15:09:33,144:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 15:09:33,179:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-27 15:09:33,184:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-27 15:09:33,185:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-27 15:09:33,265:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-27 15:09:33,267:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-27 15:09:33,354:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-27 15:09:33,357:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-27 15:09:33,359:INFO:Preparing preprocessing pipeline...
2025-02-27 15:09:33,360:INFO:Set up label encoding.
2025-02-27 15:09:33,361:INFO:Set up simple imputation.
2025-02-27 15:09:33,402:INFO:Finished creating preprocessing pipeline.
2025-02-27 15:09:33,410:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Al', 'Si', 'P', 'S', 'Cl', 'K',
                                             'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co',
                                             'Ni', 'Cu', 'Zn', 'As', 'Rb', 'Sr',
                                             'Zr'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-02-27 15:09:33,410:INFO:Creating final display dataframe.
2025-02-27 15:09:33,542:INFO:Setup _display_container:                     Description                   Value
0                    Session id                     123
1                        Target                    Site
2                   Target type              Multiclass
3                Target mapping  CT: 0, PCM: 1, PDLC: 2
4           Original data shape              (2256, 20)
5        Transformed data shape              (2256, 20)
6   Transformed train set shape              (1804, 20)
7    Transformed test set shape               (452, 20)
8              Numeric features                      19
9                    Preprocess                    True
10              Imputation type                  simple
11           Numeric imputation                    mean
12       Categorical imputation                    mode
13               Fold Generator         StratifiedKFold
14                  Fold Number                      10
15                     CPU Jobs                      -1
16                      Use GPU                   False
17               Log Experiment                   False
18              Experiment Name        clf-default-name
19                          USI                    4deb
2025-02-27 15:09:33,663:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-27 15:09:33,666:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-27 15:09:33,746:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-27 15:09:33,748:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-27 15:09:33,751:INFO:setup() successfully completed in 3.16s...............
2025-02-27 15:09:33,889:INFO:Initializing create_model()
2025-02-27 15:09:33,889:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4871cf7250>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 200, 'min_samples_leaf': 5, 'class_weight': 'balanced', 'criterion': 'entropy', 'random_state': 42})
2025-02-27 15:09:33,889:INFO:Checking exceptions
2025-02-27 15:09:33,913:INFO:Importing libraries
2025-02-27 15:09:33,914:INFO:Copying training dataset
2025-02-27 15:09:33,929:INFO:Defining folds
2025-02-27 15:09:33,929:INFO:Declaring metric variables
2025-02-27 15:09:33,935:INFO:Importing untrained model
2025-02-27 15:09:33,944:INFO:Random Forest Classifier Imported successfully
2025-02-27 15:09:33,961:INFO:Starting cross validation
2025-02-27 15:09:33,964:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 15:09:42,412:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:42,418:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:42,421:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:42,429:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:42,430:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:42,434:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:42,436:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:42,441:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:42,447:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:42,448:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:42,456:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:42,464:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:45,270:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:45,281:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:45,294:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:45,294:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:45,301:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:45,318:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:45,360:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:45,371:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:45,401:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:45,445:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:45,466:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:45,473:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:46,861:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:46,866:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:46,873:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:46,903:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:46,908:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:46,917:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:46,927:INFO:Calculating mean and std
2025-02-27 15:09:46,930:INFO:Creating metrics dataframe
2025-02-27 15:09:46,948:INFO:Finalizing model
2025-02-27 15:09:47,903:INFO:Uploading results into container
2025-02-27 15:09:47,905:INFO:Uploading model into container now
2025-02-27 15:09:47,929:INFO:_master_model_container: 1
2025-02-27 15:09:47,929:INFO:_display_container: 2
2025-02-27 15:09:47,931:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-02-27 15:09:47,931:INFO:create_model() successfully completed......................................
2025-02-27 15:09:48,313:INFO:Initializing tune_model()
2025-02-27 15:09:48,313:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid={'criterion': ['entropy'], 'min_samples_leaf': [5, 10, 15, 20, 25, 30], 'n_estimators': [10, 50, 100, 200]}, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4871cf7250>)
2025-02-27 15:09:48,313:INFO:Checking exceptions
2025-02-27 15:09:48,367:INFO:Copying training dataset
2025-02-27 15:09:48,378:INFO:Checking base model
2025-02-27 15:09:48,378:INFO:Base model : Random Forest Classifier
2025-02-27 15:09:48,387:INFO:Declaring metric variables
2025-02-27 15:09:48,399:INFO:Defining Hyperparameters
2025-02-27 15:09:48,614:INFO:custom_grid: {'actual_estimator__criterion': ['entropy'], 'actual_estimator__min_samples_leaf': [5, 10, 15, 20, 25, 30], 'actual_estimator__n_estimators': [10, 50, 100, 200]}
2025-02-27 15:09:48,614:INFO:Tuning with n_jobs=-1
2025-02-27 15:09:48,614:INFO:Initializing RandomizedSearchCV
2025-02-27 15:09:48,874:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:48,884:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:48,891:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:48,956:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:49,063:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:49,125:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:49,135:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:49,173:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:49,316:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:49,455:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:49,764:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:49,928:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:50,242:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:50,368:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:50,557:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:50,582:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:50,994:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:51,072:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:51,158:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:51,204:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:52,141:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:52,153:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:52,349:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:52,367:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:53,037:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:53,288:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:53,374:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:53,491:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:54,082:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:54,188:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:54,315:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:54,541:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:55,009:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:55,105:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:55,221:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:55,571:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:55,985:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:56,038:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:56,193:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:56,553:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:56,831:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:56,885:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:57,072:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:57,541:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:57,904:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:57,958:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:58,453:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:58,742:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:59,056:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:59,185:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:59,212:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:59,269:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:59,572:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:59,664:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:59,693:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:09:59,791:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:00,108:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:00,189:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:00,196:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:00,242:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:01,877:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:01,914:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:01,938:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:02,041:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:03,565:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:03,591:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:03,602:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:03,889:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:04,180:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:04,413:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:04,667:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:05,245:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:05,513:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:05,829:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:05,830:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:06,017:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:06,225:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:06,404:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:06,479:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:06,508:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:08,039:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:08,211:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:08,274:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:08,307:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:09,693:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:09,903:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:10,056:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:10,090:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:10,918:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:10,959:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:11,398:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:11,533:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:11,882:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:11,887:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:12,363:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:12,479:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:12,758:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:12,865:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:13,146:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:13,208:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:13,224:INFO:best_params: {'actual_estimator__n_estimators': 50, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__criterion': 'entropy'}
2025-02-27 15:10:13,225:INFO:Hyperparameter search completed
2025-02-27 15:10:13,225:INFO:SubProcess create_model() called ==================================
2025-02-27 15:10:13,226:INFO:Initializing create_model()
2025-02-27 15:10:13,226:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4871cf7250>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f485f959db0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 50, 'min_samples_leaf': 5, 'criterion': 'entropy'})
2025-02-27 15:10:13,226:INFO:Checking exceptions
2025-02-27 15:10:13,226:INFO:Importing libraries
2025-02-27 15:10:13,226:INFO:Copying training dataset
2025-02-27 15:10:13,239:INFO:Defining folds
2025-02-27 15:10:13,239:INFO:Declaring metric variables
2025-02-27 15:10:13,243:INFO:Importing untrained model
2025-02-27 15:10:13,243:INFO:Declaring custom model
2025-02-27 15:10:13,252:INFO:Random Forest Classifier Imported successfully
2025-02-27 15:10:13,264:INFO:Starting cross validation
2025-02-27 15:10:13,267:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 15:10:13,848:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:13,856:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:13,860:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:13,863:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:13,868:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:13,875:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:13,887:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:13,895:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:13,897:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:13,902:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:13,905:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:13,917:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:14,409:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:14,416:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:14,423:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:14,467:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:14,476:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:14,476:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:14,477:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:14,483:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:14,483:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:14,484:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:14,491:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:14,492:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:14,827:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:14,836:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:14,842:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:14,878:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:14,893:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:14,903:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:14,910:INFO:Calculating mean and std
2025-02-27 15:10:14,912:INFO:Creating metrics dataframe
2025-02-27 15:10:14,923:INFO:Finalizing model
2025-02-27 15:10:15,224:INFO:Uploading results into container
2025-02-27 15:10:15,225:INFO:Uploading model into container now
2025-02-27 15:10:15,226:INFO:_master_model_container: 2
2025-02-27 15:10:15,226:INFO:_display_container: 3
2025-02-27 15:10:15,227:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=50, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-02-27 15:10:15,227:INFO:create_model() successfully completed......................................
2025-02-27 15:10:15,377:INFO:SubProcess create_model() end ==================================
2025-02-27 15:10:15,378:INFO:choose_better activated
2025-02-27 15:10:15,385:INFO:SubProcess create_model() called ==================================
2025-02-27 15:10:15,387:INFO:Initializing create_model()
2025-02-27 15:10:15,387:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4871cf7250>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 15:10:15,387:INFO:Checking exceptions
2025-02-27 15:10:15,390:INFO:Importing libraries
2025-02-27 15:10:15,390:INFO:Copying training dataset
2025-02-27 15:10:15,403:INFO:Defining folds
2025-02-27 15:10:15,403:INFO:Declaring metric variables
2025-02-27 15:10:15,403:INFO:Importing untrained model
2025-02-27 15:10:15,403:INFO:Declaring custom model
2025-02-27 15:10:15,406:INFO:Random Forest Classifier Imported successfully
2025-02-27 15:10:15,407:INFO:Starting cross validation
2025-02-27 15:10:15,408:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 15:10:17,502:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:17,509:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:17,524:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:17,527:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:17,537:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:17,545:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:17,622:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:17,629:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:17,636:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:17,638:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:17,643:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:17,651:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:19,706:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:19,722:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:19,729:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:19,782:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:19,790:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:19,797:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:19,935:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:19,964:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:19,984:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:20,182:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:20,197:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:20,208:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:21,564:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:21,571:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:21,572:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:21,579:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:21,580:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:21,586:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:21,597:INFO:Calculating mean and std
2025-02-27 15:10:21,597:INFO:Creating metrics dataframe
2025-02-27 15:10:21,600:INFO:Finalizing model
2025-02-27 15:10:22,427:INFO:Uploading results into container
2025-02-27 15:10:22,427:INFO:Uploading model into container now
2025-02-27 15:10:22,428:INFO:_master_model_container: 3
2025-02-27 15:10:22,428:INFO:_display_container: 4
2025-02-27 15:10:22,428:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-02-27 15:10:22,428:INFO:create_model() successfully completed......................................
2025-02-27 15:10:22,579:INFO:SubProcess create_model() end ==================================
2025-02-27 15:10:22,580:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) result for F1 is 0.9495
2025-02-27 15:10:22,581:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=50, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) result for F1 is 0.9505
2025-02-27 15:10:22,582:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=50, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) is best model
2025-02-27 15:10:22,582:INFO:choose_better completed
2025-02-27 15:10:22,600:INFO:_master_model_container: 3
2025-02-27 15:10:22,600:INFO:_display_container: 3
2025-02-27 15:10:22,601:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=50, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-02-27 15:10:22,601:INFO:tune_model() successfully completed......................................
2025-02-27 15:10:22,844:INFO:Initializing calibrate_model()
2025-02-27 15:10:22,844:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4871cf7250>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=50, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-02-27 15:10:22,844:INFO:Checking exceptions
2025-02-27 15:10:22,848:INFO:Preloading libraries
2025-02-27 15:10:22,848:INFO:Preparing display monitor
2025-02-27 15:10:22,874:INFO:Getting model name
2025-02-27 15:10:22,875:INFO:Base model : Random Forest Classifier
2025-02-27 15:10:22,891:INFO:Importing untrained CalibratedClassifierCV
2025-02-27 15:10:22,891:INFO:SubProcess create_model() called ==================================
2025-02-27 15:10:22,895:INFO:Initializing create_model()
2025-02-27 15:10:22,895:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4871cf7250>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight='balanced',
                                                        criterion='entropy',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=5,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=50,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=42,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f48c9a9a380>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 15:10:22,895:INFO:Checking exceptions
2025-02-27 15:10:22,895:INFO:Importing libraries
2025-02-27 15:10:22,895:INFO:Copying training dataset
2025-02-27 15:10:22,913:INFO:Defining folds
2025-02-27 15:10:22,913:INFO:Declaring metric variables
2025-02-27 15:10:22,920:INFO:Importing untrained model
2025-02-27 15:10:22,920:INFO:Declaring custom model
2025-02-27 15:10:22,929:INFO:Random Forest Classifier Imported successfully
2025-02-27 15:10:22,947:INFO:Starting cross validation
2025-02-27 15:10:22,949:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 15:10:25,748:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:25,760:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:25,761:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:25,767:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:25,770:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:25,778:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:25,778:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:25,788:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:25,797:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:25,832:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:25,839:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:25,845:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:28,457:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:28,477:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:28,489:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:28,665:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:28,692:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:28,701:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:28,936:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:28,949:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:28,958:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:28,989:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:28,996:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:29,004:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:30,462:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:30,471:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:30,478:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:30,578:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:30,582:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:30,587:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:30,600:INFO:Calculating mean and std
2025-02-27 15:10:30,601:INFO:Creating metrics dataframe
2025-02-27 15:10:30,608:INFO:Finalizing model
2025-02-27 15:10:31,947:INFO:Uploading results into container
2025-02-27 15:10:31,949:INFO:Uploading model into container now
2025-02-27 15:10:31,951:INFO:_master_model_container: 4
2025-02-27 15:10:31,952:INFO:_display_container: 4
2025-02-27 15:10:31,957:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight='balanced',
                                                        criterion='entropy',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=5,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=50,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=42,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-02-27 15:10:31,957:INFO:create_model() successfully completed......................................
2025-02-27 15:10:32,115:INFO:SubProcess create_model() end ==================================
2025-02-27 15:10:32,153:INFO:_master_model_container: 4
2025-02-27 15:10:32,154:INFO:_display_container: 4
2025-02-27 15:10:32,156:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight='balanced',
                                                        criterion='entropy',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=5,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=50,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=42,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-02-27 15:10:32,157:INFO:calibrate_model() successfully completed......................................
2025-02-27 15:10:32,407:INFO:Initializing get_config()
2025-02-27 15:10:32,408:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4871cf7250>, variable=X_train)
2025-02-27 15:10:32,408:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2025-02-27 15:10:32,409:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2025-02-27 15:10:32,424:INFO:Variable:  returned as              Al         Si          P         S        Cl         K        Ti  \
1543   5.536874   6.536081  31.191404  0.481360  2.590742  0.006545  0.802176   
411   28.780554  21.677641  25.095781  6.763490  0.980518  3.794080  0.450157   
708   32.652016   4.326609  56.214722  0.779345  2.889892  0.004431  0.165972   
518   43.577999  18.376516  30.885927  0.310261  2.048436  0.915429  0.177513   
1835  40.290730  12.551713  44.468685  0.099874  0.813186  0.004798  0.078124   
...         ...        ...        ...       ...       ...       ...       ...   
1726  41.255260  16.633038  36.282043  0.168137  2.234220  0.809619  0.109163   
1246  13.847412  15.601873  20.681034  1.002141  2.493073  0.005695  0.813728   
973   36.886242   5.572439  39.343956  0.165157  0.886461  0.005067  0.581351   
602   41.001385  10.141374  44.503593  0.253635  0.847883  0.004803  0.081477   
1023  32.508793  26.658352  18.609850  0.459082  1.242666  0.005665  0.463706   

             V        Cr        Mn         Fe        Co        Ni        Cu  \
1543  0.006545  0.181252  0.006545  48.126919  0.006545  0.006545  0.000654   
411   0.214282  0.150436  0.005466   7.419975  0.005466  0.005466  0.000547   
708   0.154127  0.441078  0.004431   1.099214  0.004431  0.004431  0.000443   
518   0.466014  0.534728  0.005197   1.831428  0.005197  0.005197  0.000520   
1835  0.185727  0.109071  0.004798   0.752996  0.004798  0.004798  0.000480   
...        ...       ...       ...        ...       ...       ...       ...   
1726  0.117676  0.300218  0.005014   1.289968  0.005014  0.004783  0.000501   
1246  0.284605  0.005695  0.005695   1.995974  0.005695  0.010090  0.138004   
973   0.262089  0.219746  0.005067   4.547026  0.005067  0.005067  0.144243   
602   0.235051  0.256336  0.004803   1.368796  0.004803  0.004803  0.000480   
1023  0.115434  0.255389  0.005665   2.372795  0.005665  0.006467  0.076848   

            Zn        As        Rb        Sr        Zr  
1543  0.000654  0.287568  0.000654  0.025172  0.007677  
411   0.000547  2.679388  0.000547  0.036059  0.004554  
708   0.000443  0.008280  0.000443  0.006220  0.000443  
518   0.005882  0.155239  0.000520  0.000520  0.030479  
1835  0.000480  0.101526  0.000480  0.001005  0.000922  
...        ...       ...       ...       ...       ...  
1726  0.004900  0.163211  0.000501  0.002678  0.003690  
1246  0.009581  0.202405  0.005330  1.364171  0.009114  
973   0.009765  0.072634  0.000507  0.237501  0.009498  
602   0.000480  0.474137  0.000480  0.000480  0.002843  
1023  0.004766  0.029112  0.000567  0.085799  0.004533  

[1804 rows x 19 columns]
2025-02-27 15:10:32,424:INFO:get_config() successfully completed......................................
2025-02-27 15:10:32,425:INFO:Initializing get_config()
2025-02-27 15:10:32,425:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4871cf7250>, variable=y_train)
2025-02-27 15:10:32,425:INFO:Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
2025-02-27 15:10:32,425:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2025-02-27 15:10:32,429:INFO:Variable:  returned as 1543      CT
411      PCM
708     PDLC
518      PCM
1835     PCM
        ... 
1726     PCM
1246      CT
973       CT
602      PCM
1023      CT
Name: Site, Length: 1804, dtype: category
Categories (3, object): ['CT', 'PCM', 'PDLC']
2025-02-27 15:10:32,429:INFO:get_config() successfully completed......................................
2025-02-27 15:10:32,429:INFO:Initializing get_config()
2025-02-27 15:10:32,429:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4871cf7250>, variable=X_test)
2025-02-27 15:10:32,429:INFO:Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
2025-02-27 15:10:32,429:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2025-02-27 15:10:32,445:INFO:Variable:  returned as              Al         Si          P         S        Cl         K        Ti  \
1932  40.709480  17.281277  35.681519  0.355829  2.755144  0.965112  0.169420   
1719  40.251858  16.953253  37.339005  0.197296  1.319866  0.833192  0.127001   
2190  35.351467  18.652672  38.094448  0.557593  2.363979  0.946068  0.337140   
780   22.922483  17.011427  32.707428  1.433993  2.616443  1.185579  0.198321   
296   25.344984  27.094576  25.042681  3.033184  3.314421  1.642482  0.619890   
...         ...        ...        ...       ...       ...       ...       ...   
1147  14.883572  39.246002  18.919159  2.460233  4.937653  2.478150  1.186860   
2247   6.706874  87.383568   2.658197  0.419861  1.139928  0.424643  0.124178   
531   43.494476  12.774886  37.589520  0.201611  1.772793  0.005003  0.097617   
527   35.560070  18.823357  38.301407  0.629638  2.127486  0.768792  0.147883   
1907  40.815601  14.484869  39.932381  0.277216  1.474962  0.148539  0.131790   

             V        Cr        Mn         Fe        Co        Ni        Cu  \
1932  0.088769  0.149791  0.005009   1.106271  0.005009  0.005009  0.000501   
1719  0.232949  0.375772  0.005024   1.518425  0.005024  0.003852  0.000502   
2190  0.085467  0.362435  0.005020   2.092415  0.005020  0.024385  0.021475   
780   0.366244  0.320320  0.005671  19.198534  0.005671  0.005671  0.027397   
296   0.005627  0.534302  0.005627  11.185805  0.005627  0.005627  0.000563   
...        ...       ...       ...        ...       ...       ...       ...   
1147  0.329139  0.005808  0.005808   6.103728  0.005808  0.005808  0.000581   
2247  0.006421  0.006421  0.006421   0.332152  0.006421  0.006421  0.000642   
531   0.104197  0.005003  0.005003   3.194570  0.005003  0.005003  0.000500   
527   0.358684  0.005024  0.005024   2.442653  0.005024  0.005024  0.000502   
1907  0.137320  0.058311  0.004928   1.726292  0.005128  0.004928  0.000493   

            Zn        As        Rb        Sr        Zr  
1932  0.003367  0.123563  0.000501  0.001645  0.005369  
1719  0.000502  0.163017  0.000502  0.002638  0.004626  
2190  0.009651  0.002941  0.001872  0.048427  0.011345  
780   0.000567  0.638222  0.000567  0.015986  0.013738  
296   0.000563  0.085022  0.000563  0.017597  0.039726  
...        ...       ...       ...       ...       ...  
1147  0.000581  0.092401  0.000581  0.197193  0.006112  
2247  0.001001  0.000642  0.001039  0.001106  0.001726  
531   0.002831  0.134149  0.000500  0.000500  0.004113  
527   0.006762  0.141957  0.000502  0.012614  0.002313  
1907  0.000493  0.216598  0.000493  0.001086  0.003763  

[452 rows x 19 columns]
2025-02-27 15:10:32,445:INFO:get_config() successfully completed......................................
2025-02-27 15:10:32,445:INFO:Initializing get_config()
2025-02-27 15:10:32,445:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4871cf7250>, variable=y_test)
2025-02-27 15:10:32,446:INFO:Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
2025-02-27 15:10:32,446:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2025-02-27 15:10:32,449:INFO:Variable:  returned as 1932     PCM
1719     PCM
2190    PDLC
780      PCM
296     PDLC
        ... 
1147      CT
2247    PDLC
531      PCM
527      PCM
1907     PCM
Name: Site, Length: 452, dtype: category
Categories (3, object): ['CT', 'PCM', 'PDLC']
2025-02-27 15:10:32,449:INFO:get_config() successfully completed......................................
2025-02-27 15:10:32,506:INFO:Initializing finalize_model()
2025-02-27 15:10:32,506:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4871cf7250>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight='balanced',
                                                        criterion='entropy',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=5,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=50,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=42,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-02-27 15:10:32,508:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight='balanced',
                                                        criterion='entropy',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=5,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=50,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=42,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-02-27 15:10:32,516:INFO:Initializing create_model()
2025-02-27 15:10:32,516:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4871cf7250>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight='balanced',
                                                        criterion='entropy',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=5,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=50,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=42,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 15:10:32,516:INFO:Checking exceptions
2025-02-27 15:10:32,518:INFO:Importing libraries
2025-02-27 15:10:32,518:INFO:Copying training dataset
2025-02-27 15:10:32,519:INFO:Defining folds
2025-02-27 15:10:32,519:INFO:Declaring metric variables
2025-02-27 15:10:32,519:INFO:Importing untrained model
2025-02-27 15:10:32,520:INFO:Declaring custom model
2025-02-27 15:10:32,521:INFO:Random Forest Classifier Imported successfully
2025-02-27 15:10:32,522:INFO:Cross validation set to False
2025-02-27 15:10:32,522:INFO:Fitting Model
2025-02-27 15:10:33,996:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Al', 'Si', 'P', 'S', 'Cl', 'K',
                                             'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co',
                                             'Ni', 'Cu', 'Zn', 'As', 'Rb', 'Sr',
                                             'Zr'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              co...
                                                                         class_weight='balanced',
                                                                         criterion='entropy',
                                                                         max_depth=None,
                                                                         max_features='sqrt',
                                                                         max_leaf_nodes=None,
                                                                         max_samples=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=5,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         n_estimators=50,
                                                                         n_jobs=-1,
                                                                         oob_score=False,
                                                                         random_state=42,
                                                                         verbose=0,
                                                                         warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-02-27 15:10:33,996:INFO:create_model() successfully completed......................................
2025-02-27 15:10:34,177:INFO:_master_model_container: 4
2025-02-27 15:10:34,177:INFO:_display_container: 4
2025-02-27 15:10:34,194:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Al', 'Si', 'P', 'S', 'Cl', 'K',
                                             'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co',
                                             'Ni', 'Cu', 'Zn', 'As', 'Rb', 'Sr',
                                             'Zr'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              co...
                                                                         class_weight='balanced',
                                                                         criterion='entropy',
                                                                         max_depth=None,
                                                                         max_features='sqrt',
                                                                         max_leaf_nodes=None,
                                                                         max_samples=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=5,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         n_estimators=50,
                                                                         n_jobs=-1,
                                                                         oob_score=False,
                                                                         random_state=42,
                                                                         verbose=0,
                                                                         warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-02-27 15:10:34,194:INFO:finalize_model() successfully completed......................................
2025-02-27 15:10:34,437:INFO:Initializing predict_model()
2025-02-27 15:10:34,437:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f4871cf7250>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Al', 'Si', 'P', 'S', 'Cl', 'K',
                                             'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co',
                                             'Ni', 'Cu', 'Zn', 'As', 'Rb', 'Sr',
                                             'Zr'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              co...
                                                                         class_weight='balanced',
                                                                         criterion='entropy',
                                                                         max_depth=None,
                                                                         max_features='sqrt',
                                                                         max_leaf_nodes=None,
                                                                         max_samples=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=5,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         n_estimators=50,
                                                                         n_jobs=-1,
                                                                         oob_score=False,
                                                                         random_state=42,
                                                                         verbose=0,
                                                                         warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7f485fac3a30>)
2025-02-27 15:10:34,437:INFO:Checking exceptions
2025-02-27 15:10:34,437:INFO:Preloading libraries
2025-02-27 15:10:34,440:INFO:Set up data.
2025-02-27 15:10:34,452:INFO:Set up index.
2025-02-27 15:10:34,827:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:34,837:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:34,842:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:10:35,537:INFO:Initializing save_model()
2025-02-27 15:10:35,538:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Al', 'Si', 'P', 'S', 'Cl', 'K',
                                             'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co',
                                             'Ni', 'Cu', 'Zn', 'As', 'Rb', 'Sr',
                                             'Zr'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              co...
                                                                         class_weight='balanced',
                                                                         criterion='entropy',
                                                                         max_depth=None,
                                                                         max_features='sqrt',
                                                                         max_leaf_nodes=None,
                                                                         max_samples=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=5,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         n_estimators=50,
                                                                         n_jobs=-1,
                                                                         oob_score=False,
                                                                         random_state=42,
                                                                         verbose=0,
                                                                         warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False), model_name=/home/dsg/VORTEX_FINAL/PRODUCTION/models/20250227_VdHSpecific, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Al', 'Si', 'P', 'S', 'Cl', 'K',
                                             'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co',
                                             'Ni', 'Cu', 'Zn', 'As', 'Rb', 'Sr',
                                             'Zr'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-27 15:10:35,538:INFO:Adding model into prep_pipe
2025-02-27 15:10:35,538:WARNING:Only Model saved as it was a pipeline.
2025-02-27 15:10:35,672:INFO:/home/dsg/VORTEX_FINAL/PRODUCTION/models/20250227_VdHSpecific.pkl saved in current working directory
2025-02-27 15:10:35,680:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Al', 'Si', 'P', 'S', 'Cl', 'K',
                                             'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co',
                                             'Ni', 'Cu', 'Zn', 'As', 'Rb', 'Sr',
                                             'Zr'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              co...
                                                                         class_weight='balanced',
                                                                         criterion='entropy',
                                                                         max_depth=None,
                                                                         max_features='sqrt',
                                                                         max_leaf_nodes=None,
                                                                         max_samples=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=5,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         n_estimators=50,
                                                                         n_jobs=-1,
                                                                         oob_score=False,
                                                                         random_state=42,
                                                                         verbose=0,
                                                                         warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-02-27 15:10:35,680:INFO:save_model() successfully completed......................................
2025-02-27 15:28:33,163:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:28:33,163:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:28:33,163:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:28:33,163:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 15:28:38,516:INFO:PyCaret ClassificationExperiment
2025-02-27 15:28:38,516:INFO:Logging name: clf-default-name
2025-02-27 15:28:38,516:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-27 15:28:38,517:INFO:version 3.3.2
2025-02-27 15:28:38,517:INFO:Initializing setup()
2025-02-27 15:28:38,517:INFO:self.USI: 36da
2025-02-27 15:28:38,517:INFO:self._variable_keys: {'target_param', 'log_plots_param', 'html_param', 'USI', 'data', 'fold_shuffle_param', 'fold_groups_param', 'pipeline', 'gpu_param', 'seed', 'logging_param', 'y_test', 'exp_id', 'n_jobs_param', 'exp_name_log', '_ml_usecase', 'fold_generator', 'X_test', 'idx', '_available_plots', 'y_train', 'X', 'fix_imbalance', 'X_train', 'gpu_n_jobs_param', 'memory', 'y', 'is_multiclass'}
2025-02-27 15:28:38,517:INFO:Checking environment
2025-02-27 15:28:38,517:INFO:python_version: 3.10.12
2025-02-27 15:28:38,517:INFO:python_build: ('main', 'Jan 15 2024 21:14:33')
2025-02-27 15:28:38,517:INFO:machine: x86_64
2025-02-27 15:28:38,517:INFO:platform: Linux-5.15.0-131-generic-x86_64-with-glibc2.31
2025-02-27 15:28:38,518:INFO:Memory: svmem(total=7813275648, available=1095032832, percent=86.0, used=5988175872, free=363503616, active=2461011968, inactive=4266725376, buffers=76529664, cached=1385066496, shared=443990016, slab=309370880)
2025-02-27 15:28:38,518:INFO:Physical Core: 2
2025-02-27 15:28:38,518:INFO:Logical Core: 4
2025-02-27 15:28:38,518:INFO:Checking libraries
2025-02-27 15:28:38,518:INFO:System:
2025-02-27 15:28:38,518:INFO:    python: 3.10.12 (main, Jan 15 2024, 21:14:33) [GCC 9.4.0]
2025-02-27 15:28:38,518:INFO:executable: /home/dsg/VORTEX_FINAL/venv/bin/python3
2025-02-27 15:28:38,519:INFO:   machine: Linux-5.15.0-131-generic-x86_64-with-glibc2.31
2025-02-27 15:28:38,519:INFO:PyCaret required dependencies:
2025-02-27 15:28:39,043:INFO:                 pip: 25.0.1
2025-02-27 15:28:39,043:INFO:          setuptools: 75.8.0
2025-02-27 15:28:39,043:INFO:             pycaret: 3.3.2
2025-02-27 15:28:39,043:INFO:             IPython: 8.20.0
2025-02-27 15:28:39,043:INFO:          ipywidgets: 8.1.1
2025-02-27 15:28:39,043:INFO:                tqdm: 4.66.1
2025-02-27 15:28:39,043:INFO:               numpy: 1.24.4
2025-02-27 15:28:39,043:INFO:              pandas: 2.0.3
2025-02-27 15:28:39,043:INFO:              jinja2: 3.1.3
2025-02-27 15:28:39,044:INFO:               scipy: 1.10.1
2025-02-27 15:28:39,044:INFO:              joblib: 1.3.2
2025-02-27 15:28:39,044:INFO:             sklearn: 1.4.2
2025-02-27 15:28:39,044:INFO:                pyod: 2.0.1
2025-02-27 15:28:39,044:INFO:            imblearn: 0.12.3
2025-02-27 15:28:39,044:INFO:   category_encoders: 2.6.3
2025-02-27 15:28:39,044:INFO:            lightgbm: 4.2.0
2025-02-27 15:28:39,044:INFO:               numba: 0.58.1
2025-02-27 15:28:39,044:INFO:            requests: 2.32.3
2025-02-27 15:28:39,044:INFO:          matplotlib: 3.6.0
2025-02-27 15:28:39,044:INFO:          scikitplot: 0.3.7
2025-02-27 15:28:39,044:INFO:         yellowbrick: 1.5
2025-02-27 15:28:39,044:INFO:              plotly: 5.18.0
2025-02-27 15:28:39,044:INFO:    plotly-resampler: Not installed
2025-02-27 15:28:39,044:INFO:             kaleido: 0.2.1
2025-02-27 15:28:39,044:INFO:           schemdraw: 0.15
2025-02-27 15:28:39,044:INFO:         statsmodels: 0.14.1
2025-02-27 15:28:39,044:INFO:              sktime: 0.26.0
2025-02-27 15:28:39,044:INFO:               tbats: 1.1.3
2025-02-27 15:28:39,044:INFO:            pmdarima: 2.0.4
2025-02-27 15:28:39,044:INFO:              psutil: 5.9.7
2025-02-27 15:28:39,044:INFO:          markupsafe: 2.1.3
2025-02-27 15:28:39,044:INFO:             pickle5: Not installed
2025-02-27 15:28:39,044:INFO:         cloudpickle: 3.1.1
2025-02-27 15:28:39,044:INFO:         deprecation: 2.1.0
2025-02-27 15:28:39,044:INFO:              xxhash: 3.4.1
2025-02-27 15:28:39,044:INFO:           wurlitzer: 3.0.3
2025-02-27 15:28:39,044:INFO:PyCaret optional dependencies:
2025-02-27 15:28:40,414:INFO:                shap: 0.44.0
2025-02-27 15:28:40,415:INFO:           interpret: 0.5.0
2025-02-27 15:28:40,415:INFO:                umap: 0.5.5
2025-02-27 15:28:40,415:INFO:     ydata_profiling: 4.6.0
2025-02-27 15:28:40,415:INFO:  explainerdashboard: 0.4.5
2025-02-27 15:28:40,415:INFO:             autoviz: 0.1.804
2025-02-27 15:28:40,415:INFO:           fairlearn: 0.7.0
2025-02-27 15:28:40,415:INFO:          deepchecks: Not installed
2025-02-27 15:28:40,415:INFO:             xgboost: 1.6.2
2025-02-27 15:28:40,415:INFO:            catboost: 1.2.2
2025-02-27 15:28:40,415:INFO:              kmodes: 0.12.2
2025-02-27 15:28:40,415:INFO:             mlxtend: 0.23.1
2025-02-27 15:28:40,415:INFO:       statsforecast: 1.5.0
2025-02-27 15:28:40,415:INFO:        tune_sklearn: 0.5.0
2025-02-27 15:28:40,415:INFO:                 ray: 2.9.0
2025-02-27 15:28:40,415:INFO:            hyperopt: 0.2.7
2025-02-27 15:28:40,415:INFO:              optuna: 3.5.0
2025-02-27 15:28:40,415:INFO:               skopt: 0.9.0
2025-02-27 15:28:40,415:INFO:              mlflow: 2.20.2
2025-02-27 15:28:40,415:INFO:              gradio: 3.50.2
2025-02-27 15:28:40,415:INFO:             fastapi: 0.109.0
2025-02-27 15:28:40,415:INFO:             uvicorn: 0.25.0
2025-02-27 15:28:40,415:INFO:              m2cgen: 0.10.0
2025-02-27 15:28:40,415:INFO:           evidently: 0.4.40
2025-02-27 15:28:40,415:INFO:               fugue: 0.8.7
2025-02-27 15:28:40,415:INFO:           streamlit: Not installed
2025-02-27 15:28:40,415:INFO:             prophet: Not installed
2025-02-27 15:28:40,416:INFO:None
2025-02-27 15:28:40,416:INFO:Set up data.
2025-02-27 15:28:40,428:INFO:Set up folding strategy.
2025-02-27 15:28:40,428:INFO:Set up train/test split.
2025-02-27 15:28:40,438:INFO:Set up index.
2025-02-27 15:28:40,438:INFO:Assigning column types.
2025-02-27 15:28:40,446:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-27 15:28:40,506:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 15:28:40,509:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 15:28:40,563:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-27 15:28:40,725:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-27 15:28:40,842:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 15:28:40,845:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 15:28:40,873:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-27 15:28:40,876:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-27 15:28:40,877:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-27 15:28:40,922:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 15:28:40,952:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-27 15:28:40,954:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-27 15:28:41,000:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 15:28:41,028:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-27 15:28:41,033:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-27 15:28:41,033:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-27 15:28:41,106:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-27 15:28:41,109:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-27 15:28:41,183:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-27 15:28:41,186:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-27 15:28:41,190:INFO:Preparing preprocessing pipeline...
2025-02-27 15:28:41,192:INFO:Set up label encoding.
2025-02-27 15:28:41,192:INFO:Set up simple imputation.
2025-02-27 15:28:41,234:INFO:Finished creating preprocessing pipeline.
2025-02-27 15:28:41,239:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Al', 'Si', 'P', 'S', 'Cl', 'K',
                                             'Ca', 'Ti', 'V', 'Cr', 'Fe', 'Co',
                                             'Cu', 'Zn', 'As', 'Se', 'Rb', 'Sr',
                                             'Zr', 'Mo', 'Ba', 'Ta'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-02-27 15:28:41,239:INFO:Creating final display dataframe.
2025-02-27 15:28:41,362:INFO:Setup _display_container:                     Description                   Value
0                    Session id                     123
1                        Target                    Site
2                   Target type              Multiclass
3                Target mapping  CT: 0, PCM: 1, PDLC: 2
4           Original data shape              (2256, 23)
5        Transformed data shape              (2256, 23)
6   Transformed train set shape              (1804, 23)
7    Transformed test set shape               (452, 23)
8              Numeric features                      22
9                    Preprocess                    True
10              Imputation type                  simple
11           Numeric imputation                    mean
12       Categorical imputation                    mode
13               Fold Generator         StratifiedKFold
14                  Fold Number                      10
15                     CPU Jobs                      -1
16                      Use GPU                   False
17               Log Experiment                   False
18              Experiment Name        clf-default-name
19                          USI                    36da
2025-02-27 15:28:41,498:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-27 15:28:41,501:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-27 15:28:41,628:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-27 15:28:41,633:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-27 15:28:41,636:INFO:setup() successfully completed in 3.12s...............
2025-02-27 15:28:41,787:INFO:Initializing create_model()
2025-02-27 15:28:41,787:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f15653096f0>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 200, 'min_samples_leaf': 5, 'class_weight': 'balanced', 'criterion': 'entropy', 'random_state': 42})
2025-02-27 15:28:41,787:INFO:Checking exceptions
2025-02-27 15:28:41,815:INFO:Importing libraries
2025-02-27 15:28:41,816:INFO:Copying training dataset
2025-02-27 15:28:41,831:INFO:Defining folds
2025-02-27 15:28:41,831:INFO:Declaring metric variables
2025-02-27 15:28:41,836:INFO:Importing untrained model
2025-02-27 15:28:41,846:INFO:Random Forest Classifier Imported successfully
2025-02-27 15:28:41,865:INFO:Starting cross validation
2025-02-27 15:28:41,867:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 15:28:49,400:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:49,409:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:49,416:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:49,508:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:49,518:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:49,543:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:49,652:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:49,661:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:49,669:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:49,913:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:49,928:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:49,934:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:51,544:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:51,562:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:51,599:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:51,613:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:51,620:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:51,626:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:51,781:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:51,790:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:51,797:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:52,108:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:52,114:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:52,121:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:52,981:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:52,983:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:52,986:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:52,989:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:52,990:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:52,994:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:53,009:INFO:Calculating mean and std
2025-02-27 15:28:53,012:INFO:Creating metrics dataframe
2025-02-27 15:28:53,022:INFO:Finalizing model
2025-02-27 15:28:53,996:INFO:Uploading results into container
2025-02-27 15:28:53,998:INFO:Uploading model into container now
2025-02-27 15:28:54,018:INFO:_master_model_container: 1
2025-02-27 15:28:54,019:INFO:_display_container: 2
2025-02-27 15:28:54,021:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-02-27 15:28:54,021:INFO:create_model() successfully completed......................................
2025-02-27 15:28:54,326:INFO:Initializing tune_model()
2025-02-27 15:28:54,326:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid={'criterion': ['entropy'], 'min_samples_leaf': [5, 10, 15, 20, 25, 30], 'n_estimators': [10, 50, 100, 200]}, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f15653096f0>)
2025-02-27 15:28:54,327:INFO:Checking exceptions
2025-02-27 15:28:54,367:INFO:Copying training dataset
2025-02-27 15:28:54,384:INFO:Checking base model
2025-02-27 15:28:54,384:INFO:Base model : Random Forest Classifier
2025-02-27 15:28:54,396:INFO:Declaring metric variables
2025-02-27 15:28:54,405:INFO:Defining Hyperparameters
2025-02-27 15:28:54,570:INFO:custom_grid: {'actual_estimator__criterion': ['entropy'], 'actual_estimator__min_samples_leaf': [5, 10, 15, 20, 25, 30], 'actual_estimator__n_estimators': [10, 50, 100, 200]}
2025-02-27 15:28:54,571:INFO:Tuning with n_jobs=-1
2025-02-27 15:28:54,571:INFO:Initializing RandomizedSearchCV
2025-02-27 15:28:54,767:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:54,772:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:54,772:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:54,800:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:54,970:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:54,979:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:55,013:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:55,061:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:55,179:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:55,454:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:55,503:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:55,503:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:55,603:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:55,978:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:56,005:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:56,029:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:56,156:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:56,593:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:56,628:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:57,128:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:57,201:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:57,376:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:57,797:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:58,135:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:58,166:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:58,498:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:58,995:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:59,010:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:59,262:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:59,606:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:59,908:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:28:59,963:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:00,240:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:00,721:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:00,917:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:00,951:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:01,095:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:01,671:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:01,899:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:01,966:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:02,134:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:02,658:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:02,834:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:02,842:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:03,123:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:03,645:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:03,722:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:03,912:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:04,145:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:04,159:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:04,427:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:04,470:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:04,610:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:04,692:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:04,914:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:05,058:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:05,114:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:05,266:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:05,358:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:05,538:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:06,608:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:07,018:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:07,026:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:07,352:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:08,631:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:08,687:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:08,784:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:09,002:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:09,243:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:09,561:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:09,814:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:10,059:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:10,253:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:10,278:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:10,281:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:10,532:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:10,817:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:10,862:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:10,868:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:11,014:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:12,455:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:12,481:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:12,487:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:12,694:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:13,959:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:14,013:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:14,057:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:14,368:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:15,054:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:15,195:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:15,424:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:15,436:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:15,787:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:16,050:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:16,128:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:16,326:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:16,533:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:16,835:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:16,867:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:16,994:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:17,001:INFO:best_params: {'actual_estimator__n_estimators': 100, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__criterion': 'entropy'}
2025-02-27 15:29:17,002:INFO:Hyperparameter search completed
2025-02-27 15:29:17,002:INFO:SubProcess create_model() called ==================================
2025-02-27 15:29:17,003:INFO:Initializing create_model()
2025-02-27 15:29:17,003:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f15653096f0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1552a86c20>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 100, 'min_samples_leaf': 5, 'criterion': 'entropy'})
2025-02-27 15:29:17,003:INFO:Checking exceptions
2025-02-27 15:29:17,003:INFO:Importing libraries
2025-02-27 15:29:17,003:INFO:Copying training dataset
2025-02-27 15:29:17,017:INFO:Defining folds
2025-02-27 15:29:17,017:INFO:Declaring metric variables
2025-02-27 15:29:17,025:INFO:Importing untrained model
2025-02-27 15:29:17,025:INFO:Declaring custom model
2025-02-27 15:29:17,031:INFO:Random Forest Classifier Imported successfully
2025-02-27 15:29:17,045:INFO:Starting cross validation
2025-02-27 15:29:17,047:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 15:29:18,115:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:18,122:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:18,129:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:18,138:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:18,145:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:18,146:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:18,152:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:18,153:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:18,161:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:18,205:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:18,211:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:18,218:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:19,051:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:19,058:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:19,064:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:19,095:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:19,099:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:19,105:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:19,151:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:19,158:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:19,162:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:19,275:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:19,281:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:19,287:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:19,754:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:19,762:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:19,770:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:19,808:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:19,821:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:19,832:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:19,851:INFO:Calculating mean and std
2025-02-27 15:29:19,855:INFO:Creating metrics dataframe
2025-02-27 15:29:19,876:INFO:Finalizing model
2025-02-27 15:29:20,371:INFO:Uploading results into container
2025-02-27 15:29:20,373:INFO:Uploading model into container now
2025-02-27 15:29:20,373:INFO:_master_model_container: 2
2025-02-27 15:29:20,374:INFO:_display_container: 3
2025-02-27 15:29:20,374:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-02-27 15:29:20,375:INFO:create_model() successfully completed......................................
2025-02-27 15:29:20,549:INFO:SubProcess create_model() end ==================================
2025-02-27 15:29:20,549:INFO:choose_better activated
2025-02-27 15:29:20,557:INFO:SubProcess create_model() called ==================================
2025-02-27 15:29:20,559:INFO:Initializing create_model()
2025-02-27 15:29:20,559:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f15653096f0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 15:29:20,560:INFO:Checking exceptions
2025-02-27 15:29:20,564:INFO:Importing libraries
2025-02-27 15:29:20,564:INFO:Copying training dataset
2025-02-27 15:29:20,578:INFO:Defining folds
2025-02-27 15:29:20,578:INFO:Declaring metric variables
2025-02-27 15:29:20,578:INFO:Importing untrained model
2025-02-27 15:29:20,579:INFO:Declaring custom model
2025-02-27 15:29:20,580:INFO:Random Forest Classifier Imported successfully
2025-02-27 15:29:20,580:INFO:Starting cross validation
2025-02-27 15:29:20,581:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 15:29:22,582:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:22,590:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:22,598:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:22,650:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:22,659:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:22,668:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:22,674:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:22,676:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:22,682:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:22,710:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:22,717:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:22,724:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:24,669:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:24,677:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:24,683:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:24,737:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:24,745:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:24,752:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:24,815:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:24,822:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:24,830:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:24,833:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:24,838:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:24,842:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:25,985:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:25,993:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:25,998:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:26,069:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:26,073:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:26,077:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:26,090:INFO:Calculating mean and std
2025-02-27 15:29:26,090:INFO:Creating metrics dataframe
2025-02-27 15:29:26,092:INFO:Finalizing model
2025-02-27 15:29:26,883:INFO:Uploading results into container
2025-02-27 15:29:26,884:INFO:Uploading model into container now
2025-02-27 15:29:26,885:INFO:_master_model_container: 3
2025-02-27 15:29:26,885:INFO:_display_container: 4
2025-02-27 15:29:26,886:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-02-27 15:29:26,886:INFO:create_model() successfully completed......................................
2025-02-27 15:29:27,030:INFO:SubProcess create_model() end ==================================
2025-02-27 15:29:27,031:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) result for F1 is 0.9695
2025-02-27 15:29:27,032:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) result for F1 is 0.9712
2025-02-27 15:29:27,033:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) is best model
2025-02-27 15:29:27,033:INFO:choose_better completed
2025-02-27 15:29:27,050:INFO:_master_model_container: 3
2025-02-27 15:29:27,050:INFO:_display_container: 3
2025-02-27 15:29:27,051:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-02-27 15:29:27,051:INFO:tune_model() successfully completed......................................
2025-02-27 15:29:27,324:INFO:Initializing calibrate_model()
2025-02-27 15:29:27,324:INFO:calibrate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f15653096f0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), method=sigmoid, calibrate_fold=5, fold=None, round=4, fit_kwargs=None, groups=None, verbose=True, return_train_score=False)
2025-02-27 15:29:27,324:INFO:Checking exceptions
2025-02-27 15:29:27,329:INFO:Preloading libraries
2025-02-27 15:29:27,329:INFO:Preparing display monitor
2025-02-27 15:29:27,358:INFO:Getting model name
2025-02-27 15:29:27,359:INFO:Base model : Random Forest Classifier
2025-02-27 15:29:27,376:INFO:Importing untrained CalibratedClassifierCV
2025-02-27 15:29:27,377:INFO:SubProcess create_model() called ==================================
2025-02-27 15:29:27,380:INFO:Initializing create_model()
2025-02-27 15:29:27,380:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f15653096f0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight='balanced',
                                                        criterion='entropy',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=5,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=42,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f1553c94340>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 15:29:27,380:INFO:Checking exceptions
2025-02-27 15:29:27,380:INFO:Importing libraries
2025-02-27 15:29:27,380:INFO:Copying training dataset
2025-02-27 15:29:27,398:INFO:Defining folds
2025-02-27 15:29:27,398:INFO:Declaring metric variables
2025-02-27 15:29:27,405:INFO:Importing untrained model
2025-02-27 15:29:27,405:INFO:Declaring custom model
2025-02-27 15:29:27,415:INFO:Random Forest Classifier Imported successfully
2025-02-27 15:29:27,428:INFO:Starting cross validation
2025-02-27 15:29:27,431:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 15:29:32,311:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:32,325:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:32,336:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:32,382:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:32,395:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:32,408:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:32,603:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:32,617:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:32,625:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:32,633:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:32,640:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:32,653:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:36,912:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:36,932:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:36,948:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:37,190:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:37,198:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:37,206:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:37,283:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:37,324:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:37,339:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:37,455:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:37,467:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:37,474:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:40,046:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:40,054:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:40,062:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:40,392:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:40,396:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:40,399:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:40,406:INFO:Calculating mean and std
2025-02-27 15:29:40,409:INFO:Creating metrics dataframe
2025-02-27 15:29:40,426:INFO:Finalizing model
2025-02-27 15:29:42,770:INFO:Uploading results into container
2025-02-27 15:29:42,772:INFO:Uploading model into container now
2025-02-27 15:29:42,773:INFO:_master_model_container: 4
2025-02-27 15:29:42,773:INFO:_display_container: 4
2025-02-27 15:29:42,777:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight='balanced',
                                                        criterion='entropy',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=5,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=42,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-02-27 15:29:42,777:INFO:create_model() successfully completed......................................
2025-02-27 15:29:42,925:INFO:SubProcess create_model() end ==================================
2025-02-27 15:29:42,960:INFO:_master_model_container: 4
2025-02-27 15:29:42,960:INFO:_display_container: 4
2025-02-27 15:29:42,963:INFO:CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight='balanced',
                                                        criterion='entropy',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=5,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=42,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-02-27 15:29:42,964:INFO:calibrate_model() successfully completed......................................
2025-02-27 15:29:43,260:INFO:Initializing get_config()
2025-02-27 15:29:43,261:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f15653096f0>, variable=X_train)
2025-02-27 15:29:43,261:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2025-02-27 15:29:43,262:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2025-02-27 15:29:43,291:INFO:Variable:  returned as              Al         Si          P         S        Cl         K  \
1543   5.536874   6.536081  31.191404  0.481360  2.590742  0.006545   
411   28.780554  21.677641  25.095781  6.763490  0.980518  3.794080   
708   32.652016   4.326609  56.214722  0.779345  2.889892  0.004431   
518   43.577999  18.376516  30.885927  0.310261  2.048436  0.915429   
1835  25.037098  52.037838   7.637737  1.915647  0.872140  3.732291   
...         ...        ...        ...       ...       ...       ...   
1726  28.344305  15.646409  45.218723  0.541882  2.311832  1.428539   
1246  13.847412  15.601873  20.681034  1.002141  2.493073  0.005695   
973   36.886242   5.572439  39.343956  0.165157  0.886461  0.005067   
602   41.001385  10.141374  44.503593  0.253635  0.847883  0.004803   
1023  32.508793  26.658352  18.609850  0.459082  1.242666  0.005665   

             Ca        Ti         V        Cr  ...        Cu        Zn  \
1543   3.510932  0.802176  0.006545  0.181252  ...  0.000654  0.000654   
411    1.349289  0.450157  0.214282  0.150436  ...  0.000547  0.000547   
708    0.732991  0.165972  0.154127  0.441078  ...  0.000443  0.000443   
518    0.071578  0.177513  0.466014  0.534728  ...  0.000520  0.005882   
1835   0.732890  0.771008  0.428789  0.123113  ...  0.004084  0.000619   
...         ...       ...       ...       ...  ...       ...       ...   
1726   0.455127  0.544598  0.640602  0.474458  ...  0.000492  0.000492   
1246  40.783859  0.813728  0.284605  0.005695  ...  0.138004  0.009581   
973   10.391370  0.581351  0.262089  0.219746  ...  0.144243  0.009765   
602    0.298408  0.081477  0.235051  0.256336  ...  0.000480  0.000480   
1023  16.419119  0.463706  0.115434  0.255389  ...  0.076848  0.004766   

            As        Se        Rb        Sr        Zr        Mo        Ba  \
1543  0.287568  0.000654  0.000654  0.025172  0.007677  0.000654  0.000654   
411   2.679388  0.006576  0.000547  0.036059  0.004554  0.008431  0.000547   
708   0.008280  0.000443  0.000443  0.006220  0.000443  0.010483  0.000443   
518   0.155239  0.000520  0.000520  0.000520  0.030479  0.014028  0.000520   
1835  0.069960  0.002039  0.006088  0.508114  0.026951  0.007920  0.183914   
...        ...       ...       ...       ...       ...       ...       ...   
1726  0.177493  0.000492  0.000492  0.003924  0.014529  0.013049  0.000492   
1246  0.202405  0.000569  0.005330  1.364171  0.009114  0.011573  0.110507   
973   0.072634  0.013474  0.000507  0.237501  0.009498  0.026721  0.081466   
602   0.474137  0.000480  0.000480  0.000480  0.002843  0.006558  0.000480   
1023  0.029112  0.000567  0.000567  0.085799  0.004533  0.011041  0.068396   

            Ta  
1543  0.000654  
411   0.002598  
708   0.004457  
518   0.003245  
1835  0.003463  
...        ...  
1726  0.004160  
1246  0.000569  
973   0.000507  
602   0.000480  
1023  0.000567  

[1804 rows x 22 columns]
2025-02-27 15:29:43,292:INFO:get_config() successfully completed......................................
2025-02-27 15:29:43,292:INFO:Initializing get_config()
2025-02-27 15:29:43,292:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f15653096f0>, variable=y_train)
2025-02-27 15:29:43,292:INFO:Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
2025-02-27 15:29:43,292:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2025-02-27 15:29:43,299:INFO:Variable:  returned as 1543      CT
411      PCM
708     PDLC
518      PCM
1835     PCM
        ... 
1726     PCM
1246      CT
973       CT
602      PCM
1023      CT
Name: Site, Length: 1804, dtype: category
Categories (3, object): ['CT', 'PCM', 'PDLC']
2025-02-27 15:29:43,299:INFO:get_config() successfully completed......................................
2025-02-27 15:29:43,299:INFO:Initializing get_config()
2025-02-27 15:29:43,299:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f15653096f0>, variable=X_test)
2025-02-27 15:29:43,299:INFO:Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
2025-02-27 15:29:43,299:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2025-02-27 15:29:43,320:INFO:Variable:  returned as              Al         Si          P         S        Cl         K        Ca  \
1932  31.489985  19.051245  40.794613  0.766255  2.666579  1.302118  0.542457   
1719  34.091499  34.339340  21.894045  0.419218  1.583025  1.959542  0.204892   
2190  30.073864  29.689850  36.090012  0.309276  0.692729  0.005187  0.099930   
780   22.922483  17.011427  32.707428  1.433993  2.616443  1.185579  0.650882   
296   25.344984  27.094576  25.042681  3.033184  3.314421  1.642482  1.428356   
...         ...        ...        ...       ...       ...       ...       ...   
1147  14.883572  39.246002  18.919159  2.460233  4.937653  2.478150  8.154443   
2247  35.193268  33.426018  26.171991  0.530083  0.936570  0.005443  0.340175   
531   43.494476  12.774886  37.589520  0.201611  1.772793  0.005003  0.062039   
527   35.560070  18.823357  38.301407  0.629638  2.127486  0.768792  0.122722   
1907  43.413773  12.657064  37.682396  0.200971  1.807301  0.072876  0.066625   

            Ti         V        Cr  ...        Cu        Zn        As  \
1932  0.238033  0.454102  0.367348  ...  0.000495  0.002871  0.216154   
1719  0.301659  0.245258  0.271587  ...  0.000561  0.001656  0.193888   
2190  0.216603  0.065103  0.370922  ...  0.001131  0.000519  0.008858   
780   0.198321  0.366244  0.320320  ...  0.027397  0.000567  0.638222   
296   0.619890  0.005627  0.534302  ...  0.000563  0.000563  0.085022   
...        ...       ...       ...  ...       ...       ...       ...   
1147  1.186860  0.329139  0.005808  ...  0.000581  0.000581  0.092401   
2247  0.382238  0.005443  0.180699  ...  0.004176  0.000544  0.008195   
531   0.097617  0.104197  0.005003  ...  0.000500  0.002831  0.134149   
527   0.147883  0.358684  0.005024  ...  0.000502  0.006762  0.141957   
1907  0.099883  0.121680  0.024810  ...  0.000500  0.002632  0.134046   

            Se        Rb        Sr        Zr        Mo        Ba        Ta  
1932  0.000495  0.000495  0.003577  0.010381  0.009799  0.000495  0.000836  
1719  0.000561  0.000561  0.001966  0.004226  0.016171  0.000561  0.004592  
2190  0.001109  0.000519  0.002889  0.005512  0.000519  0.000519  0.003113  
780   0.024774  0.000567  0.015986  0.013738  0.019031  0.046951  0.000567  
296   0.000563  0.000563  0.017597  0.039726  0.003812  0.000563  0.008801  
...        ...       ...       ...       ...       ...       ...       ...  
1147  0.000581  0.000581  0.197193  0.006112  0.007990  0.357904  0.000581  
2247  0.000544  0.000544  0.013098  0.008884  0.001207  0.020942  0.000848  
531   0.000500  0.000500  0.000500  0.004113  0.003076  0.000500  0.000500  
527   0.001718  0.000502  0.012614  0.002313  0.012881  0.000502  0.000502  
1907  0.000500  0.000500  0.000500  0.004082  0.004468  0.000500  0.000971  

[452 rows x 22 columns]
2025-02-27 15:29:43,320:INFO:get_config() successfully completed......................................
2025-02-27 15:29:43,320:INFO:Initializing get_config()
2025-02-27 15:29:43,320:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f15653096f0>, variable=y_test)
2025-02-27 15:29:43,320:INFO:Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
2025-02-27 15:29:43,320:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2025-02-27 15:29:43,327:INFO:Variable:  returned as 1932     PCM
1719     PCM
2190    PDLC
780      PCM
296     PDLC
        ... 
1147      CT
2247    PDLC
531      PCM
527      PCM
1907     PCM
Name: Site, Length: 452, dtype: category
Categories (3, object): ['CT', 'PCM', 'PDLC']
2025-02-27 15:29:43,327:INFO:get_config() successfully completed......................................
2025-02-27 15:29:43,399:INFO:Initializing finalize_model()
2025-02-27 15:29:43,399:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f15653096f0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight='balanced',
                                                        criterion='entropy',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=5,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=42,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-02-27 15:29:43,400:INFO:Finalizing CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight='balanced',
                                                        criterion='entropy',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=5,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=42,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None)
2025-02-27 15:29:43,411:INFO:Initializing create_model()
2025-02-27 15:29:43,412:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f15653096f0>, estimator=CalibratedClassifierCV(cv=5, ensemble=True,
                       estimator=RandomForestClassifier(bootstrap=True,
                                                        ccp_alpha=0.0,
                                                        class_weight='balanced',
                                                        criterion='entropy',
                                                        max_depth=None,
                                                        max_features='sqrt',
                                                        max_leaf_nodes=None,
                                                        max_samples=None,
                                                        min_impurity_decrease=0.0,
                                                        min_samples_leaf=5,
                                                        min_samples_split=2,
                                                        min_weight_fraction_leaf=0.0,
                                                        monotonic_cst=None,
                                                        n_estimators=100,
                                                        n_jobs=-1,
                                                        oob_score=False,
                                                        random_state=42,
                                                        verbose=0,
                                                        warm_start=False),
                       method='sigmoid', n_jobs=None), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 15:29:43,412:INFO:Checking exceptions
2025-02-27 15:29:43,413:INFO:Importing libraries
2025-02-27 15:29:43,414:INFO:Copying training dataset
2025-02-27 15:29:43,414:INFO:Defining folds
2025-02-27 15:29:43,414:INFO:Declaring metric variables
2025-02-27 15:29:43,415:INFO:Importing untrained model
2025-02-27 15:29:43,415:INFO:Declaring custom model
2025-02-27 15:29:43,417:INFO:Random Forest Classifier Imported successfully
2025-02-27 15:29:43,418:INFO:Cross validation set to False
2025-02-27 15:29:43,419:INFO:Fitting Model
2025-02-27 15:29:45,824:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Al', 'Si', 'P', 'S', 'Cl', 'K',
                                             'Ca', 'Ti', 'V', 'Cr', 'Fe', 'Co',
                                             'Cu', 'Zn', 'As', 'Se', 'Rb', 'Sr',
                                             'Zr', 'Mo', 'Ba', 'Ta'],
                                    transformer=SimpleImputer(add_ind...
                                                                         class_weight='balanced',
                                                                         criterion='entropy',
                                                                         max_depth=None,
                                                                         max_features='sqrt',
                                                                         max_leaf_nodes=None,
                                                                         max_samples=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=5,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         n_estimators=100,
                                                                         n_jobs=-1,
                                                                         oob_score=False,
                                                                         random_state=42,
                                                                         verbose=0,
                                                                         warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-02-27 15:29:45,824:INFO:create_model() successfully completed......................................
2025-02-27 15:29:45,969:INFO:_master_model_container: 4
2025-02-27 15:29:45,969:INFO:_display_container: 4
2025-02-27 15:29:45,985:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Al', 'Si', 'P', 'S', 'Cl', 'K',
                                             'Ca', 'Ti', 'V', 'Cr', 'Fe', 'Co',
                                             'Cu', 'Zn', 'As', 'Se', 'Rb', 'Sr',
                                             'Zr', 'Mo', 'Ba', 'Ta'],
                                    transformer=SimpleImputer(add_ind...
                                                                         class_weight='balanced',
                                                                         criterion='entropy',
                                                                         max_depth=None,
                                                                         max_features='sqrt',
                                                                         max_leaf_nodes=None,
                                                                         max_samples=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=5,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         n_estimators=100,
                                                                         n_jobs=-1,
                                                                         oob_score=False,
                                                                         random_state=42,
                                                                         verbose=0,
                                                                         warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-02-27 15:29:45,985:INFO:finalize_model() successfully completed......................................
2025-02-27 15:29:46,228:INFO:Initializing predict_model()
2025-02-27 15:29:46,228:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f15653096f0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Al', 'Si', 'P', 'S', 'Cl', 'K',
                                             'Ca', 'Ti', 'V', 'Cr', 'Fe', 'Co',
                                             'Cu', 'Zn', 'As', 'Se', 'Rb', 'Sr',
                                             'Zr', 'Mo', 'Ba', 'Ta'],
                                    transformer=SimpleImputer(add_ind...
                                                                         class_weight='balanced',
                                                                         criterion='entropy',
                                                                         max_depth=None,
                                                                         max_features='sqrt',
                                                                         max_leaf_nodes=None,
                                                                         max_samples=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=5,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         n_estimators=100,
                                                                         n_jobs=-1,
                                                                         oob_score=False,
                                                                         random_state=42,
                                                                         verbose=0,
                                                                         warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7f1552b9c160>)
2025-02-27 15:29:46,228:INFO:Checking exceptions
2025-02-27 15:29:46,228:INFO:Preloading libraries
2025-02-27 15:29:46,231:INFO:Set up data.
2025-02-27 15:29:46,244:INFO:Set up index.
2025-02-27 15:29:46,839:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:46,845:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:46,850:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 15:29:47,567:INFO:Initializing save_model()
2025-02-27 15:29:47,567:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Al', 'Si', 'P', 'S', 'Cl', 'K',
                                             'Ca', 'Ti', 'V', 'Cr', 'Fe', 'Co',
                                             'Cu', 'Zn', 'As', 'Se', 'Rb', 'Sr',
                                             'Zr', 'Mo', 'Ba', 'Ta'],
                                    transformer=SimpleImputer(add_ind...
                                                                         class_weight='balanced',
                                                                         criterion='entropy',
                                                                         max_depth=None,
                                                                         max_features='sqrt',
                                                                         max_leaf_nodes=None,
                                                                         max_samples=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=5,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         n_estimators=100,
                                                                         n_jobs=-1,
                                                                         oob_score=False,
                                                                         random_state=42,
                                                                         verbose=0,
                                                                         warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False), model_name=/home/dsg/VORTEX_FINAL/PRODUCTION/models/20250227_FrenchSpecific, prep_pipe_=Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Al', 'Si', 'P', 'S', 'Cl', 'K',
                                             'Ca', 'Ti', 'V', 'Cr', 'Fe', 'Co',
                                             'Cu', 'Zn', 'As', 'Se', 'Rb', 'Sr',
                                             'Zr', 'Mo', 'Ba', 'Ta'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-27 15:29:47,568:INFO:Adding model into prep_pipe
2025-02-27 15:29:47,568:WARNING:Only Model saved as it was a pipeline.
2025-02-27 15:29:47,813:INFO:/home/dsg/VORTEX_FINAL/PRODUCTION/models/20250227_FrenchSpecific.pkl saved in current working directory
2025-02-27 15:29:47,821:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Al', 'Si', 'P', 'S', 'Cl', 'K',
                                             'Ca', 'Ti', 'V', 'Cr', 'Fe', 'Co',
                                             'Cu', 'Zn', 'As', 'Se', 'Rb', 'Sr',
                                             'Zr', 'Mo', 'Ba', 'Ta'],
                                    transformer=SimpleImputer(add_ind...
                                                                         class_weight='balanced',
                                                                         criterion='entropy',
                                                                         max_depth=None,
                                                                         max_features='sqrt',
                                                                         max_leaf_nodes=None,
                                                                         max_samples=None,
                                                                         min_impurity_decrease=0.0,
                                                                         min_samples_leaf=5,
                                                                         min_samples_split=2,
                                                                         min_weight_fraction_leaf=0.0,
                                                                         monotonic_cst=None,
                                                                         n_estimators=100,
                                                                         n_jobs=-1,
                                                                         oob_score=False,
                                                                         random_state=42,
                                                                         verbose=0,
                                                                         warm_start=False),
                                        method='sigmoid', n_jobs=None))],
         verbose=False)
2025-02-27 15:29:47,821:INFO:save_model() successfully completed......................................
2025-02-28 13:14:57,315:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-28 13:14:57,317:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-28 13:14:57,317:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-28 13:14:57,317:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-28 13:28:51,082:INFO:PyCaret ClassificationExperiment
2025-02-28 13:28:51,082:INFO:Logging name: clf-default-name
2025-02-28 13:28:51,082:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-28 13:28:51,082:INFO:version 3.3.2
2025-02-28 13:28:51,082:INFO:Initializing setup()
2025-02-28 13:28:51,082:INFO:self.USI: 50b1
2025-02-28 13:28:51,082:INFO:self._variable_keys: {'pipeline', 'exp_id', 'fold_shuffle_param', 'n_jobs_param', 'log_plots_param', 'logging_param', 'y', 'target_param', 'seed', 'gpu_n_jobs_param', 'fold_groups_param', 'y_train', 'idx', 'exp_name_log', 'memory', 'data', 'X', 'X_test', 'gpu_param', 'USI', 'is_multiclass', 'X_train', '_ml_usecase', '_available_plots', 'html_param', 'y_test', 'fix_imbalance', 'fold_generator'}
2025-02-28 13:28:51,083:INFO:Checking environment
2025-02-28 13:28:51,083:INFO:python_version: 3.10.12
2025-02-28 13:28:51,083:INFO:python_build: ('main', 'Jan 15 2024 21:14:33')
2025-02-28 13:28:51,083:INFO:machine: x86_64
2025-02-28 13:28:51,083:INFO:platform: Linux-5.15.0-131-generic-x86_64-with-glibc2.31
2025-02-28 13:28:51,083:INFO:Memory: svmem(total=7813275648, available=1204240384, percent=84.6, used=5667823616, free=281268224, active=3202535424, inactive=3571531776, buffers=157413376, cached=1706770432, shared=645783552, slab=352534528)
2025-02-28 13:28:51,084:INFO:Physical Core: 2
2025-02-28 13:28:51,084:INFO:Logical Core: 4
2025-02-28 13:28:51,084:INFO:Checking libraries
2025-02-28 13:28:51,085:INFO:System:
2025-02-28 13:28:51,085:INFO:    python: 3.10.12 (main, Jan 15 2024, 21:14:33) [GCC 9.4.0]
2025-02-28 13:28:51,085:INFO:executable: /home/dsg/VORTEX_FINAL/venv/bin/python3
2025-02-28 13:28:51,085:INFO:   machine: Linux-5.15.0-131-generic-x86_64-with-glibc2.31
2025-02-28 13:28:51,085:INFO:PyCaret required dependencies:
2025-02-28 13:28:52,103:INFO:                 pip: 25.0.1
2025-02-28 13:28:52,104:INFO:          setuptools: 75.8.0
2025-02-28 13:28:52,104:INFO:             pycaret: 3.3.2
2025-02-28 13:28:52,104:INFO:             IPython: 8.20.0
2025-02-28 13:28:52,104:INFO:          ipywidgets: 8.1.1
2025-02-28 13:28:52,104:INFO:                tqdm: 4.66.1
2025-02-28 13:28:52,104:INFO:               numpy: 1.24.4
2025-02-28 13:28:52,104:INFO:              pandas: 2.0.3
2025-02-28 13:28:52,104:INFO:              jinja2: 3.1.3
2025-02-28 13:28:52,104:INFO:               scipy: 1.10.1
2025-02-28 13:28:52,104:INFO:              joblib: 1.3.2
2025-02-28 13:28:52,104:INFO:             sklearn: 1.4.2
2025-02-28 13:28:52,105:INFO:                pyod: 2.0.1
2025-02-28 13:28:52,105:INFO:            imblearn: 0.12.3
2025-02-28 13:28:52,105:INFO:   category_encoders: 2.6.3
2025-02-28 13:28:52,105:INFO:            lightgbm: 4.2.0
2025-02-28 13:28:52,105:INFO:               numba: 0.58.1
2025-02-28 13:28:52,105:INFO:            requests: 2.32.3
2025-02-28 13:28:52,105:INFO:          matplotlib: 3.6.0
2025-02-28 13:28:52,105:INFO:          scikitplot: 0.3.7
2025-02-28 13:28:52,105:INFO:         yellowbrick: 1.5
2025-02-28 13:28:52,105:INFO:              plotly: 5.18.0
2025-02-28 13:28:52,105:INFO:    plotly-resampler: Not installed
2025-02-28 13:28:52,105:INFO:             kaleido: 0.2.1
2025-02-28 13:28:52,106:INFO:           schemdraw: 0.15
2025-02-28 13:28:52,106:INFO:         statsmodels: 0.14.1
2025-02-28 13:28:52,106:INFO:              sktime: 0.26.0
2025-02-28 13:28:52,106:INFO:               tbats: 1.1.3
2025-02-28 13:28:52,106:INFO:            pmdarima: 2.0.4
2025-02-28 13:28:52,106:INFO:              psutil: 5.9.7
2025-02-28 13:28:52,106:INFO:          markupsafe: 2.1.3
2025-02-28 13:28:52,106:INFO:             pickle5: Not installed
2025-02-28 13:28:52,106:INFO:         cloudpickle: 3.1.1
2025-02-28 13:28:52,106:INFO:         deprecation: 2.1.0
2025-02-28 13:28:52,106:INFO:              xxhash: 3.4.1
2025-02-28 13:28:52,106:INFO:           wurlitzer: 3.0.3
2025-02-28 13:28:52,107:INFO:PyCaret optional dependencies:
2025-02-28 13:28:53,710:INFO:                shap: 0.44.0
2025-02-28 13:28:53,710:INFO:           interpret: 0.5.0
2025-02-28 13:28:53,710:INFO:                umap: 0.5.5
2025-02-28 13:28:53,710:INFO:     ydata_profiling: 4.6.0
2025-02-28 13:28:53,710:INFO:  explainerdashboard: 0.4.5
2025-02-28 13:28:53,710:INFO:             autoviz: 0.1.804
2025-02-28 13:28:53,710:INFO:           fairlearn: 0.7.0
2025-02-28 13:28:53,710:INFO:          deepchecks: Not installed
2025-02-28 13:28:53,711:INFO:             xgboost: 1.6.2
2025-02-28 13:28:53,711:INFO:            catboost: 1.2.2
2025-02-28 13:28:53,711:INFO:              kmodes: 0.12.2
2025-02-28 13:28:53,711:INFO:             mlxtend: 0.23.1
2025-02-28 13:28:53,711:INFO:       statsforecast: 1.5.0
2025-02-28 13:28:53,711:INFO:        tune_sklearn: 0.5.0
2025-02-28 13:28:53,711:INFO:                 ray: 2.9.0
2025-02-28 13:28:53,711:INFO:            hyperopt: 0.2.7
2025-02-28 13:28:53,711:INFO:              optuna: 3.5.0
2025-02-28 13:28:53,711:INFO:               skopt: 0.9.0
2025-02-28 13:28:53,711:INFO:              mlflow: 2.20.2
2025-02-28 13:28:53,711:INFO:              gradio: 3.50.2
2025-02-28 13:28:53,712:INFO:             fastapi: 0.109.0
2025-02-28 13:28:53,712:INFO:             uvicorn: 0.25.0
2025-02-28 13:28:53,712:INFO:              m2cgen: 0.10.0
2025-02-28 13:28:53,712:INFO:           evidently: 0.4.40
2025-02-28 13:28:53,712:INFO:               fugue: 0.8.7
2025-02-28 13:28:53,712:INFO:           streamlit: Not installed
2025-02-28 13:28:53,712:INFO:             prophet: Not installed
2025-02-28 13:28:53,712:INFO:None
2025-02-28 13:28:53,712:INFO:Set up data.
2025-02-28 13:28:53,740:INFO:Set up folding strategy.
2025-02-28 13:28:53,740:INFO:Set up train/test split.
2025-02-28 13:28:53,761:INFO:Set up index.
2025-02-28 13:28:53,762:INFO:Assigning column types.
2025-02-28 13:28:53,784:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-28 13:28:53,848:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-28 13:28:53,857:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-28 13:28:53,910:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-28 13:28:54,061:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-28 13:28:54,256:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-28 13:28:54,257:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-28 13:28:54,288:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-28 13:28:54,293:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-28 13:28:54,293:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-28 13:28:54,341:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-28 13:28:54,370:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-28 13:28:54,373:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-28 13:28:54,422:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-28 13:28:54,451:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-28 13:28:54,454:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-28 13:28:54,454:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-28 13:28:54,556:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-28 13:28:54,560:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-28 13:28:54,671:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-28 13:28:54,674:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-28 13:28:54,680:INFO:Preparing preprocessing pipeline...
2025-02-28 13:28:54,684:INFO:Set up label encoding.
2025-02-28 13:28:54,684:INFO:Set up simple imputation.
2025-02-28 13:28:54,756:INFO:Finished creating preprocessing pipeline.
2025-02-28 13:28:54,766:INFO:Pipeline: Pipeline(memory=FastMemory(location=/tmp/joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Al', 'Si', 'P', 'S', 'Cl', 'K',
                                             'Ca', 'Sc', 'Ti', 'V', 'Cr', 'Mn',
                                             'Fe', 'Co', 'Ni', 'Cu', 'Zn', 'Ga',
                                             'Ge', 'As', 'Se', 'Br', 'Rb', 'Sr',
                                             'Y', 'Zr', 'Nb'...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2025-02-28 13:28:54,767:INFO:Creating final display dataframe.
2025-02-28 13:28:55,002:INFO:Setup _display_container:                     Description                   Value
0                    Session id                     123
1                        Target                    Site
2                   Target type              Multiclass
3                Target mapping  CT: 0, PCM: 1, PDLC: 2
4           Original data shape              (2256, 46)
5        Transformed data shape              (2256, 46)
6   Transformed train set shape              (1804, 46)
7    Transformed test set shape               (452, 46)
8              Numeric features                      45
9                    Preprocess                    True
10              Imputation type                  simple
11           Numeric imputation                    mean
12       Categorical imputation                    mode
13               Fold Generator         StratifiedKFold
14                  Fold Number                      10
15                     CPU Jobs                      -1
16                      Use GPU                   False
17               Log Experiment                   False
18              Experiment Name        clf-default-name
19                          USI                    50b1
2025-02-28 13:28:55,135:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-28 13:28:55,138:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-28 13:28:55,259:INFO:Soft dependency imported: xgboost: 1.6.2
2025-02-28 13:28:55,265:INFO:Soft dependency imported: catboost: 1.2.2
2025-02-28 13:28:55,267:INFO:setup() successfully completed in 4.19s...............
2025-02-28 13:29:33,445:INFO:Initializing create_model()
2025-02-28 13:29:33,445:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f39b5e0f040>, estimator=rf, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 200, 'min_samples_leaf': 5, 'class_weight': 'balanced', 'criterion': 'entropy', 'random_state': 42})
2025-02-28 13:29:33,446:INFO:Checking exceptions
2025-02-28 13:29:33,487:INFO:Importing libraries
2025-02-28 13:29:33,487:INFO:Copying training dataset
2025-02-28 13:29:33,517:INFO:Defining folds
2025-02-28 13:29:33,517:INFO:Declaring metric variables
2025-02-28 13:29:33,524:INFO:Importing untrained model
2025-02-28 13:29:33,532:INFO:Random Forest Classifier Imported successfully
2025-02-28 13:29:33,547:INFO:Starting cross validation
2025-02-28 13:29:33,549:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-28 13:29:42,405:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:29:42,414:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:29:42,424:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:29:42,495:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:29:42,506:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:29:42,517:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:29:42,555:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:29:42,605:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:29:42,606:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:29:42,647:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:29:42,662:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:29:42,662:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:29:45,482:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:29:45,503:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:29:45,517:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:29:45,808:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:29:45,824:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:29:45,847:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:29:46,089:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:29:46,113:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:29:46,156:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:29:46,285:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:29:46,291:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:29:46,298:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:29:47,705:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:29:47,714:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:29:47,723:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:29:47,839:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:29:47,844:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:29:47,850:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:29:47,872:INFO:Calculating mean and std
2025-02-28 13:29:47,876:INFO:Creating metrics dataframe
2025-02-28 13:29:47,889:INFO:Finalizing model
2025-02-28 13:29:49,076:INFO:Uploading results into container
2025-02-28 13:29:49,079:INFO:Uploading model into container now
2025-02-28 13:29:49,116:INFO:_master_model_container: 1
2025-02-28 13:29:49,117:INFO:_display_container: 2
2025-02-28 13:29:49,118:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-02-28 13:29:49,119:INFO:create_model() successfully completed......................................
2025-02-28 13:30:23,326:INFO:Initializing get_config()
2025-02-28 13:30:23,326:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f39b5e0f040>, variable=X_train)
2025-02-28 13:30:23,327:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2025-02-28 13:30:23,328:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2025-02-28 13:30:23,367:INFO:Variable:  returned as              Al         Si          P         S        Cl         K        Ca  \
1479  21.269129  52.751781  20.069708  0.190650  0.637982  0.005799  1.662546   
335   23.118284  45.975990  28.078920  0.048384  0.679627  0.005501  0.082349   
1249  24.413755  24.691513  27.524775  0.744418  1.348286  0.005878  0.068056   
728   18.705660  45.095497  21.445589  3.601468  1.403939  2.904245  0.197452   
1835  36.696747  14.842984  35.900219  0.528142  2.882349  0.960174  0.101411   
...         ...        ...        ...       ...       ...       ...       ...   
1726  33.065529  27.891024  33.573391  0.575415  0.820950  0.687391  0.444901   
875   30.257610  22.002092  37.135899  0.708265  1.917146  0.005100  4.409623   
286   23.482368  29.865496  29.595087  2.066185  2.075848  1.357458  5.366835   
1106  24.899801  35.108177  28.354494  0.983204  2.902304  2.338488  0.990917   
396   19.731764  60.436352  10.823002  0.377695  1.039134  0.006079  4.126273   

            Sc        Ti         V  ...        Te        Ba        Ta  \
1479  0.005799  0.180271  0.165291  ...  0.000580  0.032642  0.000580   
335   0.005501  0.031946  0.124607  ...  0.000550  0.000550  0.000550   
1249  0.005878  0.246225  0.005878  ...  0.000588  0.000588  0.000588   
728   0.005693  0.279145  0.142491  ...  0.000569  0.000569  0.000569   
1835  0.005028  0.228821  0.163134  ...  0.000503  0.000503  0.002336   
...        ...       ...       ...  ...       ...       ...       ...   
1726  0.005220  0.173934  0.224445  ...  0.000522  0.000522  0.002120   
875   0.005100  0.554718  0.133763  ...  0.000510  0.035840  0.003692   
286   0.005430  1.171171  0.322127  ...  0.000543  0.280580  0.003931   
1106  0.005404  0.428441  0.352190  ...  0.000540  0.000540  0.000540   
396   0.006079  0.223634  0.111452  ...  0.000608  0.027753  0.002116   

             W        Au        Hg        Tl       Pb        Th       rand  
1479  0.000580  0.000580  0.000580  0.000580  0.00001  0.000580  31.703537  
335   0.000550  0.000550  0.000550  0.000550  0.00001  0.000550  30.081650  
1249  0.000588  0.000588  0.000588  0.000588  0.00001  0.000588  29.484409  
728   0.000569  0.000569  0.000569  0.000569  0.00001  0.000569  31.358761  
1835  0.000503  0.000503  0.000503  0.001192  0.00001  0.000503  31.282984  
...        ...       ...       ...       ...      ...       ...        ...  
1726  0.000522  0.000522  0.000522  0.000692  0.00001  0.000522  30.356281  
875   0.000510  0.000510  0.000510  0.000510  0.00001  0.000510  28.756454  
286   0.000543  0.000543  0.000543  0.000543  0.00001  0.000543  29.673195  
1106  0.000540  0.000540  0.000540  0.001322  0.00001  0.000540  31.538971  
396   0.000608  0.000608  0.000608  0.000608  0.00001  0.000608  32.924404  

[1804 rows x 45 columns]
2025-02-28 13:30:23,367:INFO:get_config() successfully completed......................................
2025-02-28 13:30:23,367:INFO:Initializing get_config()
2025-02-28 13:30:23,367:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f39b5e0f040>, variable=y_train)
2025-02-28 13:30:23,368:INFO:Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
2025-02-28 13:30:23,368:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'y_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_train_transformed' instead.
  warnings.warn(msg)  # print on screen

2025-02-28 13:30:23,378:INFO:Variable:  returned as 1479      CT
335      PCM
1249    PDLC
728      PCM
1835     PCM
        ... 
1726     PCM
875       CT
286       CT
1106     PCM
396       CT
Name: Site, Length: 1804, dtype: category
Categories (3, object): ['CT', 'PCM', 'PDLC']
2025-02-28 13:30:23,378:INFO:get_config() successfully completed......................................
2025-02-28 13:30:23,378:INFO:Initializing get_config()
2025-02-28 13:30:23,379:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f39b5e0f040>, variable=X_test)
2025-02-28 13:30:23,379:INFO:Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
2025-02-28 13:30:23,379:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'X_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2025-02-28 13:30:23,413:INFO:Variable:  returned as              Al         Si          P         S        Cl         K  \
1932  36.935623  23.564274  33.277229  0.137221  0.870535  1.303007   
1719  24.911413  52.198128  14.123789  0.364652  1.950218  2.483461   
2190  25.238174  30.090355  35.488750  0.820520  2.218794  0.463919   
1552  31.457323  19.923794  31.840834  0.555241  4.383063  2.007686   
1043  13.869948  63.165466   7.887604  1.008458  0.839748  0.855503   
...         ...        ...        ...       ...       ...       ...   
667   24.398184  32.048077  13.576881  1.056694  2.447871  0.773076   
2247  40.829330  10.376652  41.601147  0.306992  1.321064  0.004937   
768   25.200401  46.297329  24.748264  0.137565  0.897768  0.733857   
754   32.374401  30.154680  29.857187  0.434722  0.844359  0.867267   
1907  30.748346  32.346127  30.990698  0.162711  0.890088  0.968118   

             Ca        Sc        Ti         V  ...        Te        Ba  \
1932   0.088993  0.005218  0.495285  0.332675  ...  0.000522  0.019104   
1719   0.197482  0.005895  0.376853  0.270340  ...  0.000590  0.005935   
2190   0.678852  0.005230  0.693234  0.055326  ...  0.000523  0.000523   
1552   0.479385  0.005307  0.316225  0.005307  ...  0.000531  0.000531   
1043   0.097414  0.006421  0.466971  0.006421  ...  0.000642  0.000642   
...         ...       ...       ...       ...  ...       ...       ...   
667   19.538734  0.005909  1.317346  0.317374  ...  0.000591  0.133133   
2247   0.151562  0.004937  0.348217  0.004937  ...  0.000494  0.000494   
768    0.042571  0.005576  0.165754  0.212882  ...  0.000558  0.024238   
754    0.165923  0.005402  0.138811  0.245276  ...  0.000540  0.011761   
1907   0.167024  0.005350  0.170334  0.197103  ...  0.000535  0.000535   

            Ta         W        Au        Hg        Tl       Pb        Th  \
1932  0.000576  0.000522  0.000522  0.000522  0.000640  0.00001  0.000522   
1719  0.000590  0.000590  0.000590  0.000590  0.000590  0.00001  0.000590   
2190  0.008403  0.000523  0.000523  0.000523  0.000910  0.00001  0.000523   
1552  0.000531  0.000531  0.000531  0.000531  0.000531  0.00001  0.000531   
1043  0.003158  0.000642  0.000642  0.000642  0.000642  0.00001  0.000642   
...        ...       ...       ...       ...       ...      ...       ...   
667   0.000591  0.000591  0.000591  0.000591  0.000591  0.00001  0.000591   
2247  0.006317  0.000494  0.000494  0.000494  0.000674  0.00001  0.000494   
768   0.000558  0.000558  0.000558  0.000558  0.000558  0.00001  0.000558   
754   0.005433  0.000540  0.000540  0.000540  0.002141  0.00001  0.000540   
1907  0.001361  0.000535  0.000535  0.000535  0.000622  0.00001  0.000535   

           rand  
1932  28.148645  
1719  27.857496  
2190  30.027840  
1552  29.088923  
1043  29.649683  
...         ...  
667   31.610937  
2247  31.339594  
768   29.924158  
754   29.803400  
1907  28.057573  

[452 rows x 45 columns]
2025-02-28 13:30:23,414:INFO:get_config() successfully completed......................................
2025-02-28 13:30:23,414:INFO:Initializing get_config()
2025-02-28 13:30:23,414:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f39b5e0f040>, variable=y_test)
2025-02-28 13:30:23,415:INFO:Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
2025-02-28 13:30:23,415:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/pycaret/internal/pycaret_experiment/pycaret_experiment.py:321: UserWarning: Variable: 'y_test' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'y_test_transformed' instead.
  warnings.warn(msg)  # print on screen

2025-02-28 13:30:23,424:INFO:Variable:  returned as 1932     PCM
1719     PCM
2190    PDLC
1552     PCM
1043    PDLC
        ... 
667       CT
2247    PDLC
768      PCM
754      PCM
1907     PCM
Name: Site, Length: 452, dtype: category
Categories (3, object): ['CT', 'PCM', 'PDLC']
2025-02-28 13:30:23,424:INFO:get_config() successfully completed......................................
2025-02-28 13:30:25,925:INFO:Initializing tune_model()
2025-02-28 13:30:25,926:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=None, round=4, n_iter=10, custom_grid={'criterion': ['entropy'], 'min_samples_leaf': [5, 10, 15, 20, 25, 30], 'n_estimators': [10, 50, 100, 200]}, optimize=F1, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f39b5e0f040>)
2025-02-28 13:30:25,926:INFO:Checking exceptions
2025-02-28 13:30:25,990:INFO:Copying training dataset
2025-02-28 13:30:26,009:INFO:Checking base model
2025-02-28 13:30:26,010:INFO:Base model : Random Forest Classifier
2025-02-28 13:30:26,015:INFO:Declaring metric variables
2025-02-28 13:30:26,021:INFO:Defining Hyperparameters
2025-02-28 13:30:26,291:INFO:custom_grid: {'actual_estimator__criterion': ['entropy'], 'actual_estimator__min_samples_leaf': [5, 10, 15, 20, 25, 30], 'actual_estimator__n_estimators': [10, 50, 100, 200]}
2025-02-28 13:30:26,291:INFO:Tuning with n_jobs=-1
2025-02-28 13:30:26,291:INFO:Initializing RandomizedSearchCV
2025-02-28 13:30:26,595:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:26,595:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:26,596:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:26,643:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:26,825:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:26,885:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:26,960:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:26,985:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:27,031:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:27,293:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:27,742:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:27,754:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:27,790:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:28,102:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:28,404:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:28,572:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:28,621:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:28,863:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:29,165:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:29,345:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:29,832:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:30,225:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:30,729:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:30,932:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:31,281:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:31,964:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:32,185:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:32,487:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:32,964:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:33,510:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:33,523:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:33,901:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:34,286:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:34,690:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:34,765:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:35,158:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:35,479:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:35,759:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:36,156:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:36,229:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:36,745:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:37,225:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:37,457:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:37,556:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:38,219:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:38,469:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:38,613:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:38,769:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:39,372:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:39,454:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:39,597:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:39,765:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:39,997:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:40,247:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:40,258:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:40,509:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:40,589:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:40,864:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:40,963:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:41,172:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:42,842:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:43,057:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:43,146:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:43,817:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:45,316:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:45,383:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:45,653:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:46,261:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:46,386:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:47,083:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:47,115:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:47,324:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:47,639:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:47,701:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:47,719:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:48,025:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:48,275:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:48,282:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:48,341:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:48,841:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:50,431:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:50,524:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:50,700:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:51,384:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:52,611:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:52,759:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:53,284:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:54,364:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:55,061:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:55,115:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:55,474:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:55,483:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:56,193:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:56,286:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:56,693:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:56,838:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:57,529:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:57,546:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:57,702:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:57,805:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:57,827:INFO:best_params: {'actual_estimator__n_estimators': 100, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__criterion': 'entropy'}
2025-02-28 13:30:57,831:INFO:Hyperparameter search completed
2025-02-28 13:30:57,832:INFO:SubProcess create_model() called ==================================
2025-02-28 13:30:57,834:INFO:Initializing create_model()
2025-02-28 13:30:57,834:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f39b5e0f040>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x7f39adaa4910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 100, 'min_samples_leaf': 5, 'criterion': 'entropy'})
2025-02-28 13:30:57,834:INFO:Checking exceptions
2025-02-28 13:30:57,834:INFO:Importing libraries
2025-02-28 13:30:57,834:INFO:Copying training dataset
2025-02-28 13:30:57,881:INFO:Defining folds
2025-02-28 13:30:57,881:INFO:Declaring metric variables
2025-02-28 13:30:57,891:INFO:Importing untrained model
2025-02-28 13:30:57,891:INFO:Declaring custom model
2025-02-28 13:30:57,898:INFO:Random Forest Classifier Imported successfully
2025-02-28 13:30:57,911:INFO:Starting cross validation
2025-02-28 13:30:57,913:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-28 13:30:59,440:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:59,444:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:59,445:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:59,450:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:59,452:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:59,457:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:59,462:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:59,464:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:59,469:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:59,471:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:59,477:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:30:59,480:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:00,870:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:00,885:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:00,901:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:00,917:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:00,917:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:00,924:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:00,925:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:00,933:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:00,937:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:00,939:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:00,948:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:00,956:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:01,817:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:01,826:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:01,835:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:01,855:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:01,859:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:01,863:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:01,880:INFO:Calculating mean and std
2025-02-28 13:31:01,882:INFO:Creating metrics dataframe
2025-02-28 13:31:01,889:INFO:Finalizing model
2025-02-28 13:31:02,436:INFO:Uploading results into container
2025-02-28 13:31:02,437:INFO:Uploading model into container now
2025-02-28 13:31:02,439:INFO:_master_model_container: 2
2025-02-28 13:31:02,439:INFO:_display_container: 3
2025-02-28 13:31:02,440:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-02-28 13:31:02,440:INFO:create_model() successfully completed......................................
2025-02-28 13:31:02,687:INFO:SubProcess create_model() end ==================================
2025-02-28 13:31:02,687:INFO:choose_better activated
2025-02-28 13:31:02,694:INFO:SubProcess create_model() called ==================================
2025-02-28 13:31:02,696:INFO:Initializing create_model()
2025-02-28 13:31:02,696:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f39b5e0f040>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-28 13:31:02,696:INFO:Checking exceptions
2025-02-28 13:31:02,700:INFO:Importing libraries
2025-02-28 13:31:02,700:INFO:Copying training dataset
2025-02-28 13:31:02,724:INFO:Defining folds
2025-02-28 13:31:02,725:INFO:Declaring metric variables
2025-02-28 13:31:02,725:INFO:Importing untrained model
2025-02-28 13:31:02,725:INFO:Declaring custom model
2025-02-28 13:31:02,727:INFO:Random Forest Classifier Imported successfully
2025-02-28 13:31:02,727:INFO:Starting cross validation
2025-02-28 13:31:02,729:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-28 13:31:05,485:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:05,494:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:05,504:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:05,507:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:05,516:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:05,523:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:05,571:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:05,579:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:05,587:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:05,628:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:05,637:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:05,643:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:08,481:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:08,488:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:08,489:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:08,495:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:08,503:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:08,511:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:08,672:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:08,689:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:08,699:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:08,842:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:08,849:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:08,855:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:10,429:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:10,435:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:10,441:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:10,791:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:10,802:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:10,812:WARNING:/home/dsg/VORTEX_FINAL/venv/lib/python3.10/site-packages/sklearn/metrics/_classification.py:1561: UserWarning: Note that pos_label (set to 'PDLC') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-28 13:31:10,831:INFO:Calculating mean and std
2025-02-28 13:31:10,832:INFO:Creating metrics dataframe
2025-02-28 13:31:10,838:INFO:Finalizing model
2025-02-28 13:31:11,799:INFO:Uploading results into container
2025-02-28 13:31:11,800:INFO:Uploading model into container now
2025-02-28 13:31:11,800:INFO:_master_model_container: 3
2025-02-28 13:31:11,801:INFO:_display_container: 4
2025-02-28 13:31:11,801:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-02-28 13:31:11,801:INFO:create_model() successfully completed......................................
2025-02-28 13:31:11,985:INFO:SubProcess create_model() end ==================================
2025-02-28 13:31:11,987:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) result for F1 is 0.9706
2025-02-28 13:31:11,989:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) result for F1 is 0.9678
2025-02-28 13:31:11,989:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) is best model
2025-02-28 13:31:11,990:INFO:choose_better completed
2025-02-28 13:31:11,990:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-02-28 13:31:12,011:INFO:_master_model_container: 3
2025-02-28 13:31:12,013:INFO:_display_container: 3
2025-02-28 13:31:12,014:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-02-28 13:31:12,016:INFO:tune_model() successfully completed......................................
2025-02-28 13:37:22,499:INFO:Initializing interpret_model()
2025-02-28 13:37:22,499:INFO:interpret_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={'class_names': ['Can_Tintorer', 'Encinasola', 'Aliste'], 'max_display': 46, 'color': <matplotlib.colors.ListedColormap object at 0x7f39adaa4f40>}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f39b5e0f040>)
2025-02-28 13:37:22,499:INFO:Checking exceptions
2025-02-28 13:37:22,499:INFO:Soft dependency imported: shap: 0.44.0
2025-02-28 13:37:23,244:INFO:plot type: summary
2025-02-28 13:37:23,245:INFO:Creating TreeExplainer
2025-02-28 13:37:23,258:INFO:Compiling shap values
2025-02-28 13:37:26,362:INFO:Visual Rendered Successfully
2025-02-28 13:37:26,362:INFO:interpret_model() successfully completed......................................
2025-02-28 13:37:59,335:INFO:Initializing interpret_model()
2025-02-28 13:37:59,336:INFO:interpret_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight='balanced',
                       criterion='entropy', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=5,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=200, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False), use_train_data=False, X_new_sample=None, y_new_sample=None, feature=None, kwargs={'class_names': ['Can_Tintorer', 'Encinasola', 'Aliste'], 'max_display': 46}, observation=None, plot=summary, save=False, self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f39b5e0f040>)
2025-02-28 13:37:59,336:INFO:Checking exceptions
2025-02-28 13:37:59,336:INFO:Soft dependency imported: shap: 0.44.0
2025-02-28 13:37:59,423:INFO:plot type: summary
2025-02-28 13:37:59,423:INFO:Creating TreeExplainer
2025-02-28 13:37:59,440:INFO:Compiling shap values
2025-02-28 13:38:02,517:INFO:Visual Rendered Successfully
2025-02-28 13:38:02,517:INFO:interpret_model() successfully completed......................................
2025-02-28 13:38:32,838:INFO:Initializing get_config()
2025-02-28 13:38:32,838:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f39b5e0f040>, variable=X_train)
2025-02-28 13:38:32,838:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2025-02-28 13:38:32,838:WARNING:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.

2025-02-28 13:38:32,859:INFO:Variable:  returned as              Al         Si          P         S        Cl         K        Ca  \
1479  21.269129  52.751781  20.069708  0.190650  0.637982  0.005799  1.662546   
335   23.118284  45.975990  28.078920  0.048384  0.679627  0.005501  0.082349   
1249  24.413755  24.691513  27.524775  0.744418  1.348286  0.005878  0.068056   
728   18.705660  45.095497  21.445589  3.601468  1.403939  2.904245  0.197452   
1835  36.696747  14.842984  35.900219  0.528142  2.882349  0.960174  0.101411   
...         ...        ...        ...       ...       ...       ...       ...   
1726  33.065529  27.891024  33.573391  0.575415  0.820950  0.687391  0.444901   
875   30.257610  22.002092  37.135899  0.708265  1.917146  0.005100  4.409623   
286   23.482368  29.865496  29.595087  2.066185  2.075848  1.357458  5.366835   
1106  24.899801  35.108177  28.354494  0.983204  2.902304  2.338488  0.990917   
396   19.731764  60.436352  10.823002  0.377695  1.039134  0.006079  4.126273   

            Sc        Ti         V  ...        Te        Ba        Ta  \
1479  0.005799  0.180271  0.165291  ...  0.000580  0.032642  0.000580   
335   0.005501  0.031946  0.124607  ...  0.000550  0.000550  0.000550   
1249  0.005878  0.246225  0.005878  ...  0.000588  0.000588  0.000588   
728   0.005693  0.279145  0.142491  ...  0.000569  0.000569  0.000569   
1835  0.005028  0.228821  0.163134  ...  0.000503  0.000503  0.002336   
...        ...       ...       ...  ...       ...       ...       ...   
1726  0.005220  0.173934  0.224445  ...  0.000522  0.000522  0.002120   
875   0.005100  0.554718  0.133763  ...  0.000510  0.035840  0.003692   
286   0.005430  1.171171  0.322127  ...  0.000543  0.280580  0.003931   
1106  0.005404  0.428441  0.352190  ...  0.000540  0.000540  0.000540   
396   0.006079  0.223634  0.111452  ...  0.000608  0.027753  0.002116   

             W        Au        Hg        Tl       Pb        Th       rand  
1479  0.000580  0.000580  0.000580  0.000580  0.00001  0.000580  31.703537  
335   0.000550  0.000550  0.000550  0.000550  0.00001  0.000550  30.081650  
1249  0.000588  0.000588  0.000588  0.000588  0.00001  0.000588  29.484409  
728   0.000569  0.000569  0.000569  0.000569  0.00001  0.000569  31.358761  
1835  0.000503  0.000503  0.000503  0.001192  0.00001  0.000503  31.282984  
...        ...       ...       ...       ...      ...       ...        ...  
1726  0.000522  0.000522  0.000522  0.000692  0.00001  0.000522  30.356281  
875   0.000510  0.000510  0.000510  0.000510  0.00001  0.000510  28.756454  
286   0.000543  0.000543  0.000543  0.000543  0.00001  0.000543  29.673195  
1106  0.000540  0.000540  0.000540  0.001322  0.00001  0.000540  31.538971  
396   0.000608  0.000608  0.000608  0.000608  0.00001  0.000608  32.924404  

[1804 rows x 45 columns]
2025-02-28 13:38:32,859:INFO:get_config() successfully completed......................................
2025-02-28 13:38:51,246:INFO:Initializing get_config()
2025-02-28 13:38:51,247:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f39b5e0f040>, variable=X_train)
2025-02-28 13:38:51,247:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2025-02-28 13:38:51,247:WARNING:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.

2025-02-28 13:38:51,267:INFO:Variable:  returned as              Al         Si          P         S        Cl         K        Ca  \
1479  21.269129  52.751781  20.069708  0.190650  0.637982  0.005799  1.662546   
335   23.118284  45.975990  28.078920  0.048384  0.679627  0.005501  0.082349   
1249  24.413755  24.691513  27.524775  0.744418  1.348286  0.005878  0.068056   
728   18.705660  45.095497  21.445589  3.601468  1.403939  2.904245  0.197452   
1835  36.696747  14.842984  35.900219  0.528142  2.882349  0.960174  0.101411   
...         ...        ...        ...       ...       ...       ...       ...   
1726  33.065529  27.891024  33.573391  0.575415  0.820950  0.687391  0.444901   
875   30.257610  22.002092  37.135899  0.708265  1.917146  0.005100  4.409623   
286   23.482368  29.865496  29.595087  2.066185  2.075848  1.357458  5.366835   
1106  24.899801  35.108177  28.354494  0.983204  2.902304  2.338488  0.990917   
396   19.731764  60.436352  10.823002  0.377695  1.039134  0.006079  4.126273   

            Sc        Ti         V  ...        Te        Ba        Ta  \
1479  0.005799  0.180271  0.165291  ...  0.000580  0.032642  0.000580   
335   0.005501  0.031946  0.124607  ...  0.000550  0.000550  0.000550   
1249  0.005878  0.246225  0.005878  ...  0.000588  0.000588  0.000588   
728   0.005693  0.279145  0.142491  ...  0.000569  0.000569  0.000569   
1835  0.005028  0.228821  0.163134  ...  0.000503  0.000503  0.002336   
...        ...       ...       ...  ...       ...       ...       ...   
1726  0.005220  0.173934  0.224445  ...  0.000522  0.000522  0.002120   
875   0.005100  0.554718  0.133763  ...  0.000510  0.035840  0.003692   
286   0.005430  1.171171  0.322127  ...  0.000543  0.280580  0.003931   
1106  0.005404  0.428441  0.352190  ...  0.000540  0.000540  0.000540   
396   0.006079  0.223634  0.111452  ...  0.000608  0.027753  0.002116   

             W        Au        Hg        Tl       Pb        Th       rand  
1479  0.000580  0.000580  0.000580  0.000580  0.00001  0.000580  31.703537  
335   0.000550  0.000550  0.000550  0.000550  0.00001  0.000550  30.081650  
1249  0.000588  0.000588  0.000588  0.000588  0.00001  0.000588  29.484409  
728   0.000569  0.000569  0.000569  0.000569  0.00001  0.000569  31.358761  
1835  0.000503  0.000503  0.000503  0.001192  0.00001  0.000503  31.282984  
...        ...       ...       ...       ...      ...       ...        ...  
1726  0.000522  0.000522  0.000522  0.000692  0.00001  0.000522  30.356281  
875   0.000510  0.000510  0.000510  0.000510  0.00001  0.000510  28.756454  
286   0.000543  0.000543  0.000543  0.000543  0.00001  0.000543  29.673195  
1106  0.000540  0.000540  0.000540  0.001322  0.00001  0.000540  31.538971  
396   0.000608  0.000608  0.000608  0.000608  0.00001  0.000608  32.924404  

[1804 rows x 45 columns]
2025-02-28 13:38:51,267:INFO:get_config() successfully completed......................................
2025-02-28 13:39:07,501:INFO:Initializing get_config()
2025-02-28 13:39:07,501:INFO:get_config(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f39b5e0f040>, variable=X_train)
2025-02-28 13:39:07,501:INFO:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.
2025-02-28 13:39:07,501:WARNING:Variable: 'X_train' used to return the transformed values in PyCaret 2.x. From PyCaret 3.x, this will return the raw values. If you need the transformed values, call get_config with 'X_train_transformed' instead.

2025-02-28 13:39:07,526:INFO:Variable:  returned as              Al         Si          P         S        Cl         K        Ca  \
1479  21.269129  52.751781  20.069708  0.190650  0.637982  0.005799  1.662546   
335   23.118284  45.975990  28.078920  0.048384  0.679627  0.005501  0.082349   
1249  24.413755  24.691513  27.524775  0.744418  1.348286  0.005878  0.068056   
728   18.705660  45.095497  21.445589  3.601468  1.403939  2.904245  0.197452   
1835  36.696747  14.842984  35.900219  0.528142  2.882349  0.960174  0.101411   
...         ...        ...        ...       ...       ...       ...       ...   
1726  33.065529  27.891024  33.573391  0.575415  0.820950  0.687391  0.444901   
875   30.257610  22.002092  37.135899  0.708265  1.917146  0.005100  4.409623   
286   23.482368  29.865496  29.595087  2.066185  2.075848  1.357458  5.366835   
1106  24.899801  35.108177  28.354494  0.983204  2.902304  2.338488  0.990917   
396   19.731764  60.436352  10.823002  0.377695  1.039134  0.006079  4.126273   

            Sc        Ti         V  ...        Te        Ba        Ta  \
1479  0.005799  0.180271  0.165291  ...  0.000580  0.032642  0.000580   
335   0.005501  0.031946  0.124607  ...  0.000550  0.000550  0.000550   
1249  0.005878  0.246225  0.005878  ...  0.000588  0.000588  0.000588   
728   0.005693  0.279145  0.142491  ...  0.000569  0.000569  0.000569   
1835  0.005028  0.228821  0.163134  ...  0.000503  0.000503  0.002336   
...        ...       ...       ...  ...       ...       ...       ...   
1726  0.005220  0.173934  0.224445  ...  0.000522  0.000522  0.002120   
875   0.005100  0.554718  0.133763  ...  0.000510  0.035840  0.003692   
286   0.005430  1.171171  0.322127  ...  0.000543  0.280580  0.003931   
1106  0.005404  0.428441  0.352190  ...  0.000540  0.000540  0.000540   
396   0.006079  0.223634  0.111452  ...  0.000608  0.027753  0.002116   

             W        Au        Hg        Tl       Pb        Th       rand  
1479  0.000580  0.000580  0.000580  0.000580  0.00001  0.000580  31.703537  
335   0.000550  0.000550  0.000550  0.000550  0.00001  0.000550  30.081650  
1249  0.000588  0.000588  0.000588  0.000588  0.00001  0.000588  29.484409  
728   0.000569  0.000569  0.000569  0.000569  0.00001  0.000569  31.358761  
1835  0.000503  0.000503  0.000503  0.001192  0.00001  0.000503  31.282984  
...        ...       ...       ...       ...      ...       ...        ...  
1726  0.000522  0.000522  0.000522  0.000692  0.00001  0.000522  30.356281  
875   0.000510  0.000510  0.000510  0.000510  0.00001  0.000510  28.756454  
286   0.000543  0.000543  0.000543  0.000543  0.00001  0.000543  29.673195  
1106  0.000540  0.000540  0.000540  0.001322  0.00001  0.000540  31.538971  
396   0.000608  0.000608  0.000608  0.000608  0.00001  0.000608  32.924404  

[1804 rows x 45 columns]
2025-02-28 13:39:07,526:INFO:get_config() successfully completed......................................
2025-03-01 12:33:32,421:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-01 12:33:32,422:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-01 12:33:32,422:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-01 12:33:32,422:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-03 13:55:42,462:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-03 13:55:42,463:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-03 13:55:42,463:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-03 13:55:42,463:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-03 20:32:15,129:INFO:Initializing load_model()
2025-03-03 20:32:15,137:INFO:load_model(model_name=models/20250227_QuiruelasSpecific, platform=None, authentication=None, verbose=True)
2025-03-03 20:32:24,856:INFO:Initializing load_model()
2025-03-03 20:32:24,857:INFO:load_model(model_name=models/20250227_QuiruelasSpecific, platform=None, authentication=None, verbose=True)
2025-03-03 20:33:00,816:INFO:Initializing load_model()
2025-03-03 20:33:00,819:INFO:load_model(model_name=/home/dsg/VORTEX_FINAL/PRODUCTION/models/20250227_QuiruelasSpecific, platform=None, authentication=None, verbose=True)
2025-03-03 20:33:37,596:INFO:Initializing load_model()
2025-03-03 20:33:37,597:INFO:load_model(model_name=/home/dsg/VORTEX_FINAL/PRODUCTION/models/20250227_QuiruelasSpecific, platform=None, authentication=None, verbose=True)
2025-03-03 20:34:11,414:INFO:Initializing load_model()
2025-03-03 20:34:11,414:INFO:load_model(model_name=/home/dsg/VORTEX_FINAL/PRODUCTION/models/20250227_QuiruelasSpecific, platform=None, authentication=None, verbose=True)
2025-03-03 20:34:11,990:INFO:Initializing predict_model()
2025-03-03 20:34:11,990:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6865e1bf70>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Al', 'Si', 'P', 'K', 'Ca', 'Ti',
                                             'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ga',
                                             'Zn', 'As', 'Rb', 'Sr', 'Zr'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5,
                                        estimator=RandomForestClassifier(class_weight='balanced',
                                                                         criterion='entropy',
                                                                         min_samples_leaf=5,
                                                                         n_estimators=200,
                                                                         n_jobs=-1,
                                                                         random_state=42)))]), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7f6864bf97e0>)
2025-03-03 20:34:11,990:INFO:Checking exceptions
2025-03-03 20:34:11,990:INFO:Preloading libraries
2025-03-03 20:34:11,996:INFO:Set up data.
2025-03-03 20:34:12,018:INFO:Set up index.
2025-03-03 20:36:43,280:INFO:Initializing load_model()
2025-03-03 20:36:43,280:INFO:load_model(model_name=/home/dsg/VORTEX_FINAL/PRODUCTION/models/20250227_QuiruelasSpecific, platform=None, authentication=None, verbose=True)
2025-03-03 20:36:43,745:INFO:Initializing predict_model()
2025-03-03 20:36:43,745:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6864383e80>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Al', 'Si', 'P', 'K', 'Ca', 'Ti',
                                             'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ga',
                                             'Zn', 'As', 'Rb', 'Sr', 'Zr'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5,
                                        estimator=RandomForestClassifier(class_weight='balanced',
                                                                         criterion='entropy',
                                                                         min_samples_leaf=5,
                                                                         n_estimators=200,
                                                                         n_jobs=-1,
                                                                         random_state=42)))]), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7f6864bfb640>)
2025-03-03 20:36:43,745:INFO:Checking exceptions
2025-03-03 20:36:43,746:INFO:Preloading libraries
2025-03-03 20:36:43,746:INFO:Set up data.
2025-03-03 20:36:43,754:INFO:Set up index.
2025-03-03 20:38:46,926:INFO:Initializing load_model()
2025-03-03 20:38:46,926:INFO:load_model(model_name=/home/dsg/VORTEX_FINAL/PRODUCTION/models/20250227_QuiruelasSpecific, platform=None, authentication=None, verbose=True)
2025-03-03 20:38:47,455:INFO:Initializing predict_model()
2025-03-03 20:38:47,455:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6865b6be20>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Al', 'Si', 'P', 'K', 'Ca', 'Ti',
                                             'V', 'Cr', 'Mn', 'Fe', 'Co', 'Ga',
                                             'Zn', 'As', 'Rb', 'Sr', 'Zr'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5,
                                        estimator=RandomForestClassifier(class_weight='balanced',
                                                                         criterion='entropy',
                                                                         min_samples_leaf=5,
                                                                         n_estimators=200,
                                                                         n_jobs=-1,
                                                                         random_state=42)))]), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7f6864bfb640>)
2025-03-03 20:38:47,455:INFO:Checking exceptions
2025-03-03 20:38:47,455:INFO:Preloading libraries
2025-03-03 20:38:47,456:INFO:Set up data.
2025-03-03 20:38:47,465:INFO:Set up index.
2025-03-04 18:15:23,086:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-04 18:15:23,090:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-04 18:15:23,090:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-04 18:15:23,090:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-04 18:16:22,924:INFO:Initializing load_model()
2025-03-04 18:16:22,928:INFO:load_model(model_name=/home/dsg/VORTEX_FINAL/PRODUCTION/models/20250227_VdHSpecific, platform=None, authentication=None, verbose=True)
2025-03-05 07:40:15,346:INFO:Initializing load_model()
2025-03-05 07:40:15,349:INFO:load_model(model_name=/home/dsg/VORTEX_FINAL/PRODUCTION/models/20250227_VdHSpecific, platform=None, authentication=None, verbose=True)
2025-03-05 07:41:52,260:INFO:Initializing load_model()
2025-03-05 07:41:52,261:INFO:load_model(model_name=/home/dsg/VORTEX_FINAL/PRODUCTION/models/20250227_VdHSpecific, platform=None, authentication=None, verbose=True)
2025-03-05 07:41:53,428:INFO:Initializing predict_model()
2025-03-05 07:41:53,428:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x7f6865e1b010>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(include=['Al', 'Si', 'P', 'S', 'Cl', 'K',
                                             'Ti', 'V', 'Cr', 'Mn', 'Fe', 'Co',
                                             'Ni', 'Cu', 'Zn', 'As', 'Rb', 'Sr',
                                             'Zr'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('actual_estimator',
                 CalibratedClassifierCV(cv=5,
                                        estimator=RandomForestClassifier(class_weight='balanced',
                                                                         criterion='entropy',
                                                                         min_samples_leaf=5,
                                                                         n_estimators=50,
                                                                         n_jobs=-1,
                                                                         random_state=42)))]), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x7f6864c13d90>)
2025-03-05 07:41:53,428:INFO:Checking exceptions
2025-03-05 07:41:53,428:INFO:Preloading libraries
2025-03-06 13:17:37,599:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-06 13:17:37,600:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-06 13:17:37,600:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-06 13:17:37,600:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-06 13:17:40,228:INFO:Initializing load_model()
2025-03-06 13:17:40,228:INFO:load_model(model_name=/home/dsg/VORTEX_FINAL/PRODUCTION/outputs/experiment_20250304_112504/models/final_model, platform=None, authentication=None, verbose=True)
2025-03-06 13:19:47,627:INFO:Initializing load_model()
2025-03-06 13:19:47,628:INFO:load_model(model_name=/home/dsg/VORTEX_FINAL/PRODUCTION/outputs/experiment_20250304_112504/models/final_model_direct, platform=None, authentication=None, verbose=True)
2025-03-06 13:24:35,631:INFO:Initializing load_model()
2025-03-06 13:24:35,632:INFO:load_model(model_name=/home/dsg/VORTEX_FINAL/PRODUCTION/outputs/experiment_20250304_112504/models/rf_French_calibrated, platform=None, authentication=None, verbose=True)
